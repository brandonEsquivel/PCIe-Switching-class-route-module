/* Generated by Yosys 0.9 (git sha1 UNKNOWN, gcc 7.5.0-3ubuntu1~18.04 -fPIC -Os) */

(* dynports =  1  *)
(* src = "./src/memory_6x8_syn.v:9" *)
module \$paramod\memory6x8\DATA_SIZE=8\MAIN_SIZE=6 (clk, reset, write, read, wr_ptr, rd_ptr, data_in, data_out);
  (* src = "./src/memory_6x8_syn.v:32" *)
  wire [31:0] _000_;
  (* src = "./src/memory_6x8_syn.v:32" *)
  wire [7:0] _001_;
  (* src = "./src/memory_6x8_syn.v:32" *)
  wire [31:0] _002_;
  (* src = "./src/memory_6x8_syn.v:32" *)
  (* unused_bits = "3 4 5" *)
  wire [5:0] _003_;
  (* src = "./src/memory_6x8_syn.v:32" *)
  wire [7:0] _004_;
  (* src = "./src/memory_6x8_syn.v:32" *)
  wire [7:0] _005_;
  (* src = "./src/memory_6x8_syn.v:46" *)
  wire [5:0] _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire [7:0] _040_;
  wire [7:0] _041_;
  wire [7:0] _042_;
  wire [7:0] _043_;
  wire [7:0] _044_;
  wire [7:0] _045_;
  wire [7:0] _046_;
  wire [7:0] _047_;
  wire [7:0] _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire [7:0] _070_;
  wire [7:0] _071_;
  wire [7:0] _072_;
  wire [7:0] _073_;
  wire [7:0] _074_;
  wire [7:0] _075_;
  wire [7:0] _076_;
  wire [7:0] _077_;
  wire [7:0] _078_;
  wire [7:0] _079_;
  wire [7:0] _080_;
  wire [7:0] _081_;
  wire [7:0] _082_;
  wire [7:0] _083_;
  wire [7:0] _084_;
  wire [7:0] _085_;
  wire [7:0] _086_;
  wire [7:0] _087_;
  wire [7:0] _088_;
  wire [7:0] _089_;
  wire [7:0] _090_;
  (* src = "./src/memory_6x8_syn.v:58" *)
  wire [7:0] _091_;
  wire [7:0] _092_;
  (* unused_bits = "3 4 5" *)
  wire [5:0] _093_;
  (* src = "./src/memory_6x8_syn.v:14" *)
  input clk;
  (* src = "./src/memory_6x8_syn.v:20" *)
  input [7:0] data_in;
  (* src = "./src/memory_6x8_syn.v:22" *)
  output [7:0] data_out;
  (* src = "./src/memory_6x8_syn.v:29" *)
  wire [5:0] ff_mem;
  (* src = "./src/memory_6x8_syn.v:27" *)
  wire [31:0] i;
  wire [7:0] \mem[0] ;
  wire [7:0] \mem[1] ;
  wire [7:0] \mem[2] ;
  wire [7:0] \mem[3] ;
  wire [7:0] \mem[4] ;
  wire [7:0] \mem[5] ;
  (* src = "./src/memory_6x8_syn.v:19" *)
  input [5:0] rd_ptr;
  (* src = "./src/memory_6x8_syn.v:17" *)
  input read;
  (* src = "./src/memory_6x8_syn.v:15" *)
  input reset;
  (* src = "./src/memory_6x8_syn.v:18" *)
  input [5:0] wr_ptr;
  (* src = "./src/memory_6x8_syn.v:16" *)
  input write;
  assign _044_[0] = rd_ptr[0] ? \mem[3] [0] : \mem[2] [0];
  assign _044_[1] = rd_ptr[0] ? \mem[3] [1] : \mem[2] [1];
  assign _044_[2] = rd_ptr[0] ? \mem[3] [2] : \mem[2] [2];
  assign _044_[3] = rd_ptr[0] ? \mem[3] [3] : \mem[2] [3];
  assign _044_[4] = rd_ptr[0] ? \mem[3] [4] : \mem[2] [4];
  assign _044_[5] = rd_ptr[0] ? \mem[3] [5] : \mem[2] [5];
  assign _044_[6] = rd_ptr[0] ? \mem[3] [6] : \mem[2] [6];
  assign _044_[7] = rd_ptr[0] ? \mem[3] [7] : \mem[2] [7];
  assign _043_[0] = rd_ptr[0] ? \mem[1] [0] : \mem[0] [0];
  assign _043_[1] = rd_ptr[0] ? \mem[1] [1] : \mem[0] [1];
  assign _043_[2] = rd_ptr[0] ? \mem[1] [2] : \mem[0] [2];
  assign _043_[3] = rd_ptr[0] ? \mem[1] [3] : \mem[0] [3];
  assign _043_[4] = rd_ptr[0] ? \mem[1] [4] : \mem[0] [4];
  assign _043_[5] = rd_ptr[0] ? \mem[1] [5] : \mem[0] [5];
  assign _043_[6] = rd_ptr[0] ? \mem[1] [6] : \mem[0] [6];
  assign _043_[7] = rd_ptr[0] ? \mem[1] [7] : \mem[0] [7];
  assign _042_[0] = rd_ptr[1] ? _046_[0] : _045_[0];
  assign _042_[1] = rd_ptr[1] ? _046_[1] : _045_[1];
  assign _042_[2] = rd_ptr[1] ? _046_[2] : _045_[2];
  assign _042_[3] = rd_ptr[1] ? _046_[3] : _045_[3];
  assign _042_[4] = rd_ptr[1] ? _046_[4] : _045_[4];
  assign _042_[5] = rd_ptr[1] ? _046_[5] : _045_[5];
  assign _042_[6] = rd_ptr[1] ? _046_[6] : _045_[6];
  assign _042_[7] = rd_ptr[1] ? _046_[7] : _045_[7];
  assign _041_[0] = rd_ptr[1] ? _044_[0] : _043_[0];
  assign _041_[1] = rd_ptr[1] ? _044_[1] : _043_[1];
  assign _041_[2] = rd_ptr[1] ? _044_[2] : _043_[2];
  assign _041_[3] = rd_ptr[1] ? _044_[3] : _043_[3];
  assign _041_[4] = rd_ptr[1] ? _044_[4] : _043_[4];
  assign _041_[5] = rd_ptr[1] ? _044_[5] : _043_[5];
  assign _041_[6] = rd_ptr[1] ? _044_[6] : _043_[6];
  assign _041_[7] = rd_ptr[1] ? _044_[7] : _043_[7];
  assign _088_[0] = _067_ ? _000_[31] : \mem[5] [0];
  assign _088_[1] = _067_ ? _000_[31] : \mem[5] [1];
  assign _088_[2] = _067_ ? _000_[31] : \mem[5] [2];
  assign _088_[3] = _067_ ? _000_[31] : \mem[5] [3];
  assign _088_[4] = _067_ ? _000_[31] : \mem[5] [4];
  assign _088_[5] = _067_ ? _000_[31] : \mem[5] [5];
  assign _088_[6] = _067_ ? _000_[31] : \mem[5] [6];
  assign _088_[7] = _067_ ? _000_[31] : \mem[5] [7];
  assign _081_[0] = _060_ ? _040_[0] : _080_[0];
  assign _081_[1] = _060_ ? _040_[1] : _080_[1];
  assign _081_[2] = _060_ ? _040_[2] : _080_[2];
  assign _081_[3] = _060_ ? _040_[3] : _080_[3];
  assign _081_[4] = _060_ ? _040_[4] : _080_[4];
  assign _081_[5] = _060_ ? _040_[5] : _080_[5];
  assign _081_[6] = _060_ ? _040_[6] : _080_[6];
  assign _081_[7] = _060_ ? _040_[7] : _080_[7];
  assign _084_[0] = _063_ ? _040_[0] : _083_[0];
  assign _084_[1] = _063_ ? _040_[1] : _083_[1];
  assign _084_[2] = _063_ ? _040_[2] : _083_[2];
  assign _084_[3] = _063_ ? _040_[3] : _083_[3];
  assign _084_[4] = _063_ ? _040_[4] : _083_[4];
  assign _084_[5] = _063_ ? _040_[5] : _083_[5];
  assign _084_[6] = _063_ ? _040_[6] : _083_[6];
  assign _084_[7] = _063_ ? _040_[7] : _083_[7];
  assign _083_[0] = _062_ ? _000_[31] : _082_[0];
  assign _083_[1] = _062_ ? _000_[31] : _082_[1];
  assign _083_[2] = _062_ ? _000_[31] : _082_[2];
  assign _083_[3] = _062_ ? _000_[31] : _082_[3];
  assign _083_[4] = _062_ ? _000_[31] : _082_[4];
  assign _083_[5] = _062_ ? _000_[31] : _082_[5];
  assign _083_[6] = _062_ ? _000_[31] : _082_[6];
  assign _083_[7] = _062_ ? _000_[31] : _082_[7];
  assign _082_[0] = _061_ ? _000_[31] : \mem[3] [0];
  assign _082_[1] = _061_ ? _000_[31] : \mem[3] [1];
  assign _082_[2] = _061_ ? _000_[31] : \mem[3] [2];
  assign _082_[3] = _061_ ? _000_[31] : \mem[3] [3];
  assign _082_[4] = _061_ ? _000_[31] : \mem[3] [4];
  assign _082_[5] = _061_ ? _000_[31] : \mem[3] [5];
  assign _082_[6] = _061_ ? _000_[31] : \mem[3] [6];
  assign _082_[7] = _061_ ? _000_[31] : \mem[3] [7];
  assign _087_[0] = _066_ ? _040_[0] : _086_[0];
  assign _087_[1] = _066_ ? _040_[1] : _086_[1];
  assign _087_[2] = _066_ ? _040_[2] : _086_[2];
  assign _087_[3] = _066_ ? _040_[3] : _086_[3];
  assign _087_[4] = _066_ ? _040_[4] : _086_[4];
  assign _087_[5] = _066_ ? _040_[5] : _086_[5];
  assign _087_[6] = _066_ ? _040_[6] : _086_[6];
  assign _087_[7] = _066_ ? _040_[7] : _086_[7];
  assign _086_[0] = _065_ ? _000_[31] : _085_[0];
  assign _086_[1] = _065_ ? _000_[31] : _085_[1];
  assign _086_[2] = _065_ ? _000_[31] : _085_[2];
  assign _086_[3] = _065_ ? _000_[31] : _085_[3];
  assign _086_[4] = _065_ ? _000_[31] : _085_[4];
  assign _086_[5] = _065_ ? _000_[31] : _085_[5];
  assign _086_[6] = _065_ ? _000_[31] : _085_[6];
  assign _086_[7] = _065_ ? _000_[31] : _085_[7];
  assign _037_ = _005_[7] ? _003_[0] : _000_[31];
  assign _038_ = _005_[7] ? _003_[1] : _000_[31];
  assign _039_ = _005_[7] ? _003_[2] : _002_[0];
  assign _040_[0] = _005_[7] ? _004_[0] : _000_[31];
  assign _040_[1] = _005_[7] ? _004_[1] : _000_[31];
  assign _040_[2] = _005_[7] ? _004_[2] : _000_[31];
  assign _040_[3] = _005_[7] ? _004_[3] : _000_[31];
  assign _040_[4] = _005_[7] ? _004_[4] : _000_[31];
  assign _040_[5] = _005_[7] ? _004_[5] : _000_[31];
  assign _040_[6] = _005_[7] ? _004_[6] : _000_[31];
  assign _040_[7] = _005_[7] ? _004_[7] : _000_[31];
  assign _076_[0] = _055_ ? _000_[31] : _075_[0];
  assign _076_[1] = _055_ ? _000_[31] : _075_[1];
  assign _076_[2] = _055_ ? _000_[31] : _075_[2];
  assign _076_[3] = _055_ ? _000_[31] : _075_[3];
  assign _076_[4] = _055_ ? _000_[31] : _075_[4];
  assign _076_[5] = _055_ ? _000_[31] : _075_[5];
  assign _076_[6] = _055_ ? _000_[31] : _075_[6];
  assign _076_[7] = _055_ ? _000_[31] : _075_[7];
  assign _075_[0] = _054_ ? _000_[31] : \mem[1] [0];
  assign _075_[1] = _054_ ? _000_[31] : \mem[1] [1];
  assign _075_[2] = _054_ ? _000_[31] : \mem[1] [2];
  assign _075_[3] = _054_ ? _000_[31] : \mem[1] [3];
  assign _075_[4] = _054_ ? _000_[31] : \mem[1] [4];
  assign _075_[5] = _054_ ? _000_[31] : \mem[1] [5];
  assign _075_[6] = _054_ ? _000_[31] : \mem[1] [6];
  assign _075_[7] = _054_ ? _000_[31] : \mem[1] [7];
  assign _074_[0] = _053_ ? _040_[0] : _073_[0];
  assign _074_[1] = _053_ ? _040_[1] : _073_[1];
  assign _074_[2] = _053_ ? _040_[2] : _073_[2];
  assign _074_[3] = _053_ ? _040_[3] : _073_[3];
  assign _074_[4] = _053_ ? _040_[4] : _073_[4];
  assign _074_[5] = _053_ ? _040_[5] : _073_[5];
  assign _074_[6] = _053_ ? _040_[6] : _073_[6];
  assign _074_[7] = _053_ ? _040_[7] : _073_[7];
  assign _085_[0] = _064_ ? _000_[31] : \mem[4] [0];
  assign _085_[1] = _064_ ? _000_[31] : \mem[4] [1];
  assign _085_[2] = _064_ ? _000_[31] : \mem[4] [2];
  assign _085_[3] = _064_ ? _000_[31] : \mem[4] [3];
  assign _085_[4] = _064_ ? _000_[31] : \mem[4] [4];
  assign _085_[5] = _064_ ? _000_[31] : \mem[4] [5];
  assign _085_[6] = _064_ ? _000_[31] : \mem[4] [6];
  assign _085_[7] = _064_ ? _000_[31] : \mem[4] [7];
  assign _080_[0] = _059_ ? _000_[31] : _079_[0];
  assign _080_[1] = _059_ ? _000_[31] : _079_[1];
  assign _080_[2] = _059_ ? _000_[31] : _079_[2];
  assign _080_[3] = _059_ ? _000_[31] : _079_[3];
  assign _080_[4] = _059_ ? _000_[31] : _079_[4];
  assign _080_[5] = _059_ ? _000_[31] : _079_[5];
  assign _080_[6] = _059_ ? _000_[31] : _079_[6];
  assign _080_[7] = _059_ ? _000_[31] : _079_[7];
  assign _089_[0] = _068_ ? _000_[31] : _088_[0];
  assign _089_[1] = _068_ ? _000_[31] : _088_[1];
  assign _089_[2] = _068_ ? _000_[31] : _088_[2];
  assign _089_[3] = _068_ ? _000_[31] : _088_[3];
  assign _089_[4] = _068_ ? _000_[31] : _088_[4];
  assign _089_[5] = _068_ ? _000_[31] : _088_[5];
  assign _089_[6] = _068_ ? _000_[31] : _088_[6];
  assign _089_[7] = _068_ ? _000_[31] : _088_[7];
  assign _079_[0] = _058_ ? _000_[31] : \mem[2] [0];
  assign _079_[1] = _058_ ? _000_[31] : \mem[2] [1];
  assign _079_[2] = _058_ ? _000_[31] : \mem[2] [2];
  assign _079_[3] = _058_ ? _000_[31] : \mem[2] [3];
  assign _079_[4] = _058_ ? _000_[31] : \mem[2] [4];
  assign _079_[5] = _058_ ? _000_[31] : \mem[2] [5];
  assign _079_[6] = _058_ ? _000_[31] : \mem[2] [6];
  assign _079_[7] = _058_ ? _000_[31] : \mem[2] [7];
  assign _090_[0] = _069_ ? _040_[0] : _089_[0];
  assign _090_[1] = _069_ ? _040_[1] : _089_[1];
  assign _090_[2] = _069_ ? _040_[2] : _089_[2];
  assign _090_[3] = _069_ ? _040_[3] : _089_[3];
  assign _090_[4] = _069_ ? _040_[4] : _089_[4];
  assign _090_[5] = _069_ ? _040_[5] : _089_[5];
  assign _090_[6] = _069_ ? _040_[6] : _089_[6];
  assign _090_[7] = _069_ ? _040_[7] : _089_[7];
  assign _078_[0] = _057_ ? _040_[0] : _077_[0];
  assign _078_[1] = _057_ ? _040_[1] : _077_[1];
  assign _078_[2] = _057_ ? _040_[2] : _077_[2];
  assign _078_[3] = _057_ ? _040_[3] : _077_[3];
  assign _078_[4] = _057_ ? _040_[4] : _077_[4];
  assign _078_[5] = _057_ ? _040_[5] : _077_[5];
  assign _078_[6] = _057_ ? _040_[6] : _077_[6];
  assign _078_[7] = _057_ ? _040_[7] : _077_[7];
  assign data_out[0] = read ? (* src = "./src/memory_6x8_syn.v:57" *) _091_[0] : ff_mem[0];
  assign data_out[1] = read ? (* src = "./src/memory_6x8_syn.v:57" *) _091_[1] : ff_mem[1];
  assign data_out[2] = read ? (* src = "./src/memory_6x8_syn.v:57" *) _091_[2] : ff_mem[2];
  assign data_out[3] = read ? (* src = "./src/memory_6x8_syn.v:57" *) _091_[3] : ff_mem[3];
  assign data_out[4] = read ? (* src = "./src/memory_6x8_syn.v:57" *) _091_[4] : ff_mem[4];
  assign data_out[5] = read ? (* src = "./src/memory_6x8_syn.v:57" *) _091_[5] : ff_mem[5];
  assign data_out[6] = read ? (* src = "./src/memory_6x8_syn.v:57" *) _091_[6] : 1'h0;
  assign data_out[7] = read ? (* src = "./src/memory_6x8_syn.v:57" *) _091_[7] : 1'h0;
  assign _006_[0] = reset ? (* src = "./src/memory_6x8_syn.v:47" *) data_out[0] : 1'h0;
  assign _006_[1] = reset ? (* src = "./src/memory_6x8_syn.v:47" *) data_out[1] : 1'h0;
  assign _006_[2] = reset ? (* src = "./src/memory_6x8_syn.v:47" *) data_out[2] : 1'h0;
  assign _006_[3] = reset ? (* src = "./src/memory_6x8_syn.v:47" *) data_out[3] : 1'h0;
  assign _006_[4] = reset ? (* src = "./src/memory_6x8_syn.v:47" *) data_out[4] : 1'h0;
  assign _006_[5] = reset ? (* src = "./src/memory_6x8_syn.v:47" *) data_out[5] : 1'h0;
  assign _077_[0] = _056_ ? _000_[31] : _076_[0];
  assign _077_[1] = _056_ ? _000_[31] : _076_[1];
  assign _077_[2] = _056_ ? _000_[31] : _076_[2];
  assign _077_[3] = _056_ ? _000_[31] : _076_[3];
  assign _077_[4] = _056_ ? _000_[31] : _076_[4];
  assign _077_[5] = _056_ ? _000_[31] : _076_[5];
  assign _077_[6] = _056_ ? _000_[31] : _076_[6];
  assign _077_[7] = _056_ ? _000_[31] : _076_[7];
  assign _073_[0] = _052_ ? _000_[31] : _072_[0];
  assign _073_[1] = _052_ ? _000_[31] : _072_[1];
  assign _073_[2] = _052_ ? _000_[31] : _072_[2];
  assign _073_[3] = _052_ ? _000_[31] : _072_[3];
  assign _073_[4] = _052_ ? _000_[31] : _072_[4];
  assign _073_[5] = _052_ ? _000_[31] : _072_[5];
  assign _073_[6] = _052_ ? _000_[31] : _072_[6];
  assign _073_[7] = _052_ ? _000_[31] : _072_[7];
  assign _072_[0] = _051_ ? _000_[31] : _071_[0];
  assign _072_[1] = _051_ ? _000_[31] : _071_[1];
  assign _072_[2] = _051_ ? _000_[31] : _071_[2];
  assign _072_[3] = _051_ ? _000_[31] : _071_[3];
  assign _072_[4] = _051_ ? _000_[31] : _071_[4];
  assign _072_[5] = _051_ ? _000_[31] : _071_[5];
  assign _072_[6] = _051_ ? _000_[31] : _071_[6];
  assign _072_[7] = _051_ ? _000_[31] : _071_[7];
  assign _071_[0] = _050_ ? _000_[31] : _070_[0];
  assign _071_[1] = _050_ ? _000_[31] : _070_[1];
  assign _071_[2] = _050_ ? _000_[31] : _070_[2];
  assign _071_[3] = _050_ ? _000_[31] : _070_[3];
  assign _071_[4] = _050_ ? _000_[31] : _070_[4];
  assign _071_[5] = _050_ ? _000_[31] : _070_[5];
  assign _071_[6] = _050_ ? _000_[31] : _070_[6];
  assign _071_[7] = _050_ ? _000_[31] : _070_[7];
  assign _001_[7] = ~(* src = "./src/memory_6x8_syn.v:33" *) reset;
  assign _005_[7] = reset ? (* src = "./src/memory_6x8_syn.v:33" *) write : 1'h0;
  assign _002_[0] = reset ? (* src = "./src/memory_6x8_syn.v:33" *) 1'hx : 1'h1;
  assign _000_[31] = reset ? (* src = "./src/memory_6x8_syn.v:33" *) 1'hx : 1'h0;
  assign _093_[0] = write ? (* src = "./src/memory_6x8_syn.v:39" *) wr_ptr[0] : 1'hx;
  assign _093_[1] = write ? (* src = "./src/memory_6x8_syn.v:39" *) wr_ptr[1] : 1'hx;
  assign _093_[2] = write ? (* src = "./src/memory_6x8_syn.v:39" *) wr_ptr[2] : 1'hx;
  assign _070_[0] = _049_ ? _000_[31] : \mem[0] [0];
  assign _070_[1] = _049_ ? _000_[31] : \mem[0] [1];
  assign _070_[2] = _049_ ? _000_[31] : \mem[0] [2];
  assign _070_[3] = _049_ ? _000_[31] : \mem[0] [3];
  assign _070_[4] = _049_ ? _000_[31] : \mem[0] [4];
  assign _070_[5] = _049_ ? _000_[31] : \mem[0] [5];
  assign _070_[6] = _049_ ? _000_[31] : \mem[0] [6];
  assign _070_[7] = _049_ ? _000_[31] : \mem[0] [7];
  assign _092_[0] = write ? (* src = "./src/memory_6x8_syn.v:39" *) data_in[0] : 1'hx;
  assign _092_[1] = write ? (* src = "./src/memory_6x8_syn.v:39" *) data_in[1] : 1'hx;
  assign _092_[2] = write ? (* src = "./src/memory_6x8_syn.v:39" *) data_in[2] : 1'hx;
  assign _092_[3] = write ? (* src = "./src/memory_6x8_syn.v:39" *) data_in[3] : 1'hx;
  assign _092_[4] = write ? (* src = "./src/memory_6x8_syn.v:39" *) data_in[4] : 1'hx;
  assign _092_[5] = write ? (* src = "./src/memory_6x8_syn.v:39" *) data_in[5] : 1'hx;
  assign _092_[6] = write ? (* src = "./src/memory_6x8_syn.v:39" *) data_in[6] : 1'hx;
  assign _092_[7] = write ? (* src = "./src/memory_6x8_syn.v:39" *) data_in[7] : 1'hx;
  assign _004_[0] = reset ? (* src = "./src/memory_6x8_syn.v:33" *) _092_[0] : 1'hx;
  assign _004_[1] = reset ? (* src = "./src/memory_6x8_syn.v:33" *) _092_[1] : 1'hx;
  assign _004_[2] = reset ? (* src = "./src/memory_6x8_syn.v:33" *) _092_[2] : 1'hx;
  assign _004_[3] = reset ? (* src = "./src/memory_6x8_syn.v:33" *) _092_[3] : 1'hx;
  assign _004_[4] = reset ? (* src = "./src/memory_6x8_syn.v:33" *) _092_[4] : 1'hx;
  assign _004_[5] = reset ? (* src = "./src/memory_6x8_syn.v:33" *) _092_[5] : 1'hx;
  assign _004_[6] = reset ? (* src = "./src/memory_6x8_syn.v:33" *) _092_[6] : 1'hx;
  assign _004_[7] = reset ? (* src = "./src/memory_6x8_syn.v:33" *) _092_[7] : 1'hx;
  assign _003_[0] = reset ? (* src = "./src/memory_6x8_syn.v:33" *) _093_[0] : 1'hx;
  assign _003_[1] = reset ? (* src = "./src/memory_6x8_syn.v:33" *) _093_[1] : 1'hx;
  assign _003_[2] = reset ? (* src = "./src/memory_6x8_syn.v:33" *) _093_[2] : 1'hx;
  assign _046_[0] = rd_ptr[0] ? _048_[0] : _047_[0];
  assign _046_[1] = rd_ptr[0] ? _048_[1] : _047_[1];
  assign _046_[2] = rd_ptr[0] ? _048_[2] : _047_[2];
  assign _046_[3] = rd_ptr[0] ? _048_[3] : _047_[3];
  assign _046_[4] = rd_ptr[0] ? _048_[4] : _047_[4];
  assign _046_[5] = rd_ptr[0] ? _048_[5] : _047_[5];
  assign _046_[6] = rd_ptr[0] ? _048_[6] : _047_[6];
  assign _046_[7] = rd_ptr[0] ? _048_[7] : _047_[7];
  assign _045_[0] = rd_ptr[0] ? \mem[5] [0] : \mem[4] [0];
  assign _045_[1] = rd_ptr[0] ? \mem[5] [1] : \mem[4] [1];
  assign _045_[2] = rd_ptr[0] ? \mem[5] [2] : \mem[4] [2];
  assign _045_[3] = rd_ptr[0] ? \mem[5] [3] : \mem[4] [3];
  assign _045_[4] = rd_ptr[0] ? \mem[5] [4] : \mem[4] [4];
  assign _045_[5] = rd_ptr[0] ? \mem[5] [5] : \mem[4] [5];
  assign _045_[6] = rd_ptr[0] ? \mem[5] [6] : \mem[4] [6];
  assign _045_[7] = rd_ptr[0] ? \mem[5] [7] : \mem[4] [7];
  assign _091_[0] = rd_ptr[2] ? _042_[0] : _041_[0];
  assign _091_[1] = rd_ptr[2] ? _042_[1] : _041_[1];
  assign _091_[2] = rd_ptr[2] ? _042_[2] : _041_[2];
  assign _091_[3] = rd_ptr[2] ? _042_[3] : _041_[3];
  assign _091_[4] = rd_ptr[2] ? _042_[4] : _041_[4];
  assign _091_[5] = rd_ptr[2] ? _042_[5] : _041_[5];
  assign _091_[6] = rd_ptr[2] ? _042_[6] : _041_[6];
  assign _091_[7] = rd_ptr[2] ? _042_[7] : _041_[7];
  assign _007_ = _005_[7] ? 1'h1 : _001_[7];
  assign _036_ = ~_039_;
  assign _035_ = ~_038_;
  assign _034_ = ~_037_;
  assign _033_ = ~_002_[0];
  assign _008_ = ~_000_[31];
  DFF _375_ (
    .C(clk),
    .D(_074_[0]),
    .Q(\mem[0] [0])
  );
  DFF _376_ (
    .C(clk),
    .D(_074_[1]),
    .Q(\mem[0] [1])
  );
  DFF _377_ (
    .C(clk),
    .D(_074_[2]),
    .Q(\mem[0] [2])
  );
  DFF _378_ (
    .C(clk),
    .D(_074_[3]),
    .Q(\mem[0] [3])
  );
  DFF _379_ (
    .C(clk),
    .D(_074_[4]),
    .Q(\mem[0] [4])
  );
  DFF _380_ (
    .C(clk),
    .D(_074_[5]),
    .Q(\mem[0] [5])
  );
  DFF _381_ (
    .C(clk),
    .D(_074_[6]),
    .Q(\mem[0] [6])
  );
  DFF _382_ (
    .C(clk),
    .D(_074_[7]),
    .Q(\mem[0] [7])
  );
  DFF _383_ (
    .C(clk),
    .D(_084_[0]),
    .Q(\mem[3] [0])
  );
  DFF _384_ (
    .C(clk),
    .D(_084_[1]),
    .Q(\mem[3] [1])
  );
  DFF _385_ (
    .C(clk),
    .D(_084_[2]),
    .Q(\mem[3] [2])
  );
  DFF _386_ (
    .C(clk),
    .D(_084_[3]),
    .Q(\mem[3] [3])
  );
  DFF _387_ (
    .C(clk),
    .D(_084_[4]),
    .Q(\mem[3] [4])
  );
  DFF _388_ (
    .C(clk),
    .D(_084_[5]),
    .Q(\mem[3] [5])
  );
  DFF _389_ (
    .C(clk),
    .D(_084_[6]),
    .Q(\mem[3] [6])
  );
  DFF _390_ (
    .C(clk),
    .D(_084_[7]),
    .Q(\mem[3] [7])
  );
  DFF _391_ (
    .C(clk),
    .D(_090_[0]),
    .Q(\mem[5] [0])
  );
  DFF _392_ (
    .C(clk),
    .D(_090_[1]),
    .Q(\mem[5] [1])
  );
  DFF _393_ (
    .C(clk),
    .D(_090_[2]),
    .Q(\mem[5] [2])
  );
  DFF _394_ (
    .C(clk),
    .D(_090_[3]),
    .Q(\mem[5] [3])
  );
  DFF _395_ (
    .C(clk),
    .D(_090_[4]),
    .Q(\mem[5] [4])
  );
  DFF _396_ (
    .C(clk),
    .D(_090_[5]),
    .Q(\mem[5] [5])
  );
  DFF _397_ (
    .C(clk),
    .D(_090_[6]),
    .Q(\mem[5] [6])
  );
  DFF _398_ (
    .C(clk),
    .D(_090_[7]),
    .Q(\mem[5] [7])
  );
  (* src = "./src/memory_6x8_syn.v:46" *)
  DFF _399_ (
    .C(clk),
    .D(_006_[0]),
    .Q(ff_mem[0])
  );
  (* src = "./src/memory_6x8_syn.v:46" *)
  DFF _400_ (
    .C(clk),
    .D(_006_[1]),
    .Q(ff_mem[1])
  );
  (* src = "./src/memory_6x8_syn.v:46" *)
  DFF _401_ (
    .C(clk),
    .D(_006_[2]),
    .Q(ff_mem[2])
  );
  (* src = "./src/memory_6x8_syn.v:46" *)
  DFF _402_ (
    .C(clk),
    .D(_006_[3]),
    .Q(ff_mem[3])
  );
  (* src = "./src/memory_6x8_syn.v:46" *)
  DFF _403_ (
    .C(clk),
    .D(_006_[4]),
    .Q(ff_mem[4])
  );
  (* src = "./src/memory_6x8_syn.v:46" *)
  DFF _404_ (
    .C(clk),
    .D(_006_[5]),
    .Q(ff_mem[5])
  );
  DFF _405_ (
    .C(clk),
    .D(_081_[0]),
    .Q(\mem[2] [0])
  );
  DFF _406_ (
    .C(clk),
    .D(_081_[1]),
    .Q(\mem[2] [1])
  );
  DFF _407_ (
    .C(clk),
    .D(_081_[2]),
    .Q(\mem[2] [2])
  );
  DFF _408_ (
    .C(clk),
    .D(_081_[3]),
    .Q(\mem[2] [3])
  );
  DFF _409_ (
    .C(clk),
    .D(_081_[4]),
    .Q(\mem[2] [4])
  );
  DFF _410_ (
    .C(clk),
    .D(_081_[5]),
    .Q(\mem[2] [5])
  );
  DFF _411_ (
    .C(clk),
    .D(_081_[6]),
    .Q(\mem[2] [6])
  );
  DFF _412_ (
    .C(clk),
    .D(_081_[7]),
    .Q(\mem[2] [7])
  );
  DFF _413_ (
    .C(clk),
    .D(_087_[0]),
    .Q(\mem[4] [0])
  );
  DFF _414_ (
    .C(clk),
    .D(_087_[1]),
    .Q(\mem[4] [1])
  );
  DFF _415_ (
    .C(clk),
    .D(_087_[2]),
    .Q(\mem[4] [2])
  );
  DFF _416_ (
    .C(clk),
    .D(_087_[3]),
    .Q(\mem[4] [3])
  );
  DFF _417_ (
    .C(clk),
    .D(_087_[4]),
    .Q(\mem[4] [4])
  );
  DFF _418_ (
    .C(clk),
    .D(_087_[5]),
    .Q(\mem[4] [5])
  );
  DFF _419_ (
    .C(clk),
    .D(_087_[6]),
    .Q(\mem[4] [6])
  );
  DFF _420_ (
    .C(clk),
    .D(_087_[7]),
    .Q(\mem[4] [7])
  );
  DFF _421_ (
    .C(clk),
    .D(_078_[0]),
    .Q(\mem[1] [0])
  );
  DFF _422_ (
    .C(clk),
    .D(_078_[1]),
    .Q(\mem[1] [1])
  );
  DFF _423_ (
    .C(clk),
    .D(_078_[2]),
    .Q(\mem[1] [2])
  );
  DFF _424_ (
    .C(clk),
    .D(_078_[3]),
    .Q(\mem[1] [3])
  );
  DFF _425_ (
    .C(clk),
    .D(_078_[4]),
    .Q(\mem[1] [4])
  );
  DFF _426_ (
    .C(clk),
    .D(_078_[5]),
    .Q(\mem[1] [5])
  );
  DFF _427_ (
    .C(clk),
    .D(_078_[6]),
    .Q(\mem[1] [6])
  );
  DFF _428_ (
    .C(clk),
    .D(_078_[7]),
    .Q(\mem[1] [7])
  );
  assign _021_ = _034_ & _020_;
  assign _026_ = _008_ & _025_;
  assign _025_ = _033_ & _000_[31];
  assign _060_ = _021_ & _007_;
  assign _012_ = _035_ & _036_;
  assign _061_ = _022_ & _001_[7];
  assign _063_ = _024_ & _007_;
  assign _024_ = _037_ & _020_;
  assign _062_ = _023_ & _001_[7];
  assign _023_ = _002_[0] & _014_;
  assign _022_ = _000_[31] & _014_;
  assign _065_ = _027_ & _001_[7];
  assign _027_ = _033_ & _025_;
  assign _066_ = _029_ & _007_;
  assign _029_ = _034_ & _028_;
  assign _028_ = _035_ & _039_;
  assign _056_ = _016_ & _001_[7];
  assign _016_ = _002_[0] & _009_;
  assign _055_ = _015_ & _001_[7];
  assign _015_ = _000_[31] & _009_;
  assign _014_ = _002_[0] & _008_;
  assign _054_ = _014_ & _001_[7];
  assign _053_ = _013_ & _007_;
  assign _013_ = _034_ & _012_;
  assign _064_ = _026_ & _001_[7];
  assign _020_ = _038_ & _036_;
  assign _059_ = _019_ & _001_[7];
  assign _019_ = _033_ & _014_;
  assign _058_ = _018_ & _001_[7];
  assign _032_ = _037_ & _028_;
  assign _018_ = _008_ & _014_;
  assign _069_ = _032_ & _007_;
  assign _057_ = _017_ & _007_;
  assign _017_ = _037_ & _012_;
  assign _068_ = _031_ & _001_[7];
  assign _052_ = _011_ & _001_[7];
  assign _031_ = _002_[0] & _025_;
  assign _011_ = _033_ & _009_;
  assign _051_ = _010_ & _001_[7];
  assign _010_ = _008_ & _009_;
  assign _009_ = _033_ & _008_;
  assign _030_ = _000_[31] & _025_;
  assign _067_ = _030_ & _001_[7];
  assign _050_ = _009_ & _001_[7];
  assign _049_ = _008_ & _001_[7];
  assign _000_[30:0] = { _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31] };
  assign _001_[6:0] = { _001_[7], _001_[7], _001_[7], _001_[7], _001_[7], _001_[7], _001_[7] };
  assign _002_[31:1] = { _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31] };
  assign _005_[6:0] = { _005_[7], _005_[7], _005_[7], _005_[7], _005_[7], _005_[7], _005_[7] };
  assign i = 32'd5;
endmodule

(* src = "./src/demux1x2_8_behav.v:12" *)
module demux12_8_syn(reset, clk, in, classif, push_0, push_1, out0, out1);
  (* src = "./src/demux1x2_8_behav.v:24" *)
  wire [7:0] _00_;
  (* src = "./src/demux1x2_8_behav.v:24" *)
  wire [7:0] _01_;
  (* src = "./src/demux1x2_8_behav.v:24" *)
  wire _02_;
  (* src = "./src/demux1x2_8_behav.v:24" *)
  wire _03_;
  wire _04_;
  wire [7:0] _05_;
  wire [7:0] _06_;
  (* src = "./src/demux1x2_8_behav.v:16" *)
  input classif;
  (* src = "./src/demux1x2_8_behav.v:14" *)
  input clk;
  (* src = "./src/demux1x2_8_behav.v:15" *)
  input [7:0] in;
  (* src = "./src/demux1x2_8_behav.v:19" *)
  output [7:0] out0;
  (* src = "./src/demux1x2_8_behav.v:20" *)
  output [7:0] out1;
  (* src = "./src/demux1x2_8_behav.v:17" *)
  output push_0;
  (* src = "./src/demux1x2_8_behav.v:18" *)
  output push_1;
  (* src = "./src/demux1x2_8_behav.v:13" *)
  input reset;
  assign _03_ = reset ? (* src = "./src/demux1x2_8_behav.v:25" *) classif : 1'h0;
  assign _02_ = reset ? (* src = "./src/demux1x2_8_behav.v:25" *) _04_ : 1'h0;
  assign _05_[0] = classif ? (* src = "./src/demux1x2_8_behav.v:39|./src/demux1x2_8_behav.v:33" *) in[0] : out1[0];
  assign _05_[1] = classif ? (* src = "./src/demux1x2_8_behav.v:39|./src/demux1x2_8_behav.v:33" *) in[1] : out1[1];
  assign _05_[2] = classif ? (* src = "./src/demux1x2_8_behav.v:39|./src/demux1x2_8_behav.v:33" *) in[2] : out1[2];
  assign _05_[3] = classif ? (* src = "./src/demux1x2_8_behav.v:39|./src/demux1x2_8_behav.v:33" *) in[3] : out1[3];
  assign _05_[4] = classif ? (* src = "./src/demux1x2_8_behav.v:39|./src/demux1x2_8_behav.v:33" *) in[4] : out1[4];
  assign _05_[5] = classif ? (* src = "./src/demux1x2_8_behav.v:39|./src/demux1x2_8_behav.v:33" *) in[5] : out1[5];
  assign _05_[6] = classif ? (* src = "./src/demux1x2_8_behav.v:39|./src/demux1x2_8_behav.v:33" *) in[6] : out1[6];
  assign _05_[7] = classif ? (* src = "./src/demux1x2_8_behav.v:39|./src/demux1x2_8_behav.v:33" *) in[7] : out1[7];
  assign _01_[0] = reset ? (* src = "./src/demux1x2_8_behav.v:25" *) _05_[0] : 1'h0;
  assign _01_[1] = reset ? (* src = "./src/demux1x2_8_behav.v:25" *) _05_[1] : 1'h0;
  assign _01_[2] = reset ? (* src = "./src/demux1x2_8_behav.v:25" *) _05_[2] : 1'h0;
  assign _01_[3] = reset ? (* src = "./src/demux1x2_8_behav.v:25" *) _05_[3] : 1'h0;
  assign _01_[4] = reset ? (* src = "./src/demux1x2_8_behav.v:25" *) _05_[4] : 1'h0;
  assign _01_[5] = reset ? (* src = "./src/demux1x2_8_behav.v:25" *) _05_[5] : 1'h0;
  assign _01_[6] = reset ? (* src = "./src/demux1x2_8_behav.v:25" *) _05_[6] : 1'h0;
  assign _01_[7] = reset ? (* src = "./src/demux1x2_8_behav.v:25" *) _05_[7] : 1'h0;
  assign _06_[0] = classif ? (* src = "./src/demux1x2_8_behav.v:34|./src/demux1x2_8_behav.v:33" *) out0[0] : in[0];
  assign _06_[1] = classif ? (* src = "./src/demux1x2_8_behav.v:34|./src/demux1x2_8_behav.v:33" *) out0[1] : in[1];
  assign _06_[2] = classif ? (* src = "./src/demux1x2_8_behav.v:34|./src/demux1x2_8_behav.v:33" *) out0[2] : in[2];
  assign _06_[3] = classif ? (* src = "./src/demux1x2_8_behav.v:34|./src/demux1x2_8_behav.v:33" *) out0[3] : in[3];
  assign _06_[4] = classif ? (* src = "./src/demux1x2_8_behav.v:34|./src/demux1x2_8_behav.v:33" *) out0[4] : in[4];
  assign _06_[5] = classif ? (* src = "./src/demux1x2_8_behav.v:34|./src/demux1x2_8_behav.v:33" *) out0[5] : in[5];
  assign _06_[6] = classif ? (* src = "./src/demux1x2_8_behav.v:34|./src/demux1x2_8_behav.v:33" *) out0[6] : in[6];
  assign _06_[7] = classif ? (* src = "./src/demux1x2_8_behav.v:34|./src/demux1x2_8_behav.v:33" *) out0[7] : in[7];
  assign _00_[0] = reset ? (* src = "./src/demux1x2_8_behav.v:25" *) _06_[0] : 1'h0;
  assign _00_[1] = reset ? (* src = "./src/demux1x2_8_behav.v:25" *) _06_[1] : 1'h0;
  assign _00_[2] = reset ? (* src = "./src/demux1x2_8_behav.v:25" *) _06_[2] : 1'h0;
  assign _00_[3] = reset ? (* src = "./src/demux1x2_8_behav.v:25" *) _06_[3] : 1'h0;
  assign _00_[4] = reset ? (* src = "./src/demux1x2_8_behav.v:25" *) _06_[4] : 1'h0;
  assign _00_[5] = reset ? (* src = "./src/demux1x2_8_behav.v:25" *) _06_[5] : 1'h0;
  assign _00_[6] = reset ? (* src = "./src/demux1x2_8_behav.v:25" *) _06_[6] : 1'h0;
  assign _00_[7] = reset ? (* src = "./src/demux1x2_8_behav.v:25" *) _06_[7] : 1'h0;
  assign _04_ = ~(* src = "./src/demux1x2_8_behav.v:34|./src/demux1x2_8_behav.v:33" *) classif;
  (* src = "./src/demux1x2_8_behav.v:24" *)
  DFF _42_ (
    .C(clk),
    .D(_00_[0]),
    .Q(out0[0])
  );
  (* src = "./src/demux1x2_8_behav.v:24" *)
  DFF _43_ (
    .C(clk),
    .D(_00_[1]),
    .Q(out0[1])
  );
  (* src = "./src/demux1x2_8_behav.v:24" *)
  DFF _44_ (
    .C(clk),
    .D(_00_[2]),
    .Q(out0[2])
  );
  (* src = "./src/demux1x2_8_behav.v:24" *)
  DFF _45_ (
    .C(clk),
    .D(_00_[3]),
    .Q(out0[3])
  );
  (* src = "./src/demux1x2_8_behav.v:24" *)
  DFF _46_ (
    .C(clk),
    .D(_00_[4]),
    .Q(out0[4])
  );
  (* src = "./src/demux1x2_8_behav.v:24" *)
  DFF _47_ (
    .C(clk),
    .D(_00_[5]),
    .Q(out0[5])
  );
  (* src = "./src/demux1x2_8_behav.v:24" *)
  DFF _48_ (
    .C(clk),
    .D(_00_[6]),
    .Q(out0[6])
  );
  (* src = "./src/demux1x2_8_behav.v:24" *)
  DFF _49_ (
    .C(clk),
    .D(_00_[7]),
    .Q(out0[7])
  );
  (* src = "./src/demux1x2_8_behav.v:24" *)
  DFF _50_ (
    .C(clk),
    .D(_01_[0]),
    .Q(out1[0])
  );
  (* src = "./src/demux1x2_8_behav.v:24" *)
  DFF _51_ (
    .C(clk),
    .D(_01_[1]),
    .Q(out1[1])
  );
  (* src = "./src/demux1x2_8_behav.v:24" *)
  DFF _52_ (
    .C(clk),
    .D(_01_[2]),
    .Q(out1[2])
  );
  (* src = "./src/demux1x2_8_behav.v:24" *)
  DFF _53_ (
    .C(clk),
    .D(_01_[3]),
    .Q(out1[3])
  );
  (* src = "./src/demux1x2_8_behav.v:24" *)
  DFF _54_ (
    .C(clk),
    .D(_01_[4]),
    .Q(out1[4])
  );
  (* src = "./src/demux1x2_8_behav.v:24" *)
  DFF _55_ (
    .C(clk),
    .D(_01_[5]),
    .Q(out1[5])
  );
  (* src = "./src/demux1x2_8_behav.v:24" *)
  DFF _56_ (
    .C(clk),
    .D(_01_[6]),
    .Q(out1[6])
  );
  (* src = "./src/demux1x2_8_behav.v:24" *)
  DFF _57_ (
    .C(clk),
    .D(_01_[7]),
    .Q(out1[7])
  );
  (* src = "./src/demux1x2_8_behav.v:24" *)
  DFF _58_ (
    .C(clk),
    .D(_02_),
    .Q(push_0)
  );
  (* src = "./src/demux1x2_8_behav.v:24" *)
  DFF _59_ (
    .C(clk),
    .D(_03_),
    .Q(push_1)
  );
endmodule

(* src = "./src/df_control.v:13" *)
module dfcontrol_syn(clk, reset, push_0, push_1, almost_full1, almost_empty1, fifo_empty1, Fifo_full1, fifo_error1, fifo_pause1, almost_full2, almost_empty2, fifo_empty2, Fifo_full2, fifo_error2, fifo_pause2, read1, write1, read2, write2, Error);
  (* src = "./src/df_control.v:45" *)
  wire _00_;
  (* src = "./src/df_control.v:45" *)
  wire _01_;
  (* src = "./src/df_control.v:45" *)
  wire _02_;
  (* src = "./src/df_control.v:45" *)
  wire _03_;
  (* src = "./src/df_control.v:45" *)
  wire _04_;
  (* src = "./src/df_control.v:45" *)
  wire _05_;
  (* src = "./src/df_control.v:45" *)
  wire _06_;
  (* src = "./src/df_control.v:45" *)
  wire _07_;
  (* src = "./src/df_control.v:45" *)
  wire _08_;
  (* src = "./src/df_control.v:45" *)
  wire _09_;
  (* src = "./src/df_control.v:60" *)
  wire _10_;
  (* src = "./src/df_control.v:60" *)
  wire _11_;
  (* src = "./src/df_control.v:60" *)
  wire _12_;
  (* src = "./src/df_control.v:68" *)
  wire _13_;
  (* src = "./src/df_control.v:68" *)
  wire _14_;
  (* src = "./src/df_control.v:68" *)
  wire _15_;
  (* src = "./src/df_control.v:60" *)
  wire _16_;
  (* src = "./src/df_control.v:60" *)
  wire _17_;
  (* src = "./src/df_control.v:68" *)
  wire _18_;
  (* src = "./src/df_control.v:68" *)
  wire _19_;
  (* src = "./src/df_control.v:76" *)
  wire _20_;
  (* src = "./src/df_control.v:84" *)
  wire _21_;
  (* src = "./src/df_control.v:40" *)
  output Error;
  (* src = "./src/df_control.v:23" *)
  input Fifo_full1;
  (* src = "./src/df_control.v:30" *)
  input Fifo_full2;
  (* src = "./src/df_control.v:21" *)
  input almost_empty1;
  (* src = "./src/df_control.v:28" *)
  input almost_empty2;
  (* src = "./src/df_control.v:20" *)
  input almost_full1;
  (* src = "./src/df_control.v:27" *)
  input almost_full2;
  (* src = "./src/df_control.v:14" *)
  input clk;
  (* src = "./src/df_control.v:22" *)
  input fifo_empty1;
  (* src = "./src/df_control.v:29" *)
  input fifo_empty2;
  (* src = "./src/df_control.v:24" *)
  input fifo_error1;
  (* src = "./src/df_control.v:31" *)
  input fifo_error2;
  (* src = "./src/df_control.v:25" *)
  input fifo_pause1;
  (* src = "./src/df_control.v:32" *)
  input fifo_pause2;
  (* src = "./src/df_control.v:16" *)
  input push_0;
  (* src = "./src/df_control.v:17" *)
  input push_1;
  (* src = "./src/df_control.v:35" *)
  output read1;
  (* src = "./src/df_control.v:37" *)
  output read2;
  (* src = "./src/df_control.v:15" *)
  input reset;
  (* src = "./src/df_control.v:36" *)
  output write1;
  (* src = "./src/df_control.v:38" *)
  output write2;
  assign _00_ = reset ? (* src = "./src/df_control.v:51" *) _05_ : 1'h0;
  assign _02_ = reset ? (* src = "./src/df_control.v:51" *) _07_ : 1'h0;
  assign _03_ = reset ? (* src = "./src/df_control.v:51" *) _08_ : 1'h0;
  assign _01_ = reset ? (* src = "./src/df_control.v:51" *) _06_ : 1'h0;
  assign _04_ = reset ? (* src = "./src/df_control.v:51" *) _09_ : 1'h0;
  assign _06_ = ~(* src = "./src/df_control.v:76" *) _20_;
  assign _07_ = ~(* src = "./src/df_control.v:84" *) _21_;
  assign _10_ = ~(* src = "./src/df_control.v:60" *) Fifo_full1;
  assign _11_ = ~(* src = "./src/df_control.v:60" *) almost_full1;
  assign _12_ = ~(* src = "./src/df_control.v:60" *) fifo_pause1;
  assign _14_ = ~(* src = "./src/df_control.v:68" *) Fifo_full2;
  assign _15_ = ~(* src = "./src/df_control.v:68" *) almost_full2;
  assign _13_ = ~(* src = "./src/df_control.v:68" *) fifo_pause2;
  (* src = "./src/df_control.v:45" *)
  DFF _35_ (
    .C(clk),
    .D(_01_),
    .Q(read1)
  );
  (* src = "./src/df_control.v:45" *)
  DFF _36_ (
    .C(clk),
    .D(_03_),
    .Q(write1)
  );
  (* src = "./src/df_control.v:45" *)
  DFF _37_ (
    .C(clk),
    .D(_02_),
    .Q(read2)
  );
  (* src = "./src/df_control.v:45" *)
  DFF _38_ (
    .C(clk),
    .D(_04_),
    .Q(write2)
  );
  (* src = "./src/df_control.v:45" *)
  DFF _39_ (
    .C(clk),
    .D(_00_),
    .Q(Error)
  );
  assign _16_ = _10_ |(* src = "./src/df_control.v:60" *)  _11_;
  assign _19_ = _18_ |(* src = "./src/df_control.v:68" *)  _13_;
  assign _17_ = _16_ |(* src = "./src/df_control.v:60" *)  _12_;
  assign _08_ = push_0 &(* src = "./src/df_control.v:60" *)  _17_;
  assign _18_ = _14_ |(* src = "./src/df_control.v:68" *)  _15_;
  assign _09_ = push_1 &(* src = "./src/df_control.v:68" *)  _19_;
  assign _20_ = almost_empty1 |(* src = "./src/df_control.v:76" *)  fifo_empty1;
  assign _21_ = almost_empty2 |(* src = "./src/df_control.v:84" *)  fifo_empty2;
  assign _05_ = fifo_error1 |(* src = "./src/df_control.v:90" *)  fifo_error2;
endmodule

(* dynports =  1  *)
(* src = "./src/fifo_6x8_syn.v:11" *)
module fifo_6x8_syn(clk, reset, read, write, data_in_push, almost_full, almost_empty, fifo_empty, Fifo_full, data_out_pop, fifo_error, fifo_pause);
  (* src = "./src/fifo_6x8_syn.v:104" *)
  wire [7:0] _000_;
  (* src = "./src/fifo_6x8_syn.v:104" *)
  wire [7:0] _001_;
  (* src = "./src/fifo_6x8_syn.v:104" *)
  wire [5:0] _002_;
  (* src = "./src/fifo_6x8_syn.v:104" *)
  wire [5:0] _003_;
  (* src = "./src/fifo_6x8_syn.v:52" *)
  wire _004_;
  (* src = "./src/fifo_6x8_syn.v:52" *)
  wire _005_;
  (* src = "./src/fifo_6x8_syn.v:52" *)
  wire _006_;
  (* src = "./src/fifo_6x8_syn.v:52" *)
  wire _007_;
  (* src = "./src/fifo_6x8_syn.v:52" *)
  wire _008_;
  (* src = "./src/fifo_6x8_syn.v:52" *)
  wire _009_;
  (* src = "./src/fifo_6x8_syn.v:52" *)
  wire _010_;
  (* src = "./src/fifo_6x8_syn.v:114" *)
  (* unused_bits = "6" *)
  wire [31:0] _011_;
  (* src = "./src/fifo_6x8_syn.v:117" *)
  (* unused_bits = "6" *)
  wire [31:0] _012_;
  (* src = "./src/fifo_6x8_syn.v:121" *)
  (* unused_bits = "8" *)
  wire [31:0] _013_;
  wire [3:0] _014_;
  wire [1:0] _015_;
  wire [3:0] _016_;
  wire [1:0] _017_;
  wire [15:0] _018_;
  wire [7:0] _019_;
  wire [3:0] _020_;
  wire [15:0] _021_;
  wire [7:0] _022_;
  wire [3:0] _023_;
  wire _024_;
  wire [7:0] _025_;
  wire _026_;
  (* src = "./src/fifo_6x8_syn.v:73" *)
  wire _027_;
  (* src = "./src/fifo_6x8_syn.v:78" *)
  wire _028_;
  (* src = "./src/fifo_6x8_syn.v:87" *)
  wire _029_;
  (* src = "./src/fifo_6x8_syn.v:113" *)
  wire _030_;
  (* src = "./src/fifo_6x8_syn.v:116" *)
  wire _031_;
  (* src = "./src/fifo_6x8_syn.v:96" *)
  wire _032_;
  (* src = "./src/fifo_6x8_syn.v:113" *)
  wire _033_;
  (* src = "./src/fifo_6x8_syn.v:116" *)
  wire _034_;
  wire [7:0] _035_;
  wire [7:0] _036_;
  wire [7:0] _037_;
  wire [7:0] _038_;
  wire [7:0] _039_;
  wire [5:0] _040_;
  wire [5:0] _041_;
  (* src = "./src/fifo_6x8_syn.v:126" *)
  (* unused_bits = "8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _042_;
  (* src = "./src/fifo_6x8_syn.v:114|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "5" *)
  wire [31:0] _043_;
  (* src = "./src/fifo_6x8_syn.v:121|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "7" *)
  wire [31:0] _044_;
  (* src = "./src/fifo_6x8_syn.v:124|./src/fifo_6x8_syn.v:114|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "5" *)
  wire [31:0] _045_;
  (* src = "./src/fifo_6x8_syn.v:82|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "2 4 5 6" *)
  wire [31:0] _046_;
  wire [31:0] _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  (* src = "./src/fifo_6x8_syn.v:87|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "2 4 5 6" *)
  wire [31:0] _051_;
  wire _052_;
  (* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _053_;
  (* src = "./src/fifo_6x8_syn.v:114|<techmap.v>:260|<techmap.v>:222" *)
  wire _054_;
  (* src = "./src/fifo_6x8_syn.v:121|<techmap.v>:260|<techmap.v>:222" *)
  wire _055_;
  (* src = "./src/fifo_6x8_syn.v:121|<techmap.v>:260|<techmap.v>:222" *)
  wire _056_;
  (* src = "./src/fifo_6x8_syn.v:124|./src/fifo_6x8_syn.v:114|<techmap.v>:260|<techmap.v>:222" *)
  wire _057_;
  (* src = "./src/fifo_6x8_syn.v:82|<techmap.v>:260|<techmap.v>:221" *)
  wire _058_;
  (* src = "./src/fifo_6x8_syn.v:82|<techmap.v>:260|<techmap.v>:221" *)
  wire _059_;
  (* src = "./src/fifo_6x8_syn.v:82|<techmap.v>:260|<techmap.v>:221" *)
  wire _060_;
  (* src = "./src/fifo_6x8_syn.v:82|<techmap.v>:260|<techmap.v>:221" *)
  wire _061_;
  (* src = "./src/fifo_6x8_syn.v:82|<techmap.v>:260|<techmap.v>:221" *)
  wire _062_;
  (* src = "./src/fifo_6x8_syn.v:82|<techmap.v>:260|<techmap.v>:221" *)
  wire _063_;
  (* src = "./src/fifo_6x8_syn.v:82|<techmap.v>:260|<techmap.v>:221" *)
  wire _064_;
  (* src = "./src/fifo_6x8_syn.v:82|<techmap.v>:260|<techmap.v>:221" *)
  wire _065_;
  (* src = "./src/fifo_6x8_syn.v:87|<techmap.v>:260|<techmap.v>:221" *)
  wire _066_;
  (* src = "./src/fifo_6x8_syn.v:87|<techmap.v>:260|<techmap.v>:221" *)
  wire _067_;
  (* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:260|<techmap.v>:221" *)
  wire _068_;
  (* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:260|<techmap.v>:221" *)
  wire _069_;
  (* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:260|<techmap.v>:229" *)
  wire _070_;
  (* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:260|<techmap.v>:229" *)
  wire _071_;
  (* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:260|<techmap.v>:229" *)
  wire _072_;
  (* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:260|<techmap.v>:229" *)
  wire _073_;
  (* src = "./src/fifo_6x8_syn.v:20" *)
  output Fifo_full;
  (* src = "./src/fifo_6x8_syn.v:18" *)
  output almost_empty;
  (* src = "./src/fifo_6x8_syn.v:17" *)
  output almost_full;
  (* src = "./src/fifo_6x8_syn.v:12" *)
  input clk;
  (* src = "./src/fifo_6x8_syn.v:32" *)
  wire [7:0] data_count;
  (* src = "./src/fifo_6x8_syn.v:16" *)
  input [7:0] data_in_push;
  (* src = "./src/fifo_6x8_syn.v:29" *)
  wire [7:0] data_out;
  (* src = "./src/fifo_6x8_syn.v:21" *)
  output [7:0] data_out_pop;
  (* src = "./src/fifo_6x8_syn.v:35" *)
  wire datamod;
  (* src = "./src/fifo_6x8_syn.v:19" *)
  output fifo_empty;
  (* src = "./src/fifo_6x8_syn.v:22" *)
  output fifo_error;
  (* src = "./src/fifo_6x8_syn.v:23" *)
  output fifo_pause;
  (* src = "./src/fifo_6x8_syn.v:33" *)
  wire [5:0] rd_ptr;
  (* src = "./src/fifo_6x8_syn.v:14" *)
  input read;
  (* src = "./src/fifo_6x8_syn.v:13" *)
  input reset;
  (* src = "./src/fifo_6x8_syn.v:34" *)
  wire [5:0] wr_ptr;
  (* src = "./src/fifo_6x8_syn.v:15" *)
  input write;
  assign _014_[0] = data_count[0] |(* src = "./src/fifo_6x8_syn.v:78" *)  _025_[1];
  assign _014_[1] = _025_[2] |(* src = "./src/fifo_6x8_syn.v:78" *)  data_count[3];
  assign _015_[0] = _014_[0] |(* src = "./src/fifo_6x8_syn.v:78" *)  _014_[1];
  assign _026_ = _015_[0] |(* src = "./src/fifo_6x8_syn.v:78" *)  _015_[1];
  assign _016_[0] = data_count[0] |(* src = "./src/fifo_6x8_syn.v:87" *)  data_count[1];
  assign _016_[1] = data_count[2] |(* src = "./src/fifo_6x8_syn.v:87" *)  data_count[3];
  assign _014_[2] = data_count[4] |(* src = "./src/fifo_6x8_syn.v:87" *)  data_count[5];
  assign _014_[3] = data_count[6] |(* src = "./src/fifo_6x8_syn.v:87" *)  data_count[7];
  assign _017_[0] = _016_[0] |(* src = "./src/fifo_6x8_syn.v:87" *)  _016_[1];
  assign _015_[1] = _014_[2] |(* src = "./src/fifo_6x8_syn.v:87" *)  _014_[3];
  assign _018_[0] = _013_[0] &(* src = "./src/fifo_6x8_syn.v:82" *)  data_count[1];
  assign _019_[0] = _018_[0] &(* src = "./src/fifo_6x8_syn.v:82" *)  _018_[1];
  assign _020_[0] = _019_[0] &(* src = "./src/fifo_6x8_syn.v:82" *)  _019_[1];
  assign _006_ = _049_ | _020_[0];
  assign _022_[0] = _021_[0] &(* src = "./src/fifo_6x8_syn.v:87" *)  _021_[1];
  assign _023_[0] = _022_[0] &(* src = "./src/fifo_6x8_syn.v:87" *)  _019_[1];
  assign _029_ = _052_ | _023_[0];
  assign _024_ = _017_[0] |(* src = "./src/fifo_6x8_syn.v:73" *)  _015_[1];
  assign _027_ = ~(* src = "./src/fifo_6x8_syn.v:73" *) _024_;
  assign _028_ = ~(* src = "./src/fifo_6x8_syn.v:78" *) _026_;
  assign _033_ = ~(* src = "./src/fifo_6x8_syn.v:113" *) Fifo_full;
  assign _034_ = ~(* src = "./src/fifo_6x8_syn.v:123" *) fifo_empty;
  assign _005_ = _029_ &(* src = "./src/fifo_6x8_syn.v:87" *)  _024_;
  assign _008_ = write &(* src = "./src/fifo_6x8_syn.v:92" *)  _004_;
  assign _032_ = read &(* src = "./src/fifo_6x8_syn.v:96" *)  _007_;
  assign _030_ = _033_ &(* src = "./src/fifo_6x8_syn.v:113" *)  write;
  assign _031_ = _034_ &(* src = "./src/fifo_6x8_syn.v:123" *)  read;
  assign _001_[1] = reset ? (* src = "./src/fifo_6x8_syn.v:105" *) _039_[1] : 1'h0;
  assign _001_[2] = reset ? (* src = "./src/fifo_6x8_syn.v:105" *) _039_[2] : 1'h0;
  assign _001_[3] = reset ? (* src = "./src/fifo_6x8_syn.v:105" *) _039_[3] : 1'h0;
  assign _001_[4] = reset ? (* src = "./src/fifo_6x8_syn.v:105" *) _039_[4] : 1'h0;
  assign _001_[5] = reset ? (* src = "./src/fifo_6x8_syn.v:105" *) _039_[5] : 1'h0;
  assign _001_[6] = reset ? (* src = "./src/fifo_6x8_syn.v:105" *) _039_[6] : 1'h0;
  assign _001_[7] = reset ? (* src = "./src/fifo_6x8_syn.v:105" *) _039_[7] : 1'h0;
  assign _037_[0] = _030_ ? (* src = "./src/fifo_6x8_syn.v:113" *) _036_[0] : _035_[0];
  assign _037_[1] = _030_ ? (* src = "./src/fifo_6x8_syn.v:113" *) _036_[1] : _035_[1];
  assign _037_[2] = _030_ ? (* src = "./src/fifo_6x8_syn.v:113" *) _036_[2] : _035_[2];
  assign _037_[3] = _030_ ? (* src = "./src/fifo_6x8_syn.v:113" *) _036_[3] : _035_[3];
  assign _037_[4] = _030_ ? (* src = "./src/fifo_6x8_syn.v:113" *) _036_[4] : _035_[4];
  assign _037_[5] = _030_ ? (* src = "./src/fifo_6x8_syn.v:113" *) _036_[5] : _035_[5];
  assign _037_[6] = _030_ ? (* src = "./src/fifo_6x8_syn.v:113" *) _036_[6] : _035_[6];
  assign _037_[7] = _030_ ? (* src = "./src/fifo_6x8_syn.v:113" *) _036_[7] : _035_[7];
  assign _036_[0] = _031_ ? (* src = "./src/fifo_6x8_syn.v:116" *) data_count[0] : _013_[0];
  assign _036_[1] = _031_ ? (* src = "./src/fifo_6x8_syn.v:116" *) data_count[1] : _013_[1];
  assign _036_[2] = _031_ ? (* src = "./src/fifo_6x8_syn.v:116" *) data_count[2] : _013_[2];
  assign _036_[3] = _031_ ? (* src = "./src/fifo_6x8_syn.v:116" *) data_count[3] : _013_[3];
  assign _036_[4] = _031_ ? (* src = "./src/fifo_6x8_syn.v:116" *) data_count[4] : _013_[4];
  assign _036_[5] = _031_ ? (* src = "./src/fifo_6x8_syn.v:116" *) data_count[5] : _013_[5];
  assign _036_[6] = _031_ ? (* src = "./src/fifo_6x8_syn.v:116" *) data_count[6] : _013_[6];
  assign _036_[7] = _031_ ? (* src = "./src/fifo_6x8_syn.v:116" *) data_count[7] : _013_[7];
  assign _000_[0] = reset ? (* src = "./src/fifo_6x8_syn.v:105" *) _037_[0] : 1'h0;
  assign _000_[1] = reset ? (* src = "./src/fifo_6x8_syn.v:105" *) _037_[1] : 1'h0;
  assign _000_[2] = reset ? (* src = "./src/fifo_6x8_syn.v:105" *) _037_[2] : 1'h0;
  assign _000_[3] = reset ? (* src = "./src/fifo_6x8_syn.v:105" *) _037_[3] : 1'h0;
  assign _000_[4] = reset ? (* src = "./src/fifo_6x8_syn.v:105" *) _037_[4] : 1'h0;
  assign _000_[5] = reset ? (* src = "./src/fifo_6x8_syn.v:105" *) _037_[5] : 1'h0;
  assign _000_[6] = reset ? (* src = "./src/fifo_6x8_syn.v:105" *) _037_[6] : 1'h0;
  assign _000_[7] = reset ? (* src = "./src/fifo_6x8_syn.v:105" *) _037_[7] : 1'h0;
  assign _035_[0] = _031_ ? (* src = "./src/fifo_6x8_syn.v:123" *) _013_[0] : data_count[0];
  assign _035_[1] = _031_ ? (* src = "./src/fifo_6x8_syn.v:123" *) _042_[1] : data_count[1];
  assign _035_[2] = _031_ ? (* src = "./src/fifo_6x8_syn.v:123" *) _042_[2] : data_count[2];
  assign _035_[3] = _031_ ? (* src = "./src/fifo_6x8_syn.v:123" *) _042_[3] : data_count[3];
  assign _035_[4] = _031_ ? (* src = "./src/fifo_6x8_syn.v:123" *) _042_[4] : data_count[4];
  assign _035_[5] = _031_ ? (* src = "./src/fifo_6x8_syn.v:123" *) _042_[5] : data_count[5];
  assign _035_[6] = _031_ ? (* src = "./src/fifo_6x8_syn.v:123" *) _042_[6] : data_count[6];
  assign _035_[7] = _031_ ? (* src = "./src/fifo_6x8_syn.v:123" *) _042_[7] : data_count[7];
  assign _040_[0] = _030_ ? (* src = "./src/fifo_6x8_syn.v:113" *) _011_[0] : wr_ptr[0];
  assign _040_[1] = _030_ ? (* src = "./src/fifo_6x8_syn.v:113" *) _011_[1] : wr_ptr[1];
  assign _040_[2] = _030_ ? (* src = "./src/fifo_6x8_syn.v:113" *) _011_[2] : wr_ptr[2];
  assign _040_[3] = _030_ ? (* src = "./src/fifo_6x8_syn.v:113" *) _011_[3] : wr_ptr[3];
  assign _040_[4] = _030_ ? (* src = "./src/fifo_6x8_syn.v:113" *) _011_[4] : wr_ptr[4];
  assign _040_[5] = _030_ ? (* src = "./src/fifo_6x8_syn.v:113" *) _011_[5] : wr_ptr[5];
  assign _039_[0] = _030_ ? (* src = "./src/fifo_6x8_syn.v:113" *) data_out_pop[0] : _038_[0];
  assign _039_[1] = _030_ ? (* src = "./src/fifo_6x8_syn.v:113" *) data_out_pop[1] : _038_[1];
  assign _039_[2] = _030_ ? (* src = "./src/fifo_6x8_syn.v:113" *) data_out_pop[2] : _038_[2];
  assign _039_[3] = _030_ ? (* src = "./src/fifo_6x8_syn.v:113" *) data_out_pop[3] : _038_[3];
  assign _039_[4] = _030_ ? (* src = "./src/fifo_6x8_syn.v:113" *) data_out_pop[4] : _038_[4];
  assign _039_[5] = _030_ ? (* src = "./src/fifo_6x8_syn.v:113" *) data_out_pop[5] : _038_[5];
  assign _039_[6] = _030_ ? (* src = "./src/fifo_6x8_syn.v:113" *) data_out_pop[6] : _038_[6];
  assign _039_[7] = _030_ ? (* src = "./src/fifo_6x8_syn.v:113" *) data_out_pop[7] : _038_[7];
  assign _038_[0] = _031_ ? (* src = "./src/fifo_6x8_syn.v:123" *) data_out[0] : data_out_pop[0];
  assign _038_[1] = _031_ ? (* src = "./src/fifo_6x8_syn.v:123" *) data_out[1] : data_out_pop[1];
  assign _038_[2] = _031_ ? (* src = "./src/fifo_6x8_syn.v:123" *) data_out[2] : data_out_pop[2];
  assign _038_[3] = _031_ ? (* src = "./src/fifo_6x8_syn.v:123" *) data_out[3] : data_out_pop[3];
  assign _038_[4] = _031_ ? (* src = "./src/fifo_6x8_syn.v:123" *) data_out[4] : data_out_pop[4];
  assign _038_[5] = _031_ ? (* src = "./src/fifo_6x8_syn.v:123" *) data_out[5] : data_out_pop[5];
  assign _038_[6] = _031_ ? (* src = "./src/fifo_6x8_syn.v:123" *) data_out[6] : data_out_pop[6];
  assign _038_[7] = _031_ ? (* src = "./src/fifo_6x8_syn.v:123" *) data_out[7] : data_out_pop[7];
  assign _003_[0] = reset ? (* src = "./src/fifo_6x8_syn.v:105" *) _040_[0] : 1'h0;
  assign _003_[1] = reset ? (* src = "./src/fifo_6x8_syn.v:105" *) _040_[1] : 1'h0;
  assign _003_[2] = reset ? (* src = "./src/fifo_6x8_syn.v:105" *) _040_[2] : 1'h0;
  assign _003_[3] = reset ? (* src = "./src/fifo_6x8_syn.v:105" *) _040_[3] : 1'h0;
  assign _003_[4] = reset ? (* src = "./src/fifo_6x8_syn.v:105" *) _040_[4] : 1'h0;
  assign _003_[5] = reset ? (* src = "./src/fifo_6x8_syn.v:105" *) _040_[5] : 1'h0;
  assign _002_[0] = reset ? (* src = "./src/fifo_6x8_syn.v:105" *) _041_[0] : 1'h0;
  assign _002_[1] = reset ? (* src = "./src/fifo_6x8_syn.v:105" *) _041_[1] : 1'h0;
  assign _002_[2] = reset ? (* src = "./src/fifo_6x8_syn.v:105" *) _041_[2] : 1'h0;
  assign _002_[3] = reset ? (* src = "./src/fifo_6x8_syn.v:105" *) _041_[3] : 1'h0;
  assign _002_[4] = reset ? (* src = "./src/fifo_6x8_syn.v:105" *) _041_[4] : 1'h0;
  assign _002_[5] = reset ? (* src = "./src/fifo_6x8_syn.v:105" *) _041_[5] : 1'h0;
  assign _041_[0] = _031_ ? (* src = "./src/fifo_6x8_syn.v:116" *) _012_[0] : rd_ptr[0];
  assign _041_[1] = _031_ ? (* src = "./src/fifo_6x8_syn.v:116" *) _012_[1] : rd_ptr[1];
  assign _041_[2] = _031_ ? (* src = "./src/fifo_6x8_syn.v:116" *) _012_[2] : rd_ptr[2];
  assign _041_[3] = _031_ ? (* src = "./src/fifo_6x8_syn.v:116" *) _012_[3] : rd_ptr[3];
  assign _041_[4] = _031_ ? (* src = "./src/fifo_6x8_syn.v:116" *) _012_[4] : rd_ptr[4];
  assign _041_[5] = _031_ ? (* src = "./src/fifo_6x8_syn.v:116" *) _012_[5] : rd_ptr[5];
  assign _009_ = _032_ ? (* src = "./src/fifo_6x8_syn.v:96" *) 1'h1 : _008_;
  assign _010_ = _005_ ? (* src = "./src/fifo_6x8_syn.v:87" *) 1'h0 : _006_;
  assign _004_ = reset ? (* src = "./src/fifo_6x8_syn.v:60" *) _028_ : 1'hx;
  assign fifo_error = reset ? (* src = "./src/fifo_6x8_syn.v:60" *) _009_ : 1'h0;
  assign _007_ = reset ? (* src = "./src/fifo_6x8_syn.v:60" *) _027_ : 1'hx;
  assign almost_full = reset ? (* src = "./src/fifo_6x8_syn.v:60" *) _006_ : 1'h0;
  assign fifo_pause = reset ? (* src = "./src/fifo_6x8_syn.v:60" *) _010_ : 1'h0;
  assign almost_empty = reset ? (* src = "./src/fifo_6x8_syn.v:60" *) _005_ : 1'h0;
  assign Fifo_full = reset ? (* src = "./src/fifo_6x8_syn.v:60" *) _004_ : 1'h0;
  assign fifo_empty = reset ? (* src = "./src/fifo_6x8_syn.v:60" *) _007_ : 1'h1;
  assign _001_[0] = reset ? (* src = "./src/fifo_6x8_syn.v:105" *) _039_[0] : 1'h0;
  assign _049_ = ~(* src = "./src/fifo_6x8_syn.v:82" *) _050_;
  assign _048_ = ~(* src = "./src/fifo_6x8_syn.v:82" *) _046_[31];
  assign _052_ = ~(* src = "./src/fifo_6x8_syn.v:87" *) _051_[31];
  (* src = "./src/fifo_6x8_syn.v:104" *)
  DFF _194_ (
    .C(clk),
    .D(_002_[0]),
    .Q(rd_ptr[0])
  );
  (* src = "./src/fifo_6x8_syn.v:104" *)
  DFF _195_ (
    .C(clk),
    .D(_002_[1]),
    .Q(rd_ptr[1])
  );
  (* src = "./src/fifo_6x8_syn.v:104" *)
  DFF _196_ (
    .C(clk),
    .D(_002_[2]),
    .Q(rd_ptr[2])
  );
  (* src = "./src/fifo_6x8_syn.v:104" *)
  DFF _197_ (
    .C(clk),
    .D(_002_[3]),
    .Q(rd_ptr[3])
  );
  (* src = "./src/fifo_6x8_syn.v:104" *)
  DFF _198_ (
    .C(clk),
    .D(_002_[4]),
    .Q(rd_ptr[4])
  );
  (* src = "./src/fifo_6x8_syn.v:104" *)
  DFF _199_ (
    .C(clk),
    .D(_002_[5]),
    .Q(rd_ptr[5])
  );
  (* src = "./src/fifo_6x8_syn.v:104" *)
  DFF _200_ (
    .C(clk),
    .D(_003_[0]),
    .Q(wr_ptr[0])
  );
  (* src = "./src/fifo_6x8_syn.v:104" *)
  DFF _201_ (
    .C(clk),
    .D(_003_[1]),
    .Q(wr_ptr[1])
  );
  (* src = "./src/fifo_6x8_syn.v:104" *)
  DFF _202_ (
    .C(clk),
    .D(_003_[2]),
    .Q(wr_ptr[2])
  );
  (* src = "./src/fifo_6x8_syn.v:104" *)
  DFF _203_ (
    .C(clk),
    .D(_003_[3]),
    .Q(wr_ptr[3])
  );
  (* src = "./src/fifo_6x8_syn.v:104" *)
  DFF _204_ (
    .C(clk),
    .D(_003_[4]),
    .Q(wr_ptr[4])
  );
  (* src = "./src/fifo_6x8_syn.v:104" *)
  DFF _205_ (
    .C(clk),
    .D(_003_[5]),
    .Q(wr_ptr[5])
  );
  (* src = "./src/fifo_6x8_syn.v:104" *)
  DFF _206_ (
    .C(clk),
    .D(_001_[0]),
    .Q(data_out_pop[0])
  );
  (* src = "./src/fifo_6x8_syn.v:104" *)
  DFF _207_ (
    .C(clk),
    .D(_001_[1]),
    .Q(data_out_pop[1])
  );
  (* src = "./src/fifo_6x8_syn.v:104" *)
  DFF _208_ (
    .C(clk),
    .D(_001_[2]),
    .Q(data_out_pop[2])
  );
  (* src = "./src/fifo_6x8_syn.v:104" *)
  DFF _209_ (
    .C(clk),
    .D(_001_[3]),
    .Q(data_out_pop[3])
  );
  (* src = "./src/fifo_6x8_syn.v:104" *)
  DFF _210_ (
    .C(clk),
    .D(_001_[4]),
    .Q(data_out_pop[4])
  );
  (* src = "./src/fifo_6x8_syn.v:104" *)
  DFF _211_ (
    .C(clk),
    .D(_001_[5]),
    .Q(data_out_pop[5])
  );
  (* src = "./src/fifo_6x8_syn.v:104" *)
  DFF _212_ (
    .C(clk),
    .D(_001_[6]),
    .Q(data_out_pop[6])
  );
  (* src = "./src/fifo_6x8_syn.v:104" *)
  DFF _213_ (
    .C(clk),
    .D(_001_[7]),
    .Q(data_out_pop[7])
  );
  (* src = "./src/fifo_6x8_syn.v:104" *)
  DFF _214_ (
    .C(clk),
    .D(_000_[0]),
    .Q(data_count[0])
  );
  (* src = "./src/fifo_6x8_syn.v:104" *)
  DFF _215_ (
    .C(clk),
    .D(_000_[1]),
    .Q(data_count[1])
  );
  (* src = "./src/fifo_6x8_syn.v:104" *)
  DFF _216_ (
    .C(clk),
    .D(_000_[2]),
    .Q(data_count[2])
  );
  (* src = "./src/fifo_6x8_syn.v:104" *)
  DFF _217_ (
    .C(clk),
    .D(_000_[3]),
    .Q(data_count[3])
  );
  (* src = "./src/fifo_6x8_syn.v:104" *)
  DFF _218_ (
    .C(clk),
    .D(_000_[4]),
    .Q(data_count[4])
  );
  (* src = "./src/fifo_6x8_syn.v:104" *)
  DFF _219_ (
    .C(clk),
    .D(_000_[5]),
    .Q(data_count[5])
  );
  (* src = "./src/fifo_6x8_syn.v:104" *)
  DFF _220_ (
    .C(clk),
    .D(_000_[6]),
    .Q(data_count[6])
  );
  (* src = "./src/fifo_6x8_syn.v:104" *)
  DFF _221_ (
    .C(clk),
    .D(_000_[7]),
    .Q(data_count[7])
  );
  assign _050_ = _048_ | _020_[0];
  assign _047_[4] = data_count[4] ^(* src = "./src/fifo_6x8_syn.v:82|<techmap.v>:262" *)  1'h1;
  assign _025_[2] = data_count[2] ^(* src = "./src/fifo_6x8_syn.v:87|<techmap.v>:262" *)  1'h1;
  assign _047_[3] = data_count[3] ^(* src = "./src/fifo_6x8_syn.v:87|<techmap.v>:262" *)  1'h1;
  assign _011_[1] = wr_ptr[1] ^(* src = "./src/fifo_6x8_syn.v:114|<techmap.v>:263" *)  wr_ptr[0];
  assign _011_[2] = wr_ptr[2] ^(* src = "./src/fifo_6x8_syn.v:114|<techmap.v>:263" *)  _043_[1];
  assign _011_[3] = wr_ptr[3] ^(* src = "./src/fifo_6x8_syn.v:114|<techmap.v>:263" *)  _043_[2];
  assign _011_[4] = wr_ptr[4] ^(* src = "./src/fifo_6x8_syn.v:114|<techmap.v>:263" *)  _043_[3];
  assign _011_[5] = wr_ptr[5] ^(* src = "./src/fifo_6x8_syn.v:114|<techmap.v>:263" *)  _043_[4];
  assign _011_[0] = wr_ptr[0] ^(* src = "./src/fifo_6x8_syn.v:114|<techmap.v>:262" *)  1'h1;
  assign _013_[1] = data_count[1] ^(* src = "./src/fifo_6x8_syn.v:121|<techmap.v>:263" *)  data_count[0];
  assign _013_[2] = data_count[2] ^(* src = "./src/fifo_6x8_syn.v:121|<techmap.v>:263" *)  _021_[0];
  assign _013_[3] = data_count[3] ^(* src = "./src/fifo_6x8_syn.v:121|<techmap.v>:263" *)  _044_[2];
  assign _013_[4] = data_count[4] ^(* src = "./src/fifo_6x8_syn.v:121|<techmap.v>:263" *)  _044_[3];
  assign _013_[5] = data_count[5] ^(* src = "./src/fifo_6x8_syn.v:121|<techmap.v>:263" *)  _044_[4];
  assign _013_[6] = data_count[6] ^(* src = "./src/fifo_6x8_syn.v:121|<techmap.v>:263" *)  _044_[5];
  assign _013_[7] = data_count[7] ^(* src = "./src/fifo_6x8_syn.v:121|<techmap.v>:263" *)  _044_[6];
  assign _013_[0] = data_count[0] ^(* src = "./src/fifo_6x8_syn.v:121|<techmap.v>:262" *)  1'h1;
  assign _012_[1] = rd_ptr[1] ^(* src = "./src/fifo_6x8_syn.v:124|./src/fifo_6x8_syn.v:114|<techmap.v>:263" *)  rd_ptr[0];
  assign _012_[2] = rd_ptr[2] ^(* src = "./src/fifo_6x8_syn.v:124|./src/fifo_6x8_syn.v:114|<techmap.v>:263" *)  _045_[1];
  assign _012_[3] = rd_ptr[3] ^(* src = "./src/fifo_6x8_syn.v:124|./src/fifo_6x8_syn.v:114|<techmap.v>:263" *)  _045_[2];
  assign _012_[4] = rd_ptr[4] ^(* src = "./src/fifo_6x8_syn.v:124|./src/fifo_6x8_syn.v:114|<techmap.v>:263" *)  _045_[3];
  assign _012_[5] = rd_ptr[5] ^(* src = "./src/fifo_6x8_syn.v:124|./src/fifo_6x8_syn.v:114|<techmap.v>:263" *)  _045_[4];
  assign _012_[0] = rd_ptr[0] ^(* src = "./src/fifo_6x8_syn.v:124|./src/fifo_6x8_syn.v:114|<techmap.v>:262" *)  1'h1;
  assign _042_[1] = _025_[1] ^(* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:263" *)  data_count[0];
  assign _042_[2] = _025_[2] ^(* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:263" *)  _053_[1];
  assign _042_[3] = _047_[3] ^(* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:263" *)  _053_[2];
  assign _042_[4] = _047_[4] ^(* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:263" *)  _053_[3];
  assign _042_[5] = _047_[5] ^(* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:263" *)  _053_[4];
  assign _042_[6] = _047_[6] ^(* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:263" *)  _053_[5];
  assign _042_[7] = _047_[7] ^(* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:263" *)  _053_[6];
  assign _025_[1] = data_count[1] ^(* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:262" *)  1'h1;
  assign _047_[5] = data_count[5] ^(* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:262" *)  1'h1;
  assign _047_[6] = data_count[6] ^(* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:262" *)  1'h1;
  assign _047_[7] = data_count[7] ^(* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:262" *)  1'h1;
  assign _046_[1] = data_count[1] &(* src = "./src/fifo_6x8_syn.v:82|<techmap.v>:260|<techmap.v>:221" *)  _046_[0];
  assign _058_ = _047_[5] &(* src = "./src/fifo_6x8_syn.v:82|<techmap.v>:260|<techmap.v>:221" *)  data_count[4];
  assign _060_ = _018_[1] &(* src = "./src/fifo_6x8_syn.v:82|<techmap.v>:260|<techmap.v>:221" *)  _046_[1];
  assign _062_ = _019_[1] &(* src = "./src/fifo_6x8_syn.v:82|<techmap.v>:260|<techmap.v>:221" *)  _046_[3];
  assign _046_[0] = data_count[0] |(* src = "./src/fifo_6x8_syn.v:82|<techmap.v>:260|<techmap.v>:212" *)  _013_[0];
  assign _064_ = data_count[7] |(* src = "./src/fifo_6x8_syn.v:82|<techmap.v>:260|<techmap.v>:221" *)  _059_;
  assign _046_[3] = data_count[3] |(* src = "./src/fifo_6x8_syn.v:82|<techmap.v>:260|<techmap.v>:221" *)  _060_;
  assign _065_ = _064_ |(* src = "./src/fifo_6x8_syn.v:82|<techmap.v>:260|<techmap.v>:221" *)  _061_;
  assign _046_[31] = _065_ |(* src = "./src/fifo_6x8_syn.v:82|<techmap.v>:260|<techmap.v>:221" *)  _062_;
  assign _066_ = _019_[1] &(* src = "./src/fifo_6x8_syn.v:87|<techmap.v>:260|<techmap.v>:221" *)  _051_[3];
  assign _021_[1] = _047_[3] &(* src = "./src/fifo_6x8_syn.v:87|<techmap.v>:260|<techmap.v>:222" *)  _025_[2];
  assign _019_[1] = _018_[3] &(* src = "./src/fifo_6x8_syn.v:87|<techmap.v>:260|<techmap.v>:222" *)  _018_[2];
  assign _063_ = data_count[5] |(* src = "./src/fifo_6x8_syn.v:87|<techmap.v>:260|<techmap.v>:221" *)  _058_;
  assign _051_[3] = _067_ |(* src = "./src/fifo_6x8_syn.v:87|<techmap.v>:260|<techmap.v>:221" *)  _022_[0];
  assign _051_[31] = _065_ |(* src = "./src/fifo_6x8_syn.v:87|<techmap.v>:260|<techmap.v>:221" *)  _066_;
  assign _043_[1] = wr_ptr[1] &(* src = "./src/fifo_6x8_syn.v:114|<techmap.v>:260|<techmap.v>:221" *)  wr_ptr[0];
  assign _043_[3] = _054_ &(* src = "./src/fifo_6x8_syn.v:114|<techmap.v>:260|<techmap.v>:221" *)  _043_[1];
  assign _054_ = wr_ptr[3] &(* src = "./src/fifo_6x8_syn.v:114|<techmap.v>:260|<techmap.v>:222" *)  wr_ptr[2];
  assign _043_[2] = wr_ptr[2] &(* src = "./src/fifo_6x8_syn.v:114|<techmap.v>:260|<techmap.v>:229" *)  _043_[1];
  assign _043_[4] = wr_ptr[4] &(* src = "./src/fifo_6x8_syn.v:114|<techmap.v>:260|<techmap.v>:229" *)  _043_[3];
  assign _021_[0] = data_count[1] &(* src = "./src/fifo_6x8_syn.v:121|<techmap.v>:260|<techmap.v>:221" *)  data_count[0];
  assign _044_[3] = _055_ &(* src = "./src/fifo_6x8_syn.v:121|<techmap.v>:260|<techmap.v>:221" *)  _021_[0];
  assign _055_ = data_count[3] &(* src = "./src/fifo_6x8_syn.v:121|<techmap.v>:260|<techmap.v>:222" *)  data_count[2];
  assign _056_ = data_count[5] &(* src = "./src/fifo_6x8_syn.v:121|<techmap.v>:260|<techmap.v>:222" *)  data_count[4];
  assign _044_[5] = _056_ &(* src = "./src/fifo_6x8_syn.v:121|<techmap.v>:260|<techmap.v>:229" *)  _044_[3];
  assign _044_[2] = data_count[2] &(* src = "./src/fifo_6x8_syn.v:121|<techmap.v>:260|<techmap.v>:229" *)  _021_[0];
  assign _044_[4] = data_count[4] &(* src = "./src/fifo_6x8_syn.v:121|<techmap.v>:260|<techmap.v>:229" *)  _044_[3];
  assign _044_[6] = data_count[6] &(* src = "./src/fifo_6x8_syn.v:121|<techmap.v>:260|<techmap.v>:229" *)  _044_[5];
  assign _045_[1] = rd_ptr[1] &(* src = "./src/fifo_6x8_syn.v:124|./src/fifo_6x8_syn.v:114|<techmap.v>:260|<techmap.v>:221" *)  rd_ptr[0];
  assign _045_[3] = _057_ &(* src = "./src/fifo_6x8_syn.v:124|./src/fifo_6x8_syn.v:114|<techmap.v>:260|<techmap.v>:221" *)  _045_[1];
  assign _057_ = rd_ptr[3] &(* src = "./src/fifo_6x8_syn.v:124|./src/fifo_6x8_syn.v:114|<techmap.v>:260|<techmap.v>:222" *)  rd_ptr[2];
  assign _045_[2] = rd_ptr[2] &(* src = "./src/fifo_6x8_syn.v:124|./src/fifo_6x8_syn.v:114|<techmap.v>:260|<techmap.v>:229" *)  _045_[1];
  assign _045_[4] = rd_ptr[4] &(* src = "./src/fifo_6x8_syn.v:124|./src/fifo_6x8_syn.v:114|<techmap.v>:260|<techmap.v>:229" *)  _045_[3];
  assign _068_ = _025_[1] &(* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:260|<techmap.v>:221" *)  data_count[0];
  assign _018_[1] = _047_[3] &(* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:260|<techmap.v>:221" *)  data_count[2];
  assign _059_ = _047_[7] &(* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:260|<techmap.v>:221" *)  data_count[6];
  assign _069_ = _021_[1] &(* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:260|<techmap.v>:221" *)  _053_[1];
  assign _061_ = _018_[3] &(* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:260|<techmap.v>:221" *)  _063_;
  assign _018_[2] = _047_[5] &(* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:260|<techmap.v>:222" *)  _047_[4];
  assign _018_[3] = _047_[7] &(* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:260|<techmap.v>:222" *)  _047_[6];
  assign _070_ = _018_[2] &(* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:260|<techmap.v>:229" *)  _053_[3];
  assign _071_ = _025_[2] &(* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:260|<techmap.v>:229" *)  _053_[1];
  assign _072_ = _047_[4] &(* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:260|<techmap.v>:229" *)  _053_[3];
  assign _073_ = _047_[6] &(* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:260|<techmap.v>:229" *)  _053_[5];
  assign _053_[1] = data_count[1] |(* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:260|<techmap.v>:221" *)  _068_;
  assign _067_ = data_count[3] |(* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:260|<techmap.v>:221" *)  _018_[1];
  assign _053_[3] = _067_ |(* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:260|<techmap.v>:221" *)  _069_;
  assign _053_[5] = _063_ |(* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:260|<techmap.v>:229" *)  _070_;
  assign _053_[2] = data_count[2] |(* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:260|<techmap.v>:229" *)  _071_;
  assign _053_[4] = data_count[4] |(* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:260|<techmap.v>:229" *)  _072_;
  assign _053_[6] = data_count[6] |(* src = "./src/fifo_6x8_syn.v:126|<techmap.v>:260|<techmap.v>:229" *)  _073_;
  (* src = "./src/fifo_6x8_syn.v:39" *)
  \$paramod\memory6x8\DATA_SIZE=8\MAIN_SIZE=6  mem (
    .clk(clk),
    .data_in(data_in_push),
    .data_out(data_out),
    .rd_ptr(rd_ptr),
    .read(read),
    .reset(reset),
    .wr_ptr(wr_ptr),
    .write(write)
  );
  assign _011_[31:7] = 25'h0000000;
  assign _012_[31:7] = 25'h0000000;
  assign _013_[31:9] = 23'h000000;
  assign _016_[3:2] = _014_[3:2];
  assign _017_[1] = _015_[1];
  assign _018_[15:4] = 12'hfff;
  assign _019_[7:2] = 6'h3f;
  assign _020_[3:1] = 3'h7;
  assign _021_[15:2] = { 12'hfff, _018_[3:2] };
  assign _022_[7:1] = { 6'h3f, _019_[1] };
  assign _023_[3:1] = 3'h7;
  assign { _025_[7:3], _025_[0] } = { data_count[7:3], data_count[0] };
  assign { _042_[30:8], _042_[0] } = { _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _042_[31], _013_[0] };
  assign { _043_[31:5], _043_[0] } = { 26'h0000000, _011_[6], wr_ptr[0] };
  assign { _044_[31:7], _044_[1:0] } = { 24'h000000, _013_[8], _021_[0], data_count[0] };
  assign { _045_[31:5], _045_[0] } = { 26'h0000000, _012_[6], rd_ptr[0] };
  assign _046_[30:7] = { _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31] };
  assign { _047_[31:8], _047_[2:0] } = { 24'hffffff, data_count[2:1], _013_[0] };
  assign { _051_[30:7], _051_[1:0] } = { _051_[31], _051_[31], _051_[31], _051_[31], _051_[31], _051_[31], _051_[31], _051_[31], _051_[31], _051_[31], _051_[31], _051_[31], _051_[31], _051_[31], _051_[31], _051_[31], _051_[31], _051_[31], _051_[31], _051_[31], _051_[31], _051_[31], _051_[31], _051_[31], _021_[0], data_count[0] };
  assign { _053_[30:7], _053_[0] } = { _053_[31], _053_[31], _053_[31], _053_[31], _053_[31], _053_[31], _053_[31], _053_[31], _053_[31], _053_[31], _053_[31], _053_[31], _053_[31], _053_[31], _053_[31], _053_[31], _053_[31], _053_[31], _053_[31], _053_[31], _053_[31], _053_[31], _053_[31], _053_[31], data_count[0] };
  assign datamod = 1'h0;
endmodule

(* src = "./src/mux2x1_behav.v:12" *)
module mux21_syn(clk, reset, fifo_empty0, fifo_empty1, in0, in1, out);
  (* src = "./src/mux2x1_behav.v:26" *)
  wire [7:0] _00_;
  wire [4:0] _01_;
  wire [1:0] _02_;
  wire _03_;
  wire [4:0] _04_;
  wire [1:0] _05_;
  wire _06_;
  wire [7:0] _07_;
  wire _08_;
  wire [7:0] _09_;
  wire [7:0] _10_;
  wire [7:0] _11_;
  wire _12_;
  wire [7:0] _13_;
  (* src = "./src/mux2x1_behav.v:13" *)
  input clk;
  (* src = "./src/mux2x1_behav.v:15" *)
  input fifo_empty0;
  (* src = "./src/mux2x1_behav.v:16" *)
  input fifo_empty1;
  (* src = "./src/mux2x1_behav.v:17" *)
  input [9:0] in0;
  (* src = "./src/mux2x1_behav.v:18" *)
  input [9:0] in1;
  (* src = "./src/mux2x1_behav.v:19" *)
  output [7:0] out;
  (* src = "./src/mux2x1_behav.v:14" *)
  input reset;
  assign _01_[0] = in0[0] |(* src = "./src/mux2x1_behav.v:39" *)  in0[1];
  assign _01_[1] = in0[2] |(* src = "./src/mux2x1_behav.v:39" *)  in0[3];
  assign _01_[2] = in0[4] |(* src = "./src/mux2x1_behav.v:39" *)  in0[5];
  assign _01_[3] = in0[6] |(* src = "./src/mux2x1_behav.v:39" *)  in0[7];
  assign _01_[4] = in0[8] |(* src = "./src/mux2x1_behav.v:39" *)  in0[9];
  assign _02_[0] = _01_[0] |(* src = "./src/mux2x1_behav.v:39" *)  _01_[1];
  assign _02_[1] = _01_[2] |(* src = "./src/mux2x1_behav.v:39" *)  _01_[3];
  assign _03_ = _02_[0] |(* src = "./src/mux2x1_behav.v:39" *)  _02_[1];
  assign _12_ = _03_ |(* src = "./src/mux2x1_behav.v:39" *)  _01_[4];
  assign _04_[0] = in1[0] |(* src = "./src/mux2x1_behav.v:58" *)  in1[1];
  assign _04_[1] = in1[2] |(* src = "./src/mux2x1_behav.v:58" *)  in1[3];
  assign _04_[2] = in1[4] |(* src = "./src/mux2x1_behav.v:58" *)  in1[5];
  assign _04_[3] = in1[6] |(* src = "./src/mux2x1_behav.v:58" *)  in1[7];
  assign _04_[4] = in1[8] |(* src = "./src/mux2x1_behav.v:58" *)  in1[9];
  assign _05_[0] = _04_[0] |(* src = "./src/mux2x1_behav.v:58" *)  _04_[1];
  assign _05_[1] = _04_[2] |(* src = "./src/mux2x1_behav.v:58" *)  _04_[3];
  assign _06_ = _05_[0] |(* src = "./src/mux2x1_behav.v:58" *)  _05_[1];
  assign _08_ = _06_ |(* src = "./src/mux2x1_behav.v:58" *)  _04_[4];
  assign _07_[0] = _08_ ? (* src = "./src/mux2x1_behav.v:47" *) in1[0] : out[0];
  assign _07_[1] = _08_ ? (* src = "./src/mux2x1_behav.v:47" *) in1[1] : out[1];
  assign _07_[2] = _08_ ? (* src = "./src/mux2x1_behav.v:47" *) in1[2] : out[2];
  assign _07_[3] = _08_ ? (* src = "./src/mux2x1_behav.v:47" *) in1[3] : out[3];
  assign _07_[4] = _08_ ? (* src = "./src/mux2x1_behav.v:47" *) in1[4] : out[4];
  assign _07_[5] = _08_ ? (* src = "./src/mux2x1_behav.v:47" *) in1[5] : out[5];
  assign _07_[6] = _08_ ? (* src = "./src/mux2x1_behav.v:47" *) in1[6] : out[6];
  assign _07_[7] = _08_ ? (* src = "./src/mux2x1_behav.v:47" *) in1[7] : out[7];
  assign _09_[0] = fifo_empty1 ? (* src = "./src/mux2x1_behav.v:56" *) 1'h0 : _07_[0];
  assign _09_[1] = fifo_empty1 ? (* src = "./src/mux2x1_behav.v:56" *) 1'h0 : _07_[1];
  assign _09_[2] = fifo_empty1 ? (* src = "./src/mux2x1_behav.v:56" *) 1'h0 : _07_[2];
  assign _09_[3] = fifo_empty1 ? (* src = "./src/mux2x1_behav.v:56" *) 1'h0 : _07_[3];
  assign _09_[4] = fifo_empty1 ? (* src = "./src/mux2x1_behav.v:56" *) 1'h0 : _07_[4];
  assign _09_[5] = fifo_empty1 ? (* src = "./src/mux2x1_behav.v:56" *) 1'h0 : _07_[5];
  assign _09_[6] = fifo_empty1 ? (* src = "./src/mux2x1_behav.v:56" *) 1'h0 : _07_[6];
  assign _09_[7] = fifo_empty1 ? (* src = "./src/mux2x1_behav.v:56" *) 1'h0 : _07_[7];
  assign _10_[0] = fifo_empty1 ? (* src = "./src/mux2x1_behav.v:45" *) out[0] : _07_[0];
  assign _10_[1] = fifo_empty1 ? (* src = "./src/mux2x1_behav.v:45" *) out[1] : _07_[1];
  assign _10_[2] = fifo_empty1 ? (* src = "./src/mux2x1_behav.v:45" *) out[2] : _07_[2];
  assign _10_[3] = fifo_empty1 ? (* src = "./src/mux2x1_behav.v:45" *) out[3] : _07_[3];
  assign _10_[4] = fifo_empty1 ? (* src = "./src/mux2x1_behav.v:45" *) out[4] : _07_[4];
  assign _10_[5] = fifo_empty1 ? (* src = "./src/mux2x1_behav.v:45" *) out[5] : _07_[5];
  assign _10_[6] = fifo_empty1 ? (* src = "./src/mux2x1_behav.v:45" *) out[6] : _07_[6];
  assign _10_[7] = fifo_empty1 ? (* src = "./src/mux2x1_behav.v:45" *) out[7] : _07_[7];
  assign _11_[0] = _12_ ? (* src = "./src/mux2x1_behav.v:39" *) in0[0] : _10_[0];
  assign _11_[1] = _12_ ? (* src = "./src/mux2x1_behav.v:39" *) in0[1] : _10_[1];
  assign _11_[2] = _12_ ? (* src = "./src/mux2x1_behav.v:39" *) in0[2] : _10_[2];
  assign _11_[3] = _12_ ? (* src = "./src/mux2x1_behav.v:39" *) in0[3] : _10_[3];
  assign _11_[4] = _12_ ? (* src = "./src/mux2x1_behav.v:39" *) in0[4] : _10_[4];
  assign _11_[5] = _12_ ? (* src = "./src/mux2x1_behav.v:39" *) in0[5] : _10_[5];
  assign _11_[6] = _12_ ? (* src = "./src/mux2x1_behav.v:39" *) in0[6] : _10_[6];
  assign _11_[7] = _12_ ? (* src = "./src/mux2x1_behav.v:39" *) in0[7] : _10_[7];
  assign _13_[0] = fifo_empty0 ? (* src = "./src/mux2x1_behav.v:37" *) _09_[0] : _11_[0];
  assign _13_[1] = fifo_empty0 ? (* src = "./src/mux2x1_behav.v:37" *) _09_[1] : _11_[1];
  assign _13_[2] = fifo_empty0 ? (* src = "./src/mux2x1_behav.v:37" *) _09_[2] : _11_[2];
  assign _13_[3] = fifo_empty0 ? (* src = "./src/mux2x1_behav.v:37" *) _09_[3] : _11_[3];
  assign _13_[4] = fifo_empty0 ? (* src = "./src/mux2x1_behav.v:37" *) _09_[4] : _11_[4];
  assign _13_[5] = fifo_empty0 ? (* src = "./src/mux2x1_behav.v:37" *) _09_[5] : _11_[5];
  assign _13_[6] = fifo_empty0 ? (* src = "./src/mux2x1_behav.v:37" *) _09_[6] : _11_[6];
  assign _13_[7] = fifo_empty0 ? (* src = "./src/mux2x1_behav.v:37" *) _09_[7] : _11_[7];
  assign _00_[0] = reset ? (* src = "./src/mux2x1_behav.v:30" *) _13_[0] : 1'h0;
  assign _00_[1] = reset ? (* src = "./src/mux2x1_behav.v:30" *) _13_[1] : 1'h0;
  assign _00_[2] = reset ? (* src = "./src/mux2x1_behav.v:30" *) _13_[2] : 1'h0;
  assign _00_[3] = reset ? (* src = "./src/mux2x1_behav.v:30" *) _13_[3] : 1'h0;
  assign _00_[4] = reset ? (* src = "./src/mux2x1_behav.v:30" *) _13_[4] : 1'h0;
  assign _00_[5] = reset ? (* src = "./src/mux2x1_behav.v:30" *) _13_[5] : 1'h0;
  assign _00_[6] = reset ? (* src = "./src/mux2x1_behav.v:30" *) _13_[6] : 1'h0;
  assign _00_[7] = reset ? (* src = "./src/mux2x1_behav.v:30" *) _13_[7] : 1'h0;
  (* src = "./src/mux2x1_behav.v:26" *)
  DFF _80_ (
    .C(clk),
    .D(_00_[0]),
    .Q(out[0])
  );
  (* src = "./src/mux2x1_behav.v:26" *)
  DFF _81_ (
    .C(clk),
    .D(_00_[1]),
    .Q(out[1])
  );
  (* src = "./src/mux2x1_behav.v:26" *)
  DFF _82_ (
    .C(clk),
    .D(_00_[2]),
    .Q(out[2])
  );
  (* src = "./src/mux2x1_behav.v:26" *)
  DFF _83_ (
    .C(clk),
    .D(_00_[3]),
    .Q(out[3])
  );
  (* src = "./src/mux2x1_behav.v:26" *)
  DFF _84_ (
    .C(clk),
    .D(_00_[4]),
    .Q(out[4])
  );
  (* src = "./src/mux2x1_behav.v:26" *)
  DFF _85_ (
    .C(clk),
    .D(_00_[5]),
    .Q(out[5])
  );
  (* src = "./src/mux2x1_behav.v:26" *)
  DFF _86_ (
    .C(clk),
    .D(_00_[6]),
    .Q(out[6])
  );
  (* src = "./src/mux2x1_behav.v:26" *)
  DFF _87_ (
    .C(clk),
    .D(_00_[7]),
    .Q(out[7])
  );
endmodule

(* top =  1  *)
(* src = "./src/routing.v:16" *)
module route_syn(clk, reset, in0, in1, emptyF0, emptyF1, classif, out0, out1, almost_full0, almost_empty0, fifo0_empty, fifo0_error, fifo0_pause, fifo_full0, fifo_full1, almost_full1, almost_empty1, fifo1_empty, fifo1_error, fifo1_pause, Error);
  (* src = "./src/routing.v:42" *)
  output Error;
  (* src = "./src/routing.v:122" *)
  wire Error_F;
  (* src = "./src/routing.v:48" *)
  wire PP0;
  (* src = "./src/routing.v:48" *)
  wire PP1;
  (* src = "./src/routing.v:31" *)
  output almost_empty0;
  (* src = "./src/routing.v:38" *)
  output almost_empty1;
  (* src = "./src/routing.v:30" *)
  output almost_full0;
  (* src = "./src/routing.v:37" *)
  output almost_full1;
  (* src = "./src/routing.v:26" *)
  input classif;
  (* src = "./src/routing.v:17" *)
  input clk;
  (* src = "./src/routing.v:24" *)
  input emptyF0;
  (* src = "./src/routing.v:25" *)
  input emptyF1;
  (* src = "./src/routing.v:32" *)
  output fifo0_empty;
  (* src = "./src/routing.v:33" *)
  output fifo0_error;
  (* src = "./src/routing.v:34" *)
  output fifo0_pause;
  (* src = "./src/routing.v:39" *)
  output fifo1_empty;
  (* src = "./src/routing.v:40" *)
  output fifo1_error;
  (* src = "./src/routing.v:41" *)
  output fifo1_pause;
  (* src = "./src/routing.v:35" *)
  output fifo_full0;
  (* src = "./src/routing.v:36" *)
  output fifo_full1;
  (* src = "./src/routing.v:22" *)
  input [9:0] in0;
  (* src = "./src/routing.v:23" *)
  input [9:0] in1;
  (* src = "./src/routing.v:60" *)
  wire n_Fifo_full0;
  (* src = "./src/routing.v:69" *)
  wire n_Fifo_full1;
  (* src = "./src/routing.v:56" *)
  wire n_almost_empty0;
  (* src = "./src/routing.v:65" *)
  wire n_almost_empty1;
  (* src = "./src/routing.v:55" *)
  wire n_almost_full0;
  (* src = "./src/routing.v:64" *)
  wire n_almost_full1;
  (* src = "./src/routing.v:57" *)
  wire n_fifo0_empty;
  (* src = "./src/routing.v:58" *)
  wire n_fifo0_error;
  (* src = "./src/routing.v:59" *)
  wire n_fifo0_pause;
  (* src = "./src/routing.v:66" *)
  wire n_fifo1_empty;
  (* src = "./src/routing.v:67" *)
  wire n_fifo1_error;
  (* src = "./src/routing.v:68" *)
  wire n_fifo1_pause;
  (* src = "./src/routing.v:61" *)
  wire [7:0] n_out0;
  (* src = "./src/routing.v:70" *)
  wire [7:0] n_out1;
  (* src = "./src/routing.v:28" *)
  output [7:0] out0;
  (* src = "./src/routing.v:46" *)
  wire [7:0] out0_demux;
  (* src = "./src/routing.v:29" *)
  output [7:0] out1;
  (* src = "./src/routing.v:46" *)
  wire [7:0] out1_demux;
  (* src = "./src/routing.v:45" *)
  wire [7:0] out_mux;
  (* src = "./src/routing.v:50" *)
  wire read0;
  (* src = "./src/routing.v:51" *)
  wire read1;
  (* src = "./src/routing.v:18" *)
  input reset;
  (* src = "./src/routing.v:52" *)
  wire write0;
  (* src = "./src/routing.v:53" *)
  wire write1;
  (* module_not_derived = 32'd1 *)
  (* src = "./src/routing.v:101" *)
  dfcontrol_syn datacontrol (
    .Error(Error_F),
    .Fifo_full1(n_Fifo_full0),
    .Fifo_full2(n_Fifo_full1),
    .almost_empty1(n_almost_empty0),
    .almost_empty2(n_almost_empty1),
    .almost_full1(n_almost_full0),
    .almost_full2(n_almost_full1),
    .clk(clk),
    .fifo_empty1(n_fifo0_empty),
    .fifo_empty2(n_fifo1_empty),
    .fifo_error1(n_fifo0_error),
    .fifo_error2(n_fifo1_error),
    .fifo_pause1(n_fifo0_pause),
    .fifo_pause2(n_fifo1_pause),
    .push_0(PP0),
    .push_1(PP1),
    .read1(read0),
    .read2(read1),
    .reset(reset),
    .write1(write0),
    .write2(write1)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "./src/routing.v:87" *)
  demux12_8_syn demux12_8_syn_routing (
    .classif(classif),
    .clk(clk),
    .in(out_mux),
    .out0(out0_demux),
    .out1(out1_demux),
    .push_0(PP0),
    .push_1(PP1),
    .reset(reset)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "./src/routing.v:125" *)
  fifo_6x8_syn fifo6x8B0 (
    .Fifo_full(n_Fifo_full0),
    .almost_empty(n_almost_empty0),
    .almost_full(n_almost_full0),
    .clk(clk),
    .data_in_push(out0_demux),
    .data_out_pop(n_out0),
    .fifo_empty(n_fifo0_empty),
    .fifo_error(n_fifo0_error),
    .fifo_pause(n_fifo0_pause),
    .read(read0),
    .reset(reset),
    .write(write0)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "./src/routing.v:142" *)
  fifo_6x8_syn fifo6x8B1 (
    .Fifo_full(n_Fifo_full1),
    .almost_empty(n_almost_empty1),
    .almost_full(n_almost_full1),
    .clk(clk),
    .data_in_push(out1_demux),
    .data_out_pop(n_out1),
    .fifo_empty(n_fifo1_empty),
    .fifo_error(n_fifo1_error),
    .fifo_pause(n_fifo1_pause),
    .read(read1),
    .reset(reset),
    .write(write1)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "./src/routing.v:74" *)
  mux21_syn mux21_syn_routing (
    .clk(clk),
    .fifo_empty0(emptyF0),
    .fifo_empty1(emptyF1),
    .in0(in0),
    .in1(in1),
    .out(out_mux),
    .reset(reset)
  );
  assign Error = Error_F;
  assign almost_empty0 = n_almost_empty0;
  assign almost_empty1 = n_almost_empty1;
  assign almost_full0 = n_almost_full0;
  assign almost_full1 = n_almost_full1;
  assign fifo0_empty = n_fifo0_empty;
  assign fifo0_error = n_fifo0_error;
  assign fifo0_pause = n_fifo0_pause;
  assign fifo1_empty = n_fifo1_empty;
  assign fifo1_error = n_fifo1_error;
  assign fifo1_pause = n_fifo1_pause;
  assign fifo_full0 = n_Fifo_full0;
  assign fifo_full1 = n_Fifo_full1;
  assign out0 = n_out0;
  assign out1 = n_out1;
endmodule
