/* Generated by Yosys 0.9 (git sha1 UNKNOWN, gcc 7.5.0-3ubuntu1~18.04 -fPIC -Os) */

(* dynports =  1  *)
(* src = "./src/class.v:18" *)
module \$paramod\classswitching_syn\DATA_SIZE=10\MAIN_SIZE=8 (out0, out1, Error, fifo_empty0, fifo_empty1, fifo_class_almost_empty0, fifo_class_almost_empty1, valid, reset, clk, in, pop_0, pop_1);
  (* src = "./src/class.v:25" *)
  output Error;
  (* src = "./src/class.v:34" *)
  input clk;
  (* src = "./src/class.v:41" *)
  wire [9:0] data_out_fifo0_to_out;
  (* src = "./src/class.v:48" *)
  wire [9:0] data_out_fifo1_to_out;
  (* src = "./src/class.v:55" *)
  wire [9:0] demux_out_to_fifo0;
  (* src = "./src/class.v:56" *)
  wire [9:0] demux_out_to_fifo1;
  (* src = "./src/class.v:28" *)
  output fifo_class_almost_empty0;
  (* src = "./src/class.v:29" *)
  output fifo_class_almost_empty1;
  (* src = "./src/class.v:26" *)
  output fifo_empty0;
  (* src = "./src/class.v:27" *)
  output fifo_empty1;
  (* src = "./src/class.v:35" *)
  input [9:0] in;
  (* src = "./src/class.v:23" *)
  output [9:0] out0;
  (* src = "./src/class.v:24" *)
  output [9:0] out1;
  (* src = "./src/class.v:36" *)
  input pop_0;
  (* src = "./src/class.v:37" *)
  input pop_1;
  (* src = "./src/class.v:33" *)
  input reset;
  (* src = "./src/class.v:32" *)
  input valid;
  (* src = "./src/class.v:43" *)
  wire wire_fifo0_almost_empty;
  (* src = "./src/class.v:42" *)
  wire wire_fifo0_almost_full;
  (* src = "./src/class.v:45" *)
  wire wire_fifo0_empty;
  (* src = "./src/class.v:46" *)
  wire wire_fifo0_error;
  (* src = "./src/class.v:44" *)
  (* unused_bits = "0" *)
  wire wire_fifo0_full;
  (* src = "./src/class.v:50" *)
  wire wire_fifo1_almost_empty;
  (* src = "./src/class.v:49" *)
  wire wire_fifo1_almost_full;
  (* src = "./src/class.v:52" *)
  wire wire_fifo1_empty;
  (* src = "./src/class.v:53" *)
  wire wire_fifo1_error;
  (* src = "./src/class.v:51" *)
  (* unused_bits = "0" *)
  wire wire_fifo1_full;
  (* src = "./src/class.v:57" *)
  wire write_push_demux_to_fifo0;
  (* src = "./src/class.v:58" *)
  wire write_push_demux_to_fifo1;
  assign Error = wire_fifo0_error |(* src = "./src/class.v:121" *)  wire_fifo1_error;
  (* src = "./src/class.v:64" *)
  \$paramod\demux12_syn\DATA_SIZE=10  demux1x2 (
    .classif(in[9]),
    .clk(clk),
    .fifo_up0_almostfull(wire_fifo0_almost_full),
    .fifo_up1_almostfull(wire_fifo1_almost_full),
    .in(in),
    .out0(demux_out_to_fifo0),
    .out1(demux_out_to_fifo1),
    .push_0(write_push_demux_to_fifo0),
    .push_1(write_push_demux_to_fifo1),
    .reset(reset),
    .valid(valid)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "./src/class.v:82" *)
  fifo_param_syn fifo0 (
    .Fifo_full(wire_fifo0_full),
    .almost_empty(wire_fifo0_almost_empty),
    .almost_full(wire_fifo0_almost_full),
    .clk(clk),
    .data_in_push(demux_out_to_fifo0),
    .data_out_pop(data_out_fifo0_to_out),
    .fifo_empty(wire_fifo0_empty),
    .fifo_error(wire_fifo0_error),
    .read(pop_0),
    .reset(reset),
    .write(write_push_demux_to_fifo0)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "./src/class.v:98" *)
  fifo_param_syn fifo1 (
    .Fifo_full(wire_fifo1_full),
    .almost_empty(wire_fifo1_almost_empty),
    .almost_full(wire_fifo1_almost_full),
    .clk(clk),
    .data_in_push(demux_out_to_fifo1),
    .data_out_pop(data_out_fifo1_to_out),
    .fifo_empty(wire_fifo1_empty),
    .fifo_error(wire_fifo1_error),
    .read(pop_1),
    .reset(reset),
    .write(write_push_demux_to_fifo1)
  );
  assign fifo_class_almost_empty0 = wire_fifo0_almost_empty;
  assign fifo_class_almost_empty1 = wire_fifo1_almost_empty;
  assign fifo_empty0 = wire_fifo0_empty;
  assign fifo_empty1 = wire_fifo1_empty;
  assign out0 = data_out_fifo0_to_out;
  assign out1 = data_out_fifo1_to_out;
endmodule

(* dynports =  1  *)
(* src = "./src/demux1x2.v:23" *)
module \$paramod\demux12_syn\DATA_SIZE=10 (out0, out1, push_0, push_1, in, fifo_up0_almostfull, fifo_up1_almostfull, reset, classif, valid, clk);
  (* src = "./src/demux1x2.v:42" *)
  wire [9:0] _000_;
  (* src = "./src/demux1x2.v:42" *)
  wire [9:0] _001_;
  (* src = "./src/demux1x2.v:42" *)
  wire _002_;
  (* src = "./src/demux1x2.v:42" *)
  wire _003_;
  (* src = "./src/demux1x2.v:53" *)
  wire _004_;
  (* src = "./src/demux1x2.v:53" *)
  wire _005_;
  (* src = "./src/demux1x2.v:63" *)
  wire _006_;
  wire _007_;
  (* src = "./src/demux1x2.v:62|./src/demux1x2.v:51|<techmap.v>:432" *)
  wire [1:0] _008_;
  (* src = "./src/demux1x2.v:62|./src/demux1x2.v:51|<techmap.v>:428" *)
  wire _009_;
  wire _010_;
  wire _011_;
  wire [9:0] _012_;
  wire [9:0] _013_;
  wire [9:0] _014_;
  wire [9:0] _015_;
  wire _016_;
  (* src = "./src/demux1x2.v:62|./src/demux1x2.v:51|<techmap.v>:432" *)
  wire [1:0] _017_;
  (* src = "./src/demux1x2.v:62|./src/demux1x2.v:51|<techmap.v>:428" *)
  wire _018_;
  wire _019_;
  (* src = "./src/demux1x2.v:37" *)
  input classif;
  (* src = "./src/demux1x2.v:39" *)
  input clk;
  (* src = "./src/demux1x2.v:34" *)
  input fifo_up0_almostfull;
  (* src = "./src/demux1x2.v:35" *)
  input fifo_up1_almostfull;
  (* src = "./src/demux1x2.v:33" *)
  input [9:0] in;
  (* src = "./src/demux1x2.v:28" *)
  output [9:0] out0;
  (* src = "./src/demux1x2.v:29" *)
  output [9:0] out1;
  (* src = "./src/demux1x2.v:30" *)
  output push_0;
  (* src = "./src/demux1x2.v:31" *)
  output push_1;
  (* src = "./src/demux1x2.v:36" *)
  input reset;
  (* src = "./src/demux1x2.v:38" *)
  input valid;
  assign _009_ = _008_[0] |(* src = "./src/demux1x2.v:62|./src/demux1x2.v:51|<techmap.v>:441" *)  _008_[1];
  assign _018_ = _017_[0] |(* src = "./src/demux1x2.v:62|./src/demux1x2.v:51|<techmap.v>:441" *)  _017_[1];
  assign _007_ = ~(* src = "./src/demux1x2.v:63" *) _006_;
  assign _003_ = reset ? (* src = "./src/demux1x2.v:43" *) _009_ : 1'h0;
  assign _010_ = _005_ ? (* src = "./src/demux1x2.v:53" *) push_1 : 1'h0;
  assign _001_[0] = reset ? (* src = "./src/demux1x2.v:43" *) _013_[0] : 1'h0;
  assign _001_[1] = reset ? (* src = "./src/demux1x2.v:43" *) _013_[1] : 1'h0;
  assign _001_[2] = reset ? (* src = "./src/demux1x2.v:43" *) _013_[2] : 1'h0;
  assign _001_[3] = reset ? (* src = "./src/demux1x2.v:43" *) _013_[3] : 1'h0;
  assign _001_[4] = reset ? (* src = "./src/demux1x2.v:43" *) _013_[4] : 1'h0;
  assign _001_[5] = reset ? (* src = "./src/demux1x2.v:43" *) _013_[5] : 1'h0;
  assign _001_[6] = reset ? (* src = "./src/demux1x2.v:43" *) _013_[6] : 1'h0;
  assign _001_[7] = reset ? (* src = "./src/demux1x2.v:43" *) _013_[7] : 1'h0;
  assign _001_[8] = reset ? (* src = "./src/demux1x2.v:43" *) _013_[8] : 1'h0;
  assign _001_[9] = reset ? (* src = "./src/demux1x2.v:43" *) _013_[9] : 1'h0;
  assign _012_[0] = _006_ ? (* src = "./src/demux1x2.v:63" *) 1'h0 : in[0];
  assign _012_[1] = _006_ ? (* src = "./src/demux1x2.v:63" *) 1'h0 : in[1];
  assign _012_[2] = _006_ ? (* src = "./src/demux1x2.v:63" *) 1'h0 : in[2];
  assign _012_[3] = _006_ ? (* src = "./src/demux1x2.v:63" *) 1'h0 : in[3];
  assign _012_[4] = _006_ ? (* src = "./src/demux1x2.v:63" *) 1'h0 : in[4];
  assign _012_[5] = _006_ ? (* src = "./src/demux1x2.v:63" *) 1'h0 : in[5];
  assign _012_[6] = _006_ ? (* src = "./src/demux1x2.v:63" *) 1'h0 : in[6];
  assign _012_[7] = _006_ ? (* src = "./src/demux1x2.v:63" *) 1'h0 : in[7];
  assign _012_[8] = _006_ ? (* src = "./src/demux1x2.v:63" *) 1'h0 : in[8];
  assign _012_[9] = _006_ ? (* src = "./src/demux1x2.v:63" *) 1'h0 : in[9];
  assign _013_[0] = classif ? (* src = "./src/demux1x2.v:62|./src/demux1x2.v:51" *) _012_[0] : out1[0];
  assign _013_[1] = classif ? (* src = "./src/demux1x2.v:62|./src/demux1x2.v:51" *) _012_[1] : out1[1];
  assign _013_[2] = classif ? (* src = "./src/demux1x2.v:62|./src/demux1x2.v:51" *) _012_[2] : out1[2];
  assign _013_[3] = classif ? (* src = "./src/demux1x2.v:62|./src/demux1x2.v:51" *) _012_[3] : out1[3];
  assign _013_[4] = classif ? (* src = "./src/demux1x2.v:62|./src/demux1x2.v:51" *) _012_[4] : out1[4];
  assign _013_[5] = classif ? (* src = "./src/demux1x2.v:62|./src/demux1x2.v:51" *) _012_[5] : out1[5];
  assign _013_[6] = classif ? (* src = "./src/demux1x2.v:62|./src/demux1x2.v:51" *) _012_[6] : out1[6];
  assign _013_[7] = classif ? (* src = "./src/demux1x2.v:62|./src/demux1x2.v:51" *) _012_[7] : out1[7];
  assign _013_[8] = classif ? (* src = "./src/demux1x2.v:62|./src/demux1x2.v:51" *) _012_[8] : out1[8];
  assign _013_[9] = classif ? (* src = "./src/demux1x2.v:62|./src/demux1x2.v:51" *) _012_[9] : out1[9];
  assign _014_[0] = _005_ ? (* src = "./src/demux1x2.v:53" *) 1'h0 : in[0];
  assign _014_[1] = _005_ ? (* src = "./src/demux1x2.v:53" *) 1'h0 : in[1];
  assign _014_[2] = _005_ ? (* src = "./src/demux1x2.v:53" *) 1'h0 : in[2];
  assign _014_[3] = _005_ ? (* src = "./src/demux1x2.v:53" *) 1'h0 : in[3];
  assign _014_[4] = _005_ ? (* src = "./src/demux1x2.v:53" *) 1'h0 : in[4];
  assign _014_[5] = _005_ ? (* src = "./src/demux1x2.v:53" *) 1'h0 : in[5];
  assign _014_[6] = _005_ ? (* src = "./src/demux1x2.v:53" *) 1'h0 : in[6];
  assign _014_[7] = _005_ ? (* src = "./src/demux1x2.v:53" *) 1'h0 : in[7];
  assign _014_[8] = _005_ ? (* src = "./src/demux1x2.v:53" *) 1'h0 : in[8];
  assign _014_[9] = _005_ ? (* src = "./src/demux1x2.v:53" *) 1'h0 : in[9];
  assign _015_[0] = classif ? (* src = "./src/demux1x2.v:52|./src/demux1x2.v:51" *) out0[0] : _014_[0];
  assign _015_[1] = classif ? (* src = "./src/demux1x2.v:52|./src/demux1x2.v:51" *) out0[1] : _014_[1];
  assign _015_[2] = classif ? (* src = "./src/demux1x2.v:52|./src/demux1x2.v:51" *) out0[2] : _014_[2];
  assign _015_[3] = classif ? (* src = "./src/demux1x2.v:52|./src/demux1x2.v:51" *) out0[3] : _014_[3];
  assign _015_[4] = classif ? (* src = "./src/demux1x2.v:52|./src/demux1x2.v:51" *) out0[4] : _014_[4];
  assign _015_[5] = classif ? (* src = "./src/demux1x2.v:52|./src/demux1x2.v:51" *) out0[5] : _014_[5];
  assign _015_[6] = classif ? (* src = "./src/demux1x2.v:52|./src/demux1x2.v:51" *) out0[6] : _014_[6];
  assign _015_[7] = classif ? (* src = "./src/demux1x2.v:52|./src/demux1x2.v:51" *) out0[7] : _014_[7];
  assign _015_[8] = classif ? (* src = "./src/demux1x2.v:52|./src/demux1x2.v:51" *) out0[8] : _014_[8];
  assign _015_[9] = classif ? (* src = "./src/demux1x2.v:52|./src/demux1x2.v:51" *) out0[9] : _014_[9];
  assign _000_[0] = reset ? (* src = "./src/demux1x2.v:43" *) _015_[0] : 1'h0;
  assign _000_[1] = reset ? (* src = "./src/demux1x2.v:43" *) _015_[1] : 1'h0;
  assign _000_[2] = reset ? (* src = "./src/demux1x2.v:43" *) _015_[2] : 1'h0;
  assign _000_[3] = reset ? (* src = "./src/demux1x2.v:43" *) _015_[3] : 1'h0;
  assign _000_[4] = reset ? (* src = "./src/demux1x2.v:43" *) _015_[4] : 1'h0;
  assign _000_[5] = reset ? (* src = "./src/demux1x2.v:43" *) _015_[5] : 1'h0;
  assign _000_[6] = reset ? (* src = "./src/demux1x2.v:43" *) _015_[6] : 1'h0;
  assign _000_[7] = reset ? (* src = "./src/demux1x2.v:43" *) _015_[7] : 1'h0;
  assign _000_[8] = reset ? (* src = "./src/demux1x2.v:43" *) _015_[8] : 1'h0;
  assign _000_[9] = reset ? (* src = "./src/demux1x2.v:43" *) _015_[9] : 1'h0;
  assign _019_ = ~(* src = "./src/demux1x2.v:53" *) _005_;
  assign _016_ = _006_ ? (* src = "./src/demux1x2.v:63" *) push_0 : 1'h0;
  assign _002_ = reset ? (* src = "./src/demux1x2.v:43" *) _018_ : 1'h0;
  assign _004_ = ~(* src = "./src/demux1x2.v:63" *) valid;
  assign _011_ = ~(* src = "./src/demux1x2.v:52|./src/demux1x2.v:51" *) classif;
  (* src = "./src/demux1x2.v:42" *)
  DFF _090_ (
    .C(clk),
    .D(_002_),
    .Q(push_0)
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _091_ (
    .C(clk),
    .D(_000_[0]),
    .Q(out0[0])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _092_ (
    .C(clk),
    .D(_000_[1]),
    .Q(out0[1])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _093_ (
    .C(clk),
    .D(_000_[2]),
    .Q(out0[2])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _094_ (
    .C(clk),
    .D(_000_[3]),
    .Q(out0[3])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _095_ (
    .C(clk),
    .D(_000_[4]),
    .Q(out0[4])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _096_ (
    .C(clk),
    .D(_000_[5]),
    .Q(out0[5])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _097_ (
    .C(clk),
    .D(_000_[6]),
    .Q(out0[6])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _098_ (
    .C(clk),
    .D(_000_[7]),
    .Q(out0[7])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _099_ (
    .C(clk),
    .D(_000_[8]),
    .Q(out0[8])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _100_ (
    .C(clk),
    .D(_000_[9]),
    .Q(out0[9])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _101_ (
    .C(clk),
    .D(_001_[0]),
    .Q(out1[0])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _102_ (
    .C(clk),
    .D(_001_[1]),
    .Q(out1[1])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _103_ (
    .C(clk),
    .D(_001_[2]),
    .Q(out1[2])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _104_ (
    .C(clk),
    .D(_001_[3]),
    .Q(out1[3])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _105_ (
    .C(clk),
    .D(_001_[4]),
    .Q(out1[4])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _106_ (
    .C(clk),
    .D(_001_[5]),
    .Q(out1[5])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _107_ (
    .C(clk),
    .D(_001_[6]),
    .Q(out1[6])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _108_ (
    .C(clk),
    .D(_001_[7]),
    .Q(out1[7])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _109_ (
    .C(clk),
    .D(_001_[8]),
    .Q(out1[8])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _110_ (
    .C(clk),
    .D(_001_[9]),
    .Q(out1[9])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _111_ (
    .C(clk),
    .D(_003_),
    .Q(push_1)
  );
  assign _005_ = fifo_up0_almostfull |(* src = "./src/demux1x2.v:53" *)  _004_;
  assign _006_ = fifo_up1_almostfull |(* src = "./src/demux1x2.v:63" *)  _004_;
  assign _008_[1] = _010_ &(* src = "./src/demux1x2.v:62|./src/demux1x2.v:51|<techmap.v>:434" *)  _011_;
  assign _008_[0] = _007_ &(* src = "./src/demux1x2.v:62|./src/demux1x2.v:51|<techmap.v>:434" *)  classif;
  assign _017_[1] = _019_ &(* src = "./src/demux1x2.v:62|./src/demux1x2.v:51|<techmap.v>:434" *)  _011_;
  assign _017_[0] = _016_ &(* src = "./src/demux1x2.v:62|./src/demux1x2.v:51|<techmap.v>:434" *)  classif;
endmodule

(* dynports =  1  *)
(* src = "./src/demux1x2.v:23" *)
module \$paramod\demux12_syn\DATA_SIZE=8 (out0, out1, push_0, push_1, in, fifo_up0_almostfull, fifo_up1_almostfull, reset, classif, valid, clk);
  (* src = "./src/demux1x2.v:42" *)
  wire [7:0] _000_;
  (* src = "./src/demux1x2.v:42" *)
  wire [7:0] _001_;
  (* src = "./src/demux1x2.v:42" *)
  wire _002_;
  (* src = "./src/demux1x2.v:42" *)
  wire _003_;
  (* src = "./src/demux1x2.v:53" *)
  wire _004_;
  (* src = "./src/demux1x2.v:53" *)
  wire _005_;
  (* src = "./src/demux1x2.v:63" *)
  wire _006_;
  wire _007_;
  (* src = "./src/demux1x2.v:62|./src/demux1x2.v:51|<techmap.v>:432" *)
  wire [1:0] _008_;
  (* src = "./src/demux1x2.v:62|./src/demux1x2.v:51|<techmap.v>:428" *)
  wire _009_;
  wire _010_;
  wire _011_;
  wire [7:0] _012_;
  wire [7:0] _013_;
  wire [7:0] _014_;
  wire [7:0] _015_;
  wire _016_;
  (* src = "./src/demux1x2.v:62|./src/demux1x2.v:51|<techmap.v>:432" *)
  wire [1:0] _017_;
  (* src = "./src/demux1x2.v:62|./src/demux1x2.v:51|<techmap.v>:428" *)
  wire _018_;
  wire _019_;
  (* src = "./src/demux1x2.v:37" *)
  input classif;
  (* src = "./src/demux1x2.v:39" *)
  input clk;
  (* src = "./src/demux1x2.v:34" *)
  input fifo_up0_almostfull;
  (* src = "./src/demux1x2.v:35" *)
  input fifo_up1_almostfull;
  (* src = "./src/demux1x2.v:33" *)
  input [7:0] in;
  (* src = "./src/demux1x2.v:28" *)
  output [7:0] out0;
  (* src = "./src/demux1x2.v:29" *)
  output [7:0] out1;
  (* src = "./src/demux1x2.v:30" *)
  output push_0;
  (* src = "./src/demux1x2.v:31" *)
  output push_1;
  (* src = "./src/demux1x2.v:36" *)
  input reset;
  (* src = "./src/demux1x2.v:38" *)
  input valid;
  assign _009_ = _008_[0] |(* src = "./src/demux1x2.v:62|./src/demux1x2.v:51|<techmap.v>:441" *)  _008_[1];
  assign _018_ = _017_[0] |(* src = "./src/demux1x2.v:62|./src/demux1x2.v:51|<techmap.v>:441" *)  _017_[1];
  assign _007_ = ~(* src = "./src/demux1x2.v:63" *) _006_;
  assign _001_[0] = reset ? (* src = "./src/demux1x2.v:43" *) _013_[0] : 1'h0;
  assign _001_[1] = reset ? (* src = "./src/demux1x2.v:43" *) _013_[1] : 1'h0;
  assign _001_[2] = reset ? (* src = "./src/demux1x2.v:43" *) _013_[2] : 1'h0;
  assign _001_[3] = reset ? (* src = "./src/demux1x2.v:43" *) _013_[3] : 1'h0;
  assign _001_[4] = reset ? (* src = "./src/demux1x2.v:43" *) _013_[4] : 1'h0;
  assign _001_[5] = reset ? (* src = "./src/demux1x2.v:43" *) _013_[5] : 1'h0;
  assign _001_[6] = reset ? (* src = "./src/demux1x2.v:43" *) _013_[6] : 1'h0;
  assign _001_[7] = reset ? (* src = "./src/demux1x2.v:43" *) _013_[7] : 1'h0;
  assign _010_ = _005_ ? (* src = "./src/demux1x2.v:53" *) push_1 : 1'h0;
  assign _003_ = reset ? (* src = "./src/demux1x2.v:43" *) _009_ : 1'h0;
  assign _012_[0] = _006_ ? (* src = "./src/demux1x2.v:63" *) 1'h0 : in[0];
  assign _012_[1] = _006_ ? (* src = "./src/demux1x2.v:63" *) 1'h0 : in[1];
  assign _012_[2] = _006_ ? (* src = "./src/demux1x2.v:63" *) 1'h0 : in[2];
  assign _012_[3] = _006_ ? (* src = "./src/demux1x2.v:63" *) 1'h0 : in[3];
  assign _012_[4] = _006_ ? (* src = "./src/demux1x2.v:63" *) 1'h0 : in[4];
  assign _012_[5] = _006_ ? (* src = "./src/demux1x2.v:63" *) 1'h0 : in[5];
  assign _012_[6] = _006_ ? (* src = "./src/demux1x2.v:63" *) 1'h0 : in[6];
  assign _012_[7] = _006_ ? (* src = "./src/demux1x2.v:63" *) 1'h0 : in[7];
  assign _013_[0] = classif ? (* src = "./src/demux1x2.v:62|./src/demux1x2.v:51" *) _012_[0] : out1[0];
  assign _013_[1] = classif ? (* src = "./src/demux1x2.v:62|./src/demux1x2.v:51" *) _012_[1] : out1[1];
  assign _013_[2] = classif ? (* src = "./src/demux1x2.v:62|./src/demux1x2.v:51" *) _012_[2] : out1[2];
  assign _013_[3] = classif ? (* src = "./src/demux1x2.v:62|./src/demux1x2.v:51" *) _012_[3] : out1[3];
  assign _013_[4] = classif ? (* src = "./src/demux1x2.v:62|./src/demux1x2.v:51" *) _012_[4] : out1[4];
  assign _013_[5] = classif ? (* src = "./src/demux1x2.v:62|./src/demux1x2.v:51" *) _012_[5] : out1[5];
  assign _013_[6] = classif ? (* src = "./src/demux1x2.v:62|./src/demux1x2.v:51" *) _012_[6] : out1[6];
  assign _013_[7] = classif ? (* src = "./src/demux1x2.v:62|./src/demux1x2.v:51" *) _012_[7] : out1[7];
  assign _014_[0] = _005_ ? (* src = "./src/demux1x2.v:53" *) 1'h0 : in[0];
  assign _014_[1] = _005_ ? (* src = "./src/demux1x2.v:53" *) 1'h0 : in[1];
  assign _014_[2] = _005_ ? (* src = "./src/demux1x2.v:53" *) 1'h0 : in[2];
  assign _014_[3] = _005_ ? (* src = "./src/demux1x2.v:53" *) 1'h0 : in[3];
  assign _014_[4] = _005_ ? (* src = "./src/demux1x2.v:53" *) 1'h0 : in[4];
  assign _014_[5] = _005_ ? (* src = "./src/demux1x2.v:53" *) 1'h0 : in[5];
  assign _014_[6] = _005_ ? (* src = "./src/demux1x2.v:53" *) 1'h0 : in[6];
  assign _014_[7] = _005_ ? (* src = "./src/demux1x2.v:53" *) 1'h0 : in[7];
  assign _015_[0] = classif ? (* src = "./src/demux1x2.v:52|./src/demux1x2.v:51" *) out0[0] : _014_[0];
  assign _015_[1] = classif ? (* src = "./src/demux1x2.v:52|./src/demux1x2.v:51" *) out0[1] : _014_[1];
  assign _015_[2] = classif ? (* src = "./src/demux1x2.v:52|./src/demux1x2.v:51" *) out0[2] : _014_[2];
  assign _015_[3] = classif ? (* src = "./src/demux1x2.v:52|./src/demux1x2.v:51" *) out0[3] : _014_[3];
  assign _015_[4] = classif ? (* src = "./src/demux1x2.v:52|./src/demux1x2.v:51" *) out0[4] : _014_[4];
  assign _015_[5] = classif ? (* src = "./src/demux1x2.v:52|./src/demux1x2.v:51" *) out0[5] : _014_[5];
  assign _015_[6] = classif ? (* src = "./src/demux1x2.v:52|./src/demux1x2.v:51" *) out0[6] : _014_[6];
  assign _015_[7] = classif ? (* src = "./src/demux1x2.v:52|./src/demux1x2.v:51" *) out0[7] : _014_[7];
  assign _000_[0] = reset ? (* src = "./src/demux1x2.v:43" *) _015_[0] : 1'h0;
  assign _000_[1] = reset ? (* src = "./src/demux1x2.v:43" *) _015_[1] : 1'h0;
  assign _000_[2] = reset ? (* src = "./src/demux1x2.v:43" *) _015_[2] : 1'h0;
  assign _000_[3] = reset ? (* src = "./src/demux1x2.v:43" *) _015_[3] : 1'h0;
  assign _000_[4] = reset ? (* src = "./src/demux1x2.v:43" *) _015_[4] : 1'h0;
  assign _000_[5] = reset ? (* src = "./src/demux1x2.v:43" *) _015_[5] : 1'h0;
  assign _000_[6] = reset ? (* src = "./src/demux1x2.v:43" *) _015_[6] : 1'h0;
  assign _000_[7] = reset ? (* src = "./src/demux1x2.v:43" *) _015_[7] : 1'h0;
  assign _019_ = ~(* src = "./src/demux1x2.v:53" *) _005_;
  assign _016_ = _006_ ? (* src = "./src/demux1x2.v:63" *) push_0 : 1'h0;
  assign _002_ = reset ? (* src = "./src/demux1x2.v:43" *) _018_ : 1'h0;
  assign _004_ = ~(* src = "./src/demux1x2.v:63" *) valid;
  assign _011_ = ~(* src = "./src/demux1x2.v:52|./src/demux1x2.v:51" *) classif;
  (* src = "./src/demux1x2.v:42" *)
  DFF _078_ (
    .C(clk),
    .D(_002_),
    .Q(push_0)
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _079_ (
    .C(clk),
    .D(_000_[0]),
    .Q(out0[0])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _080_ (
    .C(clk),
    .D(_000_[1]),
    .Q(out0[1])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _081_ (
    .C(clk),
    .D(_000_[2]),
    .Q(out0[2])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _082_ (
    .C(clk),
    .D(_000_[3]),
    .Q(out0[3])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _083_ (
    .C(clk),
    .D(_000_[4]),
    .Q(out0[4])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _084_ (
    .C(clk),
    .D(_000_[5]),
    .Q(out0[5])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _085_ (
    .C(clk),
    .D(_000_[6]),
    .Q(out0[6])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _086_ (
    .C(clk),
    .D(_000_[7]),
    .Q(out0[7])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _087_ (
    .C(clk),
    .D(_001_[0]),
    .Q(out1[0])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _088_ (
    .C(clk),
    .D(_001_[1]),
    .Q(out1[1])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _089_ (
    .C(clk),
    .D(_001_[2]),
    .Q(out1[2])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _090_ (
    .C(clk),
    .D(_001_[3]),
    .Q(out1[3])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _091_ (
    .C(clk),
    .D(_001_[4]),
    .Q(out1[4])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _092_ (
    .C(clk),
    .D(_001_[5]),
    .Q(out1[5])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _093_ (
    .C(clk),
    .D(_001_[6]),
    .Q(out1[6])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _094_ (
    .C(clk),
    .D(_001_[7]),
    .Q(out1[7])
  );
  (* src = "./src/demux1x2.v:42" *)
  DFF _095_ (
    .C(clk),
    .D(_003_),
    .Q(push_1)
  );
  assign _005_ = fifo_up0_almostfull |(* src = "./src/demux1x2.v:53" *)  _004_;
  assign _006_ = fifo_up1_almostfull |(* src = "./src/demux1x2.v:63" *)  _004_;
  assign _008_[1] = _010_ &(* src = "./src/demux1x2.v:62|./src/demux1x2.v:51|<techmap.v>:434" *)  _011_;
  assign _008_[0] = _007_ &(* src = "./src/demux1x2.v:62|./src/demux1x2.v:51|<techmap.v>:434" *)  classif;
  assign _017_[1] = _019_ &(* src = "./src/demux1x2.v:62|./src/demux1x2.v:51|<techmap.v>:434" *)  _011_;
  assign _017_[0] = _016_ &(* src = "./src/demux1x2.v:62|./src/demux1x2.v:51|<techmap.v>:434" *)  classif;
endmodule

(* dynports =  1  *)
(* src = "./src/fifo.v:22" *)
module \$paramod\fifo_param_syn\DATA_SIZE=8\MAIN_SIZE=6 (data_out_pop, almost_full, almost_empty, Fifo_full, fifo_empty, fifo_error, clk, reset, read, write, data_in_push);
  (* src = "./src/fifo.v:110" *)
  wire [7:0] _000_;
  (* src = "./src/fifo.v:110" *)
  wire [7:0] _001_;
  (* src = "./src/fifo.v:110" *)
  wire [5:0] _002_;
  (* src = "./src/fifo.v:110" *)
  wire [5:0] _003_;
  (* src = "./src/fifo.v:63" *)
  wire _004_;
  (* src = "./src/fifo.v:63" *)
  wire _005_;
  (* src = "./src/fifo.v:63" *)
  wire _006_;
  (* src = "./src/fifo.v:63" *)
  wire _007_;
  (* src = "./src/fifo.v:63" *)
  wire _008_;
  (* src = "./src/fifo.v:63" *)
  wire _009_;
  (* src = "./src/fifo.v:63" *)
  wire _010_;
  (* src = "./src/fifo.v:63" *)
  wire _011_;
  (* src = "./src/fifo.v:63" *)
  wire _012_;
  (* src = "./src/fifo.v:63" *)
  wire _013_;
  (* src = "./src/fifo.v:63" *)
  wire _014_;
  (* src = "./src/fifo.v:63" *)
  wire _015_;
  (* src = "./src/fifo.v:63" *)
  wire _016_;
  (* src = "./src/fifo.v:124" *)
  (* unused_bits = "6" *)
  wire [31:0] _017_;
  (* src = "./src/fifo.v:134" *)
  (* unused_bits = "6" *)
  wire [31:0] _018_;
  (* src = "./src/fifo.v:138" *)
  (* unused_bits = "8" *)
  wire [31:0] _019_;
  wire [3:0] _020_;
  wire [1:0] _021_;
  wire [3:0] _022_;
  wire [1:0] _023_;
  wire [2:0] _024_;
  wire _025_;
  wire [2:0] _026_;
  wire _027_;
  wire [15:0] _028_;
  wire [7:0] _029_;
  wire [3:0] _030_;
  wire [15:0] _031_;
  wire [7:0] _032_;
  wire [3:0] _033_;
  wire _034_;
  wire [1:0] _035_;
  wire [7:0] _036_;
  wire [5:0] _037_;
  wire [5:0] _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  (* src = "./src/fifo.v:78" *)
  wire _043_;
  (* src = "./src/fifo.v:91" *)
  wire _044_;
  (* src = "./src/fifo.v:86" *)
  wire _045_;
  (* src = "./src/fifo.v:82" *)
  wire _046_;
  (* src = "./src/fifo.v:103" *)
  wire _047_;
  (* src = "./src/fifo.v:103" *)
  wire _048_;
  (* src = "./src/fifo.v:127" *)
  wire _049_;
  (* src = "./src/fifo.v:86" *)
  wire _050_;
  (* src = "./src/fifo.v:127" *)
  wire _051_;
  (* src = "./src/fifo.v:86" *)
  wire _052_;
  wire [7:0] _053_;
  wire [7:0] _054_;
  wire [7:0] _055_;
  wire [7:0] _056_;
  wire [5:0] _057_;
  wire [5:0] _058_;
  wire [5:0] _059_;
  wire [5:0] _060_;
  wire _061_;
  (* src = "./src/fifo.v:148" *)
  (* unused_bits = "8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _062_;
  (* src = "./src/fifo.v:124|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "5" *)
  wire [31:0] _063_;
  (* src = "./src/fifo.v:138|./src/fifo.v:124|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "7" *)
  wire [31:0] _064_;
  (* src = "./src/fifo.v:154|./src/fifo.v:124|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "5" *)
  wire [31:0] _065_;
  (* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "2 4 5 6" *)
  wire [31:0] _066_;
  wire [31:0] _067_;
  wire _068_;
  wire _069_;
  (* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:203" *)
  wire [31:0] _070_;
  wire _071_;
  (* src = "./src/fifo.v:124|<techmap.v>:260|<techmap.v>:222" *)
  wire _072_;
  (* src = "./src/fifo.v:138|./src/fifo.v:124|<techmap.v>:260|<techmap.v>:222" *)
  wire _073_;
  (* src = "./src/fifo.v:138|./src/fifo.v:124|<techmap.v>:260|<techmap.v>:222" *)
  wire _074_;
  (* src = "./src/fifo.v:154|./src/fifo.v:124|<techmap.v>:260|<techmap.v>:222" *)
  wire _075_;
  (* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:221" *)
  wire _076_;
  (* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:221" *)
  wire _077_;
  (* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:221" *)
  wire _078_;
  (* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:221" *)
  wire _079_;
  (* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:221" *)
  wire _080_;
  (* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:221" *)
  wire _081_;
  (* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:221" *)
  wire _082_;
  (* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:221" *)
  wire _083_;
  (* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:221" *)
  wire _084_;
  (* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:221" *)
  wire _085_;
  (* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:221" *)
  wire _086_;
  (* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:229" *)
  wire _087_;
  (* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:229" *)
  wire _088_;
  (* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:229" *)
  wire _089_;
  (* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:229" *)
  wire _090_;
  (* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:221" *)
  wire _091_;
  (* src = "./src/fifo.v:28" *)
  output Fifo_full;
  (* src = "./src/fifo.v:27" *)
  output almost_empty;
  (* src = "./src/fifo.v:26" *)
  output almost_full;
  (* src = "./src/fifo.v:32" *)
  input clk;
  (* src = "./src/fifo.v:44" *)
  wire [7:0] data_count;
  (* src = "./src/fifo.v:36" *)
  input [7:0] data_in_push;
  (* src = "./src/fifo.v:42" *)
  wire [7:0] data_out;
  (* src = "./src/fifo.v:25" *)
  output [7:0] data_out_pop;
  (* src = "./src/fifo.v:29" *)
  output fifo_empty;
  (* src = "./src/fifo.v:30" *)
  output fifo_error;
  (* src = "./src/fifo.v:45" *)
  wire [5:0] rd_ptr;
  (* src = "./src/fifo.v:34" *)
  input read;
  (* src = "./src/fifo.v:33" *)
  input reset;
  (* src = "./src/fifo.v:46" *)
  wire [5:0] wr_ptr;
  (* src = "./src/fifo.v:35" *)
  input write;
  assign _039_ = Fifo_full |(* src = "./src/fifo.v:119|./src/fifo.v:118" *)  _035_[1];
  assign _020_[0] = data_count[0] |(* src = "./src/fifo.v:82" *)  data_count[1];
  assign _020_[1] = data_count[2] |(* src = "./src/fifo.v:82" *)  data_count[3];
  assign _021_[0] = _020_[0] |(* src = "./src/fifo.v:82" *)  _020_[1];
  assign _022_[0] = data_count[0] |(* src = "./src/fifo.v:95" *)  _036_[1];
  assign _022_[1] = _036_[2] |(* src = "./src/fifo.v:95" *)  data_count[3];
  assign _020_[2] = data_count[4] |(* src = "./src/fifo.v:95" *)  data_count[5];
  assign _020_[3] = data_count[6] |(* src = "./src/fifo.v:95" *)  data_count[7];
  assign _023_[0] = _022_[0] |(* src = "./src/fifo.v:95" *)  _022_[1];
  assign _021_[1] = _020_[2] |(* src = "./src/fifo.v:95" *)  _020_[3];
  assign _040_ = _023_[0] |(* src = "./src/fifo.v:95" *)  _021_[1];
  assign _024_[0] = _017_[0] |(* src = "./src/fifo.v:120" *)  wr_ptr[1];
  assign _024_[1] = _037_[2] |(* src = "./src/fifo.v:120" *)  wr_ptr[3];
  assign _024_[2] = wr_ptr[4] |(* src = "./src/fifo.v:120" *)  wr_ptr[5];
  assign _025_ = _024_[0] |(* src = "./src/fifo.v:120" *)  _024_[1];
  assign _041_ = _025_ |(* src = "./src/fifo.v:120" *)  _024_[2];
  assign _026_[0] = _018_[0] |(* src = "./src/fifo.v:151" *)  rd_ptr[1];
  assign _026_[1] = _038_[2] |(* src = "./src/fifo.v:151" *)  rd_ptr[3];
  assign _026_[2] = rd_ptr[4] |(* src = "./src/fifo.v:151" *)  rd_ptr[5];
  assign _027_ = _026_[0] |(* src = "./src/fifo.v:151" *)  _026_[1];
  assign _042_ = _027_ |(* src = "./src/fifo.v:151" *)  _026_[2];
  assign _029_[0] = _028_[0] &(* src = "./src/fifo.v:86" *)  _028_[1];
  assign _030_[0] = _029_[0] &(* src = "./src/fifo.v:86" *)  _029_[1];
  assign _031_[0] = _019_[0] &(* src = "./src/fifo.v:91" *)  _036_[1];
  assign _032_[0] = _031_[0] &(* src = "./src/fifo.v:91" *)  _031_[1];
  assign _033_[0] = _032_[0] &(* src = "./src/fifo.v:91" *)  _029_[1];
  assign _044_ = _068_ | _033_[0];
  assign _034_ = _021_[0] |(* src = "./src/fifo.v:78" *)  _021_[1];
  assign _043_ = ~(* src = "./src/fifo.v:78" *) _034_;
  assign _016_ = ~(* src = "./src/fifo.v:95" *) _040_;
  assign _051_ = ~(* src = "./src/fifo.v:147" *) fifo_empty;
  assign _010_ = _046_ &(* src = "./src/fifo.v:82" *)  _034_;
  assign _050_ = _045_ &(* src = "./src/fifo.v:86" *)  _052_;
  assign _015_ = _044_ &(* src = "./src/fifo.v:91" *)  _040_;
  assign _047_ = write &(* src = "./src/fifo.v:103" *)  _004_;
  assign _048_ = read &(* src = "./src/fifo.v:103" *)  _007_;
  assign _049_ = read &(* src = "./src/fifo.v:147" *)  _051_;
  assign _003_[0] = reset ? (* src = "./src/fifo.v:111" *) _060_[0] : 1'h0;
  assign _003_[1] = reset ? (* src = "./src/fifo.v:111" *) _060_[1] : 1'h0;
  assign _003_[2] = reset ? (* src = "./src/fifo.v:111" *) _060_[2] : 1'h0;
  assign _003_[3] = reset ? (* src = "./src/fifo.v:111" *) _060_[3] : 1'h0;
  assign _003_[4] = reset ? (* src = "./src/fifo.v:111" *) _060_[4] : 1'h0;
  assign _003_[5] = reset ? (* src = "./src/fifo.v:111" *) _060_[5] : 1'h0;
  assign _060_[0] = _039_ ? (* src = "./src/fifo.v:119|./src/fifo.v:118" *) wr_ptr[0] : _059_[0];
  assign _060_[1] = _039_ ? (* src = "./src/fifo.v:119|./src/fifo.v:118" *) wr_ptr[1] : _059_[1];
  assign _060_[2] = _039_ ? (* src = "./src/fifo.v:119|./src/fifo.v:118" *) wr_ptr[2] : _059_[2];
  assign _060_[3] = _039_ ? (* src = "./src/fifo.v:119|./src/fifo.v:118" *) wr_ptr[3] : _059_[3];
  assign _060_[4] = _039_ ? (* src = "./src/fifo.v:119|./src/fifo.v:118" *) wr_ptr[4] : _059_[4];
  assign _060_[5] = _039_ ? (* src = "./src/fifo.v:119|./src/fifo.v:118" *) wr_ptr[5] : _059_[5];
  assign _059_[0] = _041_ ? (* src = "./src/fifo.v:120" *) _017_[0] : 1'h0;
  assign _059_[1] = _041_ ? (* src = "./src/fifo.v:120" *) _017_[1] : 1'h0;
  assign _059_[2] = _041_ ? (* src = "./src/fifo.v:120" *) _017_[2] : 1'h0;
  assign _059_[3] = _041_ ? (* src = "./src/fifo.v:120" *) _017_[3] : 1'h0;
  assign _059_[4] = _041_ ? (* src = "./src/fifo.v:120" *) _017_[4] : 1'h0;
  assign _059_[5] = _041_ ? (* src = "./src/fifo.v:120" *) _017_[5] : 1'h0;
  assign _002_[0] = reset ? (* src = "./src/fifo.v:111" *) _058_[0] : 1'h0;
  assign _002_[1] = reset ? (* src = "./src/fifo.v:111" *) _058_[1] : 1'h0;
  assign _002_[2] = reset ? (* src = "./src/fifo.v:111" *) _058_[2] : 1'h0;
  assign _002_[3] = reset ? (* src = "./src/fifo.v:111" *) _058_[3] : 1'h0;
  assign _002_[4] = reset ? (* src = "./src/fifo.v:111" *) _058_[4] : 1'h0;
  assign _002_[5] = reset ? (* src = "./src/fifo.v:111" *) _058_[5] : 1'h0;
  assign _058_[0] = _049_ ? (* src = "./src/fifo.v:127" *) _057_[0] : rd_ptr[0];
  assign _058_[1] = _049_ ? (* src = "./src/fifo.v:127" *) _057_[1] : rd_ptr[1];
  assign _058_[2] = _049_ ? (* src = "./src/fifo.v:127" *) _057_[2] : rd_ptr[2];
  assign _058_[3] = _049_ ? (* src = "./src/fifo.v:127" *) _057_[3] : rd_ptr[3];
  assign _058_[4] = _049_ ? (* src = "./src/fifo.v:127" *) _057_[4] : rd_ptr[4];
  assign _058_[5] = _049_ ? (* src = "./src/fifo.v:127" *) _057_[5] : rd_ptr[5];
  assign _057_[0] = _042_ ? (* src = "./src/fifo.v:131" *) _018_[0] : 1'h0;
  assign _057_[1] = _042_ ? (* src = "./src/fifo.v:131" *) _018_[1] : 1'h0;
  assign _057_[2] = _042_ ? (* src = "./src/fifo.v:131" *) _018_[2] : 1'h0;
  assign _057_[3] = _042_ ? (* src = "./src/fifo.v:131" *) _018_[3] : 1'h0;
  assign _057_[4] = _042_ ? (* src = "./src/fifo.v:131" *) _018_[4] : 1'h0;
  assign _057_[5] = _042_ ? (* src = "./src/fifo.v:131" *) _018_[5] : 1'h0;
  assign _000_[0] = reset ? (* src = "./src/fifo.v:111" *) _056_[0] : 1'h0;
  assign _000_[1] = reset ? (* src = "./src/fifo.v:111" *) _056_[1] : 1'h0;
  assign _000_[2] = reset ? (* src = "./src/fifo.v:111" *) _056_[2] : 1'h0;
  assign _000_[3] = reset ? (* src = "./src/fifo.v:111" *) _056_[3] : 1'h0;
  assign _000_[4] = reset ? (* src = "./src/fifo.v:111" *) _056_[4] : 1'h0;
  assign _000_[5] = reset ? (* src = "./src/fifo.v:111" *) _056_[5] : 1'h0;
  assign _000_[6] = reset ? (* src = "./src/fifo.v:111" *) _056_[6] : 1'h0;
  assign _000_[7] = reset ? (* src = "./src/fifo.v:111" *) _056_[7] : 1'h0;
  assign _056_[0] = _039_ ? (* src = "./src/fifo.v:119|./src/fifo.v:118" *) _054_[0] : _055_[0];
  assign _056_[1] = _039_ ? (* src = "./src/fifo.v:119|./src/fifo.v:118" *) _054_[1] : _055_[1];
  assign _056_[2] = _039_ ? (* src = "./src/fifo.v:119|./src/fifo.v:118" *) _054_[2] : _055_[2];
  assign _056_[3] = _039_ ? (* src = "./src/fifo.v:119|./src/fifo.v:118" *) _054_[3] : _055_[3];
  assign _056_[4] = _039_ ? (* src = "./src/fifo.v:119|./src/fifo.v:118" *) _054_[4] : _055_[4];
  assign _056_[5] = _039_ ? (* src = "./src/fifo.v:119|./src/fifo.v:118" *) _054_[5] : _055_[5];
  assign _056_[6] = _039_ ? (* src = "./src/fifo.v:119|./src/fifo.v:118" *) _054_[6] : _055_[6];
  assign _056_[7] = _039_ ? (* src = "./src/fifo.v:119|./src/fifo.v:118" *) _054_[7] : _055_[7];
  assign _055_[0] = _049_ ? (* src = "./src/fifo.v:127" *) data_count[0] : _019_[0];
  assign _055_[1] = _049_ ? (* src = "./src/fifo.v:127" *) data_count[1] : _019_[1];
  assign _055_[2] = _049_ ? (* src = "./src/fifo.v:127" *) data_count[2] : _019_[2];
  assign _055_[3] = _049_ ? (* src = "./src/fifo.v:127" *) data_count[3] : _019_[3];
  assign _055_[4] = _049_ ? (* src = "./src/fifo.v:127" *) data_count[4] : _019_[4];
  assign _055_[5] = _049_ ? (* src = "./src/fifo.v:127" *) data_count[5] : _019_[5];
  assign _055_[6] = _049_ ? (* src = "./src/fifo.v:127" *) data_count[6] : _019_[6];
  assign _055_[7] = _049_ ? (* src = "./src/fifo.v:127" *) data_count[7] : _019_[7];
  assign _054_[0] = _049_ ? (* src = "./src/fifo.v:147" *) _019_[0] : data_count[0];
  assign _054_[1] = _049_ ? (* src = "./src/fifo.v:147" *) _062_[1] : data_count[1];
  assign _054_[2] = _049_ ? (* src = "./src/fifo.v:147" *) _062_[2] : data_count[2];
  assign _054_[3] = _049_ ? (* src = "./src/fifo.v:147" *) _062_[3] : data_count[3];
  assign _054_[4] = _049_ ? (* src = "./src/fifo.v:147" *) _062_[4] : data_count[4];
  assign _054_[5] = _049_ ? (* src = "./src/fifo.v:147" *) _062_[5] : data_count[5];
  assign _054_[6] = _049_ ? (* src = "./src/fifo.v:147" *) _062_[6] : data_count[6];
  assign _054_[7] = _049_ ? (* src = "./src/fifo.v:147" *) _062_[7] : data_count[7];
  assign _001_[0] = reset ? (* src = "./src/fifo.v:111" *) _053_[0] : 1'h0;
  assign _001_[1] = reset ? (* src = "./src/fifo.v:111" *) _053_[1] : 1'h0;
  assign _001_[2] = reset ? (* src = "./src/fifo.v:111" *) _053_[2] : 1'h0;
  assign _001_[3] = reset ? (* src = "./src/fifo.v:111" *) _053_[3] : 1'h0;
  assign _001_[4] = reset ? (* src = "./src/fifo.v:111" *) _053_[4] : 1'h0;
  assign _001_[5] = reset ? (* src = "./src/fifo.v:111" *) _053_[5] : 1'h0;
  assign _001_[6] = reset ? (* src = "./src/fifo.v:111" *) _053_[6] : 1'h0;
  assign _001_[7] = reset ? (* src = "./src/fifo.v:111" *) _053_[7] : 1'h0;
  assign _014_ = _015_ ? (* src = "./src/fifo.v:91" *) 1'h0 : _016_;
  assign _013_ = _050_ ? (* src = "./src/fifo.v:86" *) 1'h0 : _015_;
  assign _012_ = _050_ ? (* src = "./src/fifo.v:86" *) 1'h0 : _014_;
  assign _009_ = _010_ ? (* src = "./src/fifo.v:82" *) 1'h0 : _012_;
  assign _053_[0] = _049_ ? (* src = "./src/fifo.v:127" *) data_out[0] : data_out_pop[0];
  assign _053_[1] = _049_ ? (* src = "./src/fifo.v:127" *) data_out[1] : data_out_pop[1];
  assign _053_[2] = _049_ ? (* src = "./src/fifo.v:127" *) data_out[2] : data_out_pop[2];
  assign _053_[3] = _049_ ? (* src = "./src/fifo.v:127" *) data_out[3] : data_out_pop[3];
  assign _053_[4] = _049_ ? (* src = "./src/fifo.v:127" *) data_out[4] : data_out_pop[4];
  assign _053_[5] = _049_ ? (* src = "./src/fifo.v:127" *) data_out[5] : data_out_pop[5];
  assign _053_[6] = _049_ ? (* src = "./src/fifo.v:127" *) data_out[6] : data_out_pop[6];
  assign _053_[7] = _049_ ? (* src = "./src/fifo.v:127" *) data_out[7] : data_out_pop[7];
  assign _011_ = _010_ ? (* src = "./src/fifo.v:82" *) 1'h0 : _013_;
  assign _061_ = _034_ ? (* src = "./src/fifo.v:78" *) _009_ : 1'h0;
  assign _007_ = reset ? (* src = "./src/fifo.v:69" *) _043_ : 1'hx;
  assign _004_ = reset ? (* src = "./src/fifo.v:69" *) _061_ : 1'hx;
  assign _006_ = _034_ ? (* src = "./src/fifo.v:78" *) _011_ : 1'h0;
  assign _005_ = _034_ ? (* src = "./src/fifo.v:78" *) _010_ : 1'h0;
  assign almost_full = reset ? (* src = "./src/fifo.v:69" *) _006_ : 1'h0;
  assign fifo_error = reset ? (* src = "./src/fifo.v:69" *) _008_ : 1'h0;
  assign almost_empty = reset ? (* src = "./src/fifo.v:69" *) _005_ : 1'h0;
  assign Fifo_full = reset ? (* src = "./src/fifo.v:69" *) _004_ : 1'h0;
  assign fifo_empty = reset ? (* src = "./src/fifo.v:69" *) _007_ : 1'h1;
  assign _071_ = ~(* src = "./src/fifo.v:86" *) _070_[31];
  assign _045_ = ~(* src = "./src/fifo.v:86" *) _046_;
  assign _068_ = ~(* src = "./src/fifo.v:91" *) _069_;
  assign _052_ = ~(* src = "./src/fifo.v:91" *) _066_[31];
  (* src = "./src/fifo.v:110" *)
  DFF _232_ (
    .C(clk),
    .D(_003_[0]),
    .Q(wr_ptr[0])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _233_ (
    .C(clk),
    .D(_003_[1]),
    .Q(wr_ptr[1])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _234_ (
    .C(clk),
    .D(_003_[2]),
    .Q(wr_ptr[2])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _235_ (
    .C(clk),
    .D(_003_[3]),
    .Q(wr_ptr[3])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _236_ (
    .C(clk),
    .D(_003_[4]),
    .Q(wr_ptr[4])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _237_ (
    .C(clk),
    .D(_003_[5]),
    .Q(wr_ptr[5])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _238_ (
    .C(clk),
    .D(_002_[0]),
    .Q(rd_ptr[0])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _239_ (
    .C(clk),
    .D(_002_[1]),
    .Q(rd_ptr[1])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _240_ (
    .C(clk),
    .D(_002_[2]),
    .Q(rd_ptr[2])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _241_ (
    .C(clk),
    .D(_002_[3]),
    .Q(rd_ptr[3])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _242_ (
    .C(clk),
    .D(_002_[4]),
    .Q(rd_ptr[4])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _243_ (
    .C(clk),
    .D(_002_[5]),
    .Q(rd_ptr[5])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _244_ (
    .C(clk),
    .D(_000_[0]),
    .Q(data_count[0])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _245_ (
    .C(clk),
    .D(_000_[1]),
    .Q(data_count[1])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _246_ (
    .C(clk),
    .D(_000_[2]),
    .Q(data_count[2])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _247_ (
    .C(clk),
    .D(_000_[3]),
    .Q(data_count[3])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _248_ (
    .C(clk),
    .D(_000_[4]),
    .Q(data_count[4])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _249_ (
    .C(clk),
    .D(_000_[5]),
    .Q(data_count[5])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _250_ (
    .C(clk),
    .D(_000_[6]),
    .Q(data_count[6])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _251_ (
    .C(clk),
    .D(_000_[7]),
    .Q(data_count[7])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _252_ (
    .C(clk),
    .D(_001_[0]),
    .Q(data_out_pop[0])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _253_ (
    .C(clk),
    .D(_001_[1]),
    .Q(data_out_pop[1])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _254_ (
    .C(clk),
    .D(_001_[2]),
    .Q(data_out_pop[2])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _255_ (
    .C(clk),
    .D(_001_[3]),
    .Q(data_out_pop[3])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _256_ (
    .C(clk),
    .D(_001_[4]),
    .Q(data_out_pop[4])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _257_ (
    .C(clk),
    .D(_001_[5]),
    .Q(data_out_pop[5])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _258_ (
    .C(clk),
    .D(_001_[6]),
    .Q(data_out_pop[6])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _259_ (
    .C(clk),
    .D(_001_[7]),
    .Q(data_out_pop[7])
  );
  assign _065_[1] = rd_ptr[1] &(* src = "./src/fifo.v:154|./src/fifo.v:124|<techmap.v>:260|<techmap.v>:221" *)  rd_ptr[0];
  assign _065_[3] = _075_ &(* src = "./src/fifo.v:154|./src/fifo.v:124|<techmap.v>:260|<techmap.v>:221" *)  _065_[1];
  assign _075_ = rd_ptr[3] &(* src = "./src/fifo.v:154|./src/fifo.v:124|<techmap.v>:260|<techmap.v>:222" *)  rd_ptr[2];
  assign _065_[2] = rd_ptr[2] &(* src = "./src/fifo.v:154|./src/fifo.v:124|<techmap.v>:260|<techmap.v>:229" *)  _065_[1];
  assign _065_[4] = rd_ptr[4] &(* src = "./src/fifo.v:154|./src/fifo.v:124|<techmap.v>:260|<techmap.v>:229" *)  _065_[3];
  assign _035_[1] = write ^(* src = "./src/fifo.v:119|./src/fifo.v:118" *)  1'h1;
  assign _008_ = _047_ |(* src = "./src/fifo.v:103" *)  _048_;
  assign _037_[2] = wr_ptr[2] ^(* src = "./src/fifo.v:120" *)  1'h1;
  assign _038_[2] = rd_ptr[2] ^(* src = "./src/fifo.v:151" *)  1'h1;
  assign _046_ = _071_ | _030_[0];
  assign _069_ = _052_ | _033_[0];
  assign _017_[1] = wr_ptr[1] ^(* src = "./src/fifo.v:124|<techmap.v>:263" *)  wr_ptr[0];
  assign _017_[2] = wr_ptr[2] ^(* src = "./src/fifo.v:124|<techmap.v>:263" *)  _063_[1];
  assign _017_[3] = wr_ptr[3] ^(* src = "./src/fifo.v:124|<techmap.v>:263" *)  _063_[2];
  assign _017_[4] = wr_ptr[4] ^(* src = "./src/fifo.v:124|<techmap.v>:263" *)  _063_[3];
  assign _017_[5] = wr_ptr[5] ^(* src = "./src/fifo.v:124|<techmap.v>:263" *)  _063_[4];
  assign _017_[0] = wr_ptr[0] ^(* src = "./src/fifo.v:124|<techmap.v>:262" *)  1'h1;
  assign _019_[1] = data_count[1] ^(* src = "./src/fifo.v:138|./src/fifo.v:124|<techmap.v>:263" *)  data_count[0];
  assign _019_[2] = data_count[2] ^(* src = "./src/fifo.v:138|./src/fifo.v:124|<techmap.v>:263" *)  _064_[1];
  assign _019_[3] = data_count[3] ^(* src = "./src/fifo.v:138|./src/fifo.v:124|<techmap.v>:263" *)  _064_[2];
  assign _019_[4] = data_count[4] ^(* src = "./src/fifo.v:138|./src/fifo.v:124|<techmap.v>:263" *)  _064_[3];
  assign _019_[5] = data_count[5] ^(* src = "./src/fifo.v:138|./src/fifo.v:124|<techmap.v>:263" *)  _064_[4];
  assign _019_[6] = data_count[6] ^(* src = "./src/fifo.v:138|./src/fifo.v:124|<techmap.v>:263" *)  _064_[5];
  assign _019_[7] = data_count[7] ^(* src = "./src/fifo.v:138|./src/fifo.v:124|<techmap.v>:263" *)  _064_[6];
  assign _036_[2] = data_count[2] ^(* src = "./src/fifo.v:82|<techmap.v>:262" *)  1'h1;
  assign _067_[7] = data_count[7] ^(* src = "./src/fifo.v:82|<techmap.v>:262" *)  1'h1;
  assign _062_[4] = _067_[4] ^(* src = "./src/fifo.v:82|<techmap.v>:263" *)  _070_[3];
  assign _036_[1] = data_count[1] ^(* src = "./src/fifo.v:86|<techmap.v>:262" *)  1'h1;
  assign _067_[3] = data_count[3] ^(* src = "./src/fifo.v:86|<techmap.v>:262" *)  1'h1;
  assign _062_[1] = _036_[1] ^(* src = "./src/fifo.v:86|<techmap.v>:263" *)  data_count[0];
  assign _062_[2] = _036_[2] ^(* src = "./src/fifo.v:86|<techmap.v>:263" *)  _070_[1];
  assign _062_[5] = _067_[5] ^(* src = "./src/fifo.v:86|<techmap.v>:263" *)  _070_[4];
  assign _062_[6] = _067_[6] ^(* src = "./src/fifo.v:86|<techmap.v>:263" *)  _070_[5];
  assign _067_[4] = data_count[4] ^(* src = "./src/fifo.v:91|<techmap.v>:262" *)  1'h1;
  assign _067_[5] = data_count[5] ^(* src = "./src/fifo.v:91|<techmap.v>:262" *)  1'h1;
  assign _067_[6] = data_count[6] ^(* src = "./src/fifo.v:148|<techmap.v>:262" *)  1'h1;
  assign _019_[0] = data_count[0] ^(* src = "./src/fifo.v:148|<techmap.v>:263" *)  1'h1;
  assign _062_[3] = _067_[3] ^(* src = "./src/fifo.v:148|<techmap.v>:263" *)  _070_[2];
  assign _062_[7] = _067_[7] ^(* src = "./src/fifo.v:148|<techmap.v>:263" *)  _070_[6];
  assign _018_[1] = rd_ptr[1] ^(* src = "./src/fifo.v:154|./src/fifo.v:124|<techmap.v>:263" *)  rd_ptr[0];
  assign _018_[2] = rd_ptr[2] ^(* src = "./src/fifo.v:154|./src/fifo.v:124|<techmap.v>:263" *)  _065_[1];
  assign _018_[3] = rd_ptr[3] ^(* src = "./src/fifo.v:154|./src/fifo.v:124|<techmap.v>:263" *)  _065_[2];
  assign _018_[4] = rd_ptr[4] ^(* src = "./src/fifo.v:154|./src/fifo.v:124|<techmap.v>:263" *)  _065_[3];
  assign _018_[5] = rd_ptr[5] ^(* src = "./src/fifo.v:154|./src/fifo.v:124|<techmap.v>:263" *)  _065_[4];
  assign _018_[0] = rd_ptr[0] ^(* src = "./src/fifo.v:154|./src/fifo.v:124|<techmap.v>:262" *)  1'h1;
  assign _063_[1] = wr_ptr[1] &(* src = "./src/fifo.v:124|<techmap.v>:260|<techmap.v>:221" *)  wr_ptr[0];
  assign _063_[3] = _072_ &(* src = "./src/fifo.v:124|<techmap.v>:260|<techmap.v>:221" *)  _063_[1];
  assign _072_ = wr_ptr[3] &(* src = "./src/fifo.v:124|<techmap.v>:260|<techmap.v>:222" *)  wr_ptr[2];
  assign _063_[2] = wr_ptr[2] &(* src = "./src/fifo.v:124|<techmap.v>:260|<techmap.v>:229" *)  _063_[1];
  assign _063_[4] = wr_ptr[4] &(* src = "./src/fifo.v:124|<techmap.v>:260|<techmap.v>:229" *)  _063_[3];
  assign _064_[1] = data_count[1] &(* src = "./src/fifo.v:138|./src/fifo.v:124|<techmap.v>:260|<techmap.v>:221" *)  data_count[0];
  assign _064_[3] = _073_ &(* src = "./src/fifo.v:138|./src/fifo.v:124|<techmap.v>:260|<techmap.v>:221" *)  _064_[1];
  assign _073_ = data_count[3] &(* src = "./src/fifo.v:138|./src/fifo.v:124|<techmap.v>:260|<techmap.v>:222" *)  data_count[2];
  assign _074_ = data_count[5] &(* src = "./src/fifo.v:138|./src/fifo.v:124|<techmap.v>:260|<techmap.v>:222" *)  data_count[4];
  assign _064_[5] = _074_ &(* src = "./src/fifo.v:138|./src/fifo.v:124|<techmap.v>:260|<techmap.v>:229" *)  _064_[3];
  assign _064_[2] = data_count[2] &(* src = "./src/fifo.v:138|./src/fifo.v:124|<techmap.v>:260|<techmap.v>:229" *)  _064_[1];
  assign _064_[4] = data_count[4] &(* src = "./src/fifo.v:138|./src/fifo.v:124|<techmap.v>:260|<techmap.v>:229" *)  _064_[3];
  assign _064_[6] = data_count[6] &(* src = "./src/fifo.v:138|./src/fifo.v:124|<techmap.v>:260|<techmap.v>:229" *)  _064_[5];
  assign _086_ = _029_[1] &(* src = "./src/fifo.v:82|<techmap.v>:260|<techmap.v>:221" *)  _070_[3];
  assign _070_[2] = data_count[2] |(* src = "./src/fifo.v:82|<techmap.v>:260|<techmap.v>:229" *)  _088_;
  assign _070_[4] = data_count[4] |(* src = "./src/fifo.v:82|<techmap.v>:260|<techmap.v>:229" *)  _089_;
  assign _028_[0] = _036_[1] &(* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:221" *)  data_count[0];
  assign _028_[1] = _067_[3] &(* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:222" *)  _036_[2];
  assign _028_[2] = _067_[5] &(* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:222" *)  _067_[4];
  assign _088_ = _036_[2] &(* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:229" *)  _070_[1];
  assign _089_ = _067_[4] &(* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:229" *)  _070_[3];
  assign _070_[1] = data_count[1] |(* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:221" *)  _028_[0];
  assign _082_ = data_count[5] |(* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:221" *)  _077_;
  assign _077_ = _067_[5] &(* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:221" *)  data_count[4];
  assign _078_ = _067_[7] &(* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:221" *)  data_count[6];
  assign _079_ = _031_[1] &(* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:221" *)  _066_[1];
  assign _028_[3] = _067_[7] &(* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:222" *)  _067_[6];
  assign _029_[1] = _028_[3] &(* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:222" *)  _028_[2];
  assign _066_[0] = data_count[0] |(* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:212" *)  _019_[0];
  assign _076_ = _036_[1] &(* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:221" *)  _066_[0];
  assign _081_ = _029_[1] &(* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:221" *)  _066_[3];
  assign _031_[1] = _067_[3] &(* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:222" *)  data_count[2];
  assign _066_[1] = data_count[1] |(* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:221" *)  _076_;
  assign _083_ = data_count[7] |(* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:221" *)  _078_;
  assign _066_[3] = data_count[3] |(* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:221" *)  _079_;
  assign _084_ = _083_ |(* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:221" *)  _080_;
  assign _066_[31] = _084_ |(* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:221" *)  _081_;
  assign _085_ = _028_[1] &(* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:221" *)  _070_[1];
  assign _080_ = _028_[3] &(* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:221" *)  _082_;
  assign _087_ = _028_[2] &(* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:229" *)  _070_[3];
  assign _090_ = _067_[6] &(* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:229" *)  _070_[5];
  assign _091_ = data_count[3] |(* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:221" *)  _031_[1];
  assign _070_[3] = _091_ |(* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:221" *)  _085_;
  assign _070_[31] = _084_ |(* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:221" *)  _086_;
  assign _070_[5] = _082_ |(* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:229" *)  _087_;
  assign _070_[6] = data_count[6] |(* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:229" *)  _090_;
  (* src = "./src/fifo.v:49" *)
  \$paramod\memory_syn_syn\DATA_SIZE=8\MAIN_SIZE=6  mem (
    .clk(clk),
    .data_in(data_in_push),
    .data_out(data_out),
    .rd_ptr(rd_ptr),
    .read(read),
    .reset(reset),
    .wr_ptr(wr_ptr),
    .write(write)
  );
  assign _017_[31:7] = 25'h0000000;
  assign _018_[31:7] = 25'h0000000;
  assign _019_[31:9] = 23'h000000;
  assign _022_[3:2] = _020_[3:2];
  assign _023_[1] = _021_[1];
  assign _028_[15:4] = 12'hfff;
  assign _029_[7:2] = 6'h3f;
  assign _030_[3:1] = 3'h7;
  assign _031_[15:2] = { 12'hfff, _028_[3:2] };
  assign _032_[7:1] = { 6'h3f, _029_[1] };
  assign _033_[3:1] = 3'h7;
  assign _035_[0] = Fifo_full;
  assign { _036_[7:3], _036_[0] } = { data_count[7:3], data_count[0] };
  assign { _037_[5:3], _037_[1:0] } = { wr_ptr[5:3], wr_ptr[1], _017_[0] };
  assign { _038_[5:3], _038_[1:0] } = { rd_ptr[5:3], rd_ptr[1], _018_[0] };
  assign { _062_[30:8], _062_[0] } = { _062_[31], _062_[31], _062_[31], _062_[31], _062_[31], _062_[31], _062_[31], _062_[31], _062_[31], _062_[31], _062_[31], _062_[31], _062_[31], _062_[31], _062_[31], _062_[31], _062_[31], _062_[31], _062_[31], _062_[31], _062_[31], _062_[31], _062_[31], _019_[0] };
  assign { _063_[31:5], _063_[0] } = { 26'h0000000, _017_[6], wr_ptr[0] };
  assign { _064_[31:7], _064_[0] } = { 24'h000000, _019_[8], data_count[0] };
  assign { _065_[31:5], _065_[0] } = { 26'h0000000, _018_[6], rd_ptr[0] };
  assign _066_[30:7] = { _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31] };
  assign { _067_[31:8], _067_[2:0] } = { 24'hffffff, data_count[2], _036_[1], _019_[0] };
  assign { _070_[30:7], _070_[0] } = { _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], data_count[0] };
endmodule

(* dynports =  1  *)
(* src = "./src/memory_syn_syn.v:12" *)
module \$paramod\memory_syn_syn\DATA_SIZE=10\MAIN_SIZE=8 (data_out, clk, reset, write, read, wr_ptr, rd_ptr, data_in);
  (* src = "./src/memory_syn_syn.v:34" *)
  wire [31:0] _000_;
  (* src = "./src/memory_syn_syn.v:34" *)
  wire [9:0] _001_;
  (* src = "./src/memory_syn_syn.v:34" *)
  wire [31:0] _002_;
  (* src = "./src/memory_syn_syn.v:34" *)
  (* unused_bits = "3 4 5 6 7" *)
  wire [7:0] _003_;
  (* src = "./src/memory_syn_syn.v:34" *)
  wire [9:0] _004_;
  (* src = "./src/memory_syn_syn.v:34" *)
  wire [9:0] _005_;
  (* src = "./src/memory_syn_syn.v:62" *)
  wire [9:0] _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire [9:0] _048_;
  wire [9:0] _049_;
  wire [9:0] _050_;
  wire [9:0] _051_;
  wire [9:0] _052_;
  wire [9:0] _053_;
  wire [9:0] _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire [9:0] _085_;
  wire [9:0] _086_;
  wire [9:0] _087_;
  wire [9:0] _088_;
  wire [9:0] _089_;
  wire [9:0] _090_;
  wire [9:0] _091_;
  wire [9:0] _092_;
  wire [9:0] _093_;
  wire [9:0] _094_;
  wire [9:0] _095_;
  wire [9:0] _096_;
  wire [9:0] _097_;
  wire [9:0] _098_;
  wire [9:0] _099_;
  wire [9:0] _100_;
  wire [9:0] _101_;
  wire [9:0] _102_;
  wire [9:0] _103_;
  wire [9:0] _104_;
  wire [9:0] _105_;
  wire [9:0] _106_;
  wire [9:0] _107_;
  wire [9:0] _108_;
  wire [9:0] _109_;
  wire [9:0] _110_;
  wire [9:0] _111_;
  wire [9:0] _112_;
  wire [9:0] _113_;
  wire [9:0] _114_;
  wire [9:0] _115_;
  wire [9:0] _116_;
  wire [9:0] _117_;
  wire [9:0] _118_;
  wire [9:0] _119_;
  wire [9:0] _120_;
  wire [9:0] _121_;
  wire [9:0] _122_;
  wire [9:0] _123_;
  wire [9:0] _124_;
  wire [9:0] _125_;
  wire [9:0] _126_;
  wire [9:0] _127_;
  wire [9:0] _128_;
  wire [9:0] _129_;
  wire [9:0] _130_;
  wire [9:0] _131_;
  wire [9:0] _132_;
  wire [9:0] _133_;
  wire [9:0] _134_;
  (* src = "./src/memory_syn_syn.v:52" *)
  wire [9:0] _135_;
  wire [9:0] _136_;
  (* unused_bits = "3 4 5 6 7" *)
  wire [7:0] _137_;
  (* src = "./src/memory_syn_syn.v:19" *)
  input clk;
  (* src = "./src/memory_syn_syn.v:25" *)
  input [9:0] data_in;
  (* src = "./src/memory_syn_syn.v:17" *)
  output [9:0] data_out;
  (* src = "./src/memory_syn_syn.v:31" *)
  wire [9:0] ff_mem;
  (* src = "./src/memory_syn_syn.v:30" *)
  wire [31:0] i;
  wire [9:0] \mem[0] ;
  wire [9:0] \mem[1] ;
  wire [9:0] \mem[2] ;
  wire [9:0] \mem[3] ;
  wire [9:0] \mem[4] ;
  wire [9:0] \mem[5] ;
  wire [9:0] \mem[6] ;
  wire [9:0] \mem[7] ;
  (* src = "./src/memory_syn_syn.v:24" *)
  input [7:0] rd_ptr;
  (* src = "./src/memory_syn_syn.v:22" *)
  input read;
  (* src = "./src/memory_syn_syn.v:20" *)
  input reset;
  (* src = "./src/memory_syn_syn.v:23" *)
  input [7:0] wr_ptr;
  (* src = "./src/memory_syn_syn.v:21" *)
  input write;
  assign _051_[0] = rd_ptr[0] ? \mem[1] [0] : \mem[0] [0];
  assign _051_[1] = rd_ptr[0] ? \mem[1] [1] : \mem[0] [1];
  assign _051_[2] = rd_ptr[0] ? \mem[1] [2] : \mem[0] [2];
  assign _051_[3] = rd_ptr[0] ? \mem[1] [3] : \mem[0] [3];
  assign _051_[4] = rd_ptr[0] ? \mem[1] [4] : \mem[0] [4];
  assign _051_[5] = rd_ptr[0] ? \mem[1] [5] : \mem[0] [5];
  assign _051_[6] = rd_ptr[0] ? \mem[1] [6] : \mem[0] [6];
  assign _051_[7] = rd_ptr[0] ? \mem[1] [7] : \mem[0] [7];
  assign _051_[8] = rd_ptr[0] ? \mem[1] [8] : \mem[0] [8];
  assign _051_[9] = rd_ptr[0] ? \mem[1] [9] : \mem[0] [9];
  assign _097_[0] = _062_ ? _000_[31] : _096_[0];
  assign _097_[1] = _062_ ? _000_[31] : _096_[1];
  assign _097_[2] = _062_ ? _000_[31] : _096_[2];
  assign _097_[3] = _062_ ? _000_[31] : _096_[3];
  assign _097_[4] = _062_ ? _000_[31] : _096_[4];
  assign _097_[5] = _062_ ? _000_[31] : _096_[5];
  assign _097_[6] = _062_ ? _000_[31] : _096_[6];
  assign _097_[7] = _062_ ? _000_[31] : _096_[7];
  assign _097_[8] = _062_ ? _000_[31] : _096_[8];
  assign _097_[9] = _062_ ? _000_[31] : _096_[9];
  assign _096_[0] = _061_ ? _000_[31] : _095_[0];
  assign _096_[1] = _061_ ? _000_[31] : _095_[1];
  assign _096_[2] = _061_ ? _000_[31] : _095_[2];
  assign _096_[3] = _061_ ? _000_[31] : _095_[3];
  assign _096_[4] = _061_ ? _000_[31] : _095_[4];
  assign _096_[5] = _061_ ? _000_[31] : _095_[5];
  assign _096_[6] = _061_ ? _000_[31] : _095_[6];
  assign _096_[7] = _061_ ? _000_[31] : _095_[7];
  assign _096_[8] = _061_ ? _000_[31] : _095_[8];
  assign _096_[9] = _061_ ? _000_[31] : _095_[9];
  assign _095_[0] = _062_ ? _000_[31] : _094_[0];
  assign _095_[1] = _062_ ? _000_[31] : _094_[1];
  assign _095_[2] = _062_ ? _000_[31] : _094_[2];
  assign _095_[3] = _062_ ? _000_[31] : _094_[3];
  assign _095_[4] = _062_ ? _000_[31] : _094_[4];
  assign _095_[5] = _062_ ? _000_[31] : _094_[5];
  assign _095_[6] = _062_ ? _000_[31] : _094_[6];
  assign _095_[7] = _062_ ? _000_[31] : _094_[7];
  assign _095_[8] = _062_ ? _000_[31] : _094_[8];
  assign _095_[9] = _062_ ? _000_[31] : _094_[9];
  assign _100_[0] = _065_ ? _000_[31] : \mem[2] [0];
  assign _100_[1] = _065_ ? _000_[31] : \mem[2] [1];
  assign _100_[2] = _065_ ? _000_[31] : \mem[2] [2];
  assign _100_[3] = _065_ ? _000_[31] : \mem[2] [3];
  assign _100_[4] = _065_ ? _000_[31] : \mem[2] [4];
  assign _100_[5] = _065_ ? _000_[31] : \mem[2] [5];
  assign _100_[6] = _065_ ? _000_[31] : \mem[2] [6];
  assign _100_[7] = _065_ ? _000_[31] : \mem[2] [7];
  assign _100_[8] = _065_ ? _000_[31] : \mem[2] [8];
  assign _100_[9] = _065_ ? _000_[31] : \mem[2] [9];
  assign _103_[0] = _068_ ? _000_[31] : _102_[0];
  assign _103_[1] = _068_ ? _000_[31] : _102_[1];
  assign _103_[2] = _068_ ? _000_[31] : _102_[2];
  assign _103_[3] = _068_ ? _000_[31] : _102_[3];
  assign _103_[4] = _068_ ? _000_[31] : _102_[4];
  assign _103_[5] = _068_ ? _000_[31] : _102_[5];
  assign _103_[6] = _068_ ? _000_[31] : _102_[6];
  assign _103_[7] = _068_ ? _000_[31] : _102_[7];
  assign _103_[8] = _068_ ? _000_[31] : _102_[8];
  assign _103_[9] = _068_ ? _000_[31] : _102_[9];
  assign _124_[0] = _078_ ? _000_[31] : _123_[0];
  assign _124_[1] = _078_ ? _000_[31] : _123_[1];
  assign _124_[2] = _078_ ? _000_[31] : _123_[2];
  assign _124_[3] = _078_ ? _000_[31] : _123_[3];
  assign _124_[4] = _078_ ? _000_[31] : _123_[4];
  assign _124_[5] = _078_ ? _000_[31] : _123_[5];
  assign _124_[6] = _078_ ? _000_[31] : _123_[6];
  assign _124_[7] = _078_ ? _000_[31] : _123_[7];
  assign _124_[8] = _078_ ? _000_[31] : _123_[8];
  assign _124_[9] = _078_ ? _000_[31] : _123_[9];
  assign _123_[0] = _077_ ? _000_[31] : _122_[0];
  assign _123_[1] = _077_ ? _000_[31] : _122_[1];
  assign _123_[2] = _077_ ? _000_[31] : _122_[2];
  assign _123_[3] = _077_ ? _000_[31] : _122_[3];
  assign _123_[4] = _077_ ? _000_[31] : _122_[4];
  assign _123_[5] = _077_ ? _000_[31] : _122_[5];
  assign _123_[6] = _077_ ? _000_[31] : _122_[6];
  assign _123_[7] = _077_ ? _000_[31] : _122_[7];
  assign _123_[8] = _077_ ? _000_[31] : _122_[8];
  assign _123_[9] = _077_ ? _000_[31] : _122_[9];
  assign _122_[0] = _078_ ? _000_[31] : _121_[0];
  assign _122_[1] = _078_ ? _000_[31] : _121_[1];
  assign _122_[2] = _078_ ? _000_[31] : _121_[2];
  assign _122_[3] = _078_ ? _000_[31] : _121_[3];
  assign _122_[4] = _078_ ? _000_[31] : _121_[4];
  assign _122_[5] = _078_ ? _000_[31] : _121_[5];
  assign _122_[6] = _078_ ? _000_[31] : _121_[6];
  assign _122_[7] = _078_ ? _000_[31] : _121_[7];
  assign _122_[8] = _078_ ? _000_[31] : _121_[8];
  assign _122_[9] = _078_ ? _000_[31] : _121_[9];
  assign _121_[0] = _077_ ? _000_[31] : _120_[0];
  assign _121_[1] = _077_ ? _000_[31] : _120_[1];
  assign _121_[2] = _077_ ? _000_[31] : _120_[2];
  assign _121_[3] = _077_ ? _000_[31] : _120_[3];
  assign _121_[4] = _077_ ? _000_[31] : _120_[4];
  assign _121_[5] = _077_ ? _000_[31] : _120_[5];
  assign _121_[6] = _077_ ? _000_[31] : _120_[6];
  assign _121_[7] = _077_ ? _000_[31] : _120_[7];
  assign _121_[8] = _077_ ? _000_[31] : _120_[8];
  assign _121_[9] = _077_ ? _000_[31] : _120_[9];
  assign _120_[0] = _063_ ? _000_[31] : \mem[6] [0];
  assign _120_[1] = _063_ ? _000_[31] : \mem[6] [1];
  assign _120_[2] = _063_ ? _000_[31] : \mem[6] [2];
  assign _120_[3] = _063_ ? _000_[31] : \mem[6] [3];
  assign _120_[4] = _063_ ? _000_[31] : \mem[6] [4];
  assign _120_[5] = _063_ ? _000_[31] : \mem[6] [5];
  assign _120_[6] = _063_ ? _000_[31] : \mem[6] [6];
  assign _120_[7] = _063_ ? _000_[31] : \mem[6] [7];
  assign _120_[8] = _063_ ? _000_[31] : \mem[6] [8];
  assign _120_[9] = _063_ ? _000_[31] : \mem[6] [9];
  assign _119_[0] = _076_ ? _048_[0] : _118_[0];
  assign _119_[1] = _076_ ? _048_[1] : _118_[1];
  assign _119_[2] = _076_ ? _048_[2] : _118_[2];
  assign _119_[3] = _076_ ? _048_[3] : _118_[3];
  assign _119_[4] = _076_ ? _048_[4] : _118_[4];
  assign _119_[5] = _076_ ? _048_[5] : _118_[5];
  assign _119_[6] = _076_ ? _048_[6] : _118_[6];
  assign _119_[7] = _076_ ? _048_[7] : _118_[7];
  assign _119_[8] = _076_ ? _048_[8] : _118_[8];
  assign _119_[9] = _076_ ? _048_[9] : _118_[9];
  assign _045_ = _005_[9] ? _003_[0] : _002_[0];
  assign _046_ = _005_[9] ? _003_[1] : _002_[0];
  assign _047_ = _005_[9] ? _003_[2] : _002_[0];
  assign _111_[0] = _068_ ? _000_[31] : _110_[0];
  assign _111_[1] = _068_ ? _000_[31] : _110_[1];
  assign _111_[2] = _068_ ? _000_[31] : _110_[2];
  assign _111_[3] = _068_ ? _000_[31] : _110_[3];
  assign _111_[4] = _068_ ? _000_[31] : _110_[4];
  assign _111_[5] = _068_ ? _000_[31] : _110_[5];
  assign _111_[6] = _068_ ? _000_[31] : _110_[6];
  assign _111_[7] = _068_ ? _000_[31] : _110_[7];
  assign _111_[8] = _068_ ? _000_[31] : _110_[8];
  assign _111_[9] = _068_ ? _000_[31] : _110_[9];
  assign _048_[0] = _005_[9] ? _004_[0] : _000_[31];
  assign _048_[1] = _005_[9] ? _004_[1] : _000_[31];
  assign _048_[2] = _005_[9] ? _004_[2] : _000_[31];
  assign _048_[3] = _005_[9] ? _004_[3] : _000_[31];
  assign _048_[4] = _005_[9] ? _004_[4] : _000_[31];
  assign _048_[5] = _005_[9] ? _004_[5] : _000_[31];
  assign _048_[6] = _005_[9] ? _004_[6] : _000_[31];
  assign _048_[7] = _005_[9] ? _004_[7] : _000_[31];
  assign _048_[8] = _005_[9] ? _004_[8] : _000_[31];
  assign _048_[9] = _005_[9] ? _004_[9] : _000_[31];
  assign _110_[0] = _067_ ? _000_[31] : \mem[4] [0];
  assign _110_[1] = _067_ ? _000_[31] : \mem[4] [1];
  assign _110_[2] = _067_ ? _000_[31] : \mem[4] [2];
  assign _110_[3] = _067_ ? _000_[31] : \mem[4] [3];
  assign _110_[4] = _067_ ? _000_[31] : \mem[4] [4];
  assign _110_[5] = _067_ ? _000_[31] : \mem[4] [5];
  assign _110_[6] = _067_ ? _000_[31] : \mem[4] [6];
  assign _110_[7] = _067_ ? _000_[31] : \mem[4] [7];
  assign _110_[8] = _067_ ? _000_[31] : \mem[4] [8];
  assign _110_[9] = _067_ ? _000_[31] : \mem[4] [9];
  assign _109_[0] = _074_ ? _048_[0] : _108_[0];
  assign _109_[1] = _074_ ? _048_[1] : _108_[1];
  assign _109_[2] = _074_ ? _048_[2] : _108_[2];
  assign _109_[3] = _074_ ? _048_[3] : _108_[3];
  assign _109_[4] = _074_ ? _048_[4] : _108_[4];
  assign _109_[5] = _074_ ? _048_[5] : _108_[5];
  assign _109_[6] = _074_ ? _048_[6] : _108_[6];
  assign _109_[7] = _074_ ? _048_[7] : _108_[7];
  assign _109_[8] = _074_ ? _048_[8] : _108_[8];
  assign _109_[9] = _074_ ? _048_[9] : _108_[9];
  assign _134_[0] = _084_ ? _048_[0] : _133_[0];
  assign _134_[1] = _084_ ? _048_[1] : _133_[1];
  assign _134_[2] = _084_ ? _048_[2] : _133_[2];
  assign _134_[3] = _084_ ? _048_[3] : _133_[3];
  assign _134_[4] = _084_ ? _048_[4] : _133_[4];
  assign _134_[5] = _084_ ? _048_[5] : _133_[5];
  assign _134_[6] = _084_ ? _048_[6] : _133_[6];
  assign _134_[7] = _084_ ? _048_[7] : _133_[7];
  assign _134_[8] = _084_ ? _048_[8] : _133_[8];
  assign _134_[9] = _084_ ? _048_[9] : _133_[9];
  assign _133_[0] = _081_ ? _000_[31] : _132_[0];
  assign _133_[1] = _081_ ? _000_[31] : _132_[1];
  assign _133_[2] = _081_ ? _000_[31] : _132_[2];
  assign _133_[3] = _081_ ? _000_[31] : _132_[3];
  assign _133_[4] = _081_ ? _000_[31] : _132_[4];
  assign _133_[5] = _081_ ? _000_[31] : _132_[5];
  assign _133_[6] = _081_ ? _000_[31] : _132_[6];
  assign _133_[7] = _081_ ? _000_[31] : _132_[7];
  assign _133_[8] = _081_ ? _000_[31] : _132_[8];
  assign _133_[9] = _081_ ? _000_[31] : _132_[9];
  assign _132_[0] = _083_ ? _000_[31] : _131_[0];
  assign _132_[1] = _083_ ? _000_[31] : _131_[1];
  assign _132_[2] = _083_ ? _000_[31] : _131_[2];
  assign _132_[3] = _083_ ? _000_[31] : _131_[3];
  assign _132_[4] = _083_ ? _000_[31] : _131_[4];
  assign _132_[5] = _083_ ? _000_[31] : _131_[5];
  assign _132_[6] = _083_ ? _000_[31] : _131_[6];
  assign _132_[7] = _083_ ? _000_[31] : _131_[7];
  assign _132_[8] = _083_ ? _000_[31] : _131_[8];
  assign _132_[9] = _083_ ? _000_[31] : _131_[9];
  assign _131_[0] = _082_ ? _000_[31] : _130_[0];
  assign _131_[1] = _082_ ? _000_[31] : _130_[1];
  assign _131_[2] = _082_ ? _000_[31] : _130_[2];
  assign _131_[3] = _082_ ? _000_[31] : _130_[3];
  assign _131_[4] = _082_ ? _000_[31] : _130_[4];
  assign _131_[5] = _082_ ? _000_[31] : _130_[5];
  assign _131_[6] = _082_ ? _000_[31] : _130_[6];
  assign _131_[7] = _082_ ? _000_[31] : _130_[7];
  assign _131_[8] = _082_ ? _000_[31] : _130_[8];
  assign _131_[9] = _082_ ? _000_[31] : _130_[9];
  assign _130_[0] = _083_ ? _000_[31] : _129_[0];
  assign _130_[1] = _083_ ? _000_[31] : _129_[1];
  assign _130_[2] = _083_ ? _000_[31] : _129_[2];
  assign _130_[3] = _083_ ? _000_[31] : _129_[3];
  assign _130_[4] = _083_ ? _000_[31] : _129_[4];
  assign _130_[5] = _083_ ? _000_[31] : _129_[5];
  assign _130_[6] = _083_ ? _000_[31] : _129_[6];
  assign _130_[7] = _083_ ? _000_[31] : _129_[7];
  assign _130_[8] = _083_ ? _000_[31] : _129_[8];
  assign _130_[9] = _083_ ? _000_[31] : _129_[9];
  assign _129_[0] = _082_ ? _000_[31] : _128_[0];
  assign _129_[1] = _082_ ? _000_[31] : _128_[1];
  assign _129_[2] = _082_ ? _000_[31] : _128_[2];
  assign _129_[3] = _082_ ? _000_[31] : _128_[3];
  assign _129_[4] = _082_ ? _000_[31] : _128_[4];
  assign _129_[5] = _082_ ? _000_[31] : _128_[5];
  assign _129_[6] = _082_ ? _000_[31] : _128_[6];
  assign _129_[7] = _082_ ? _000_[31] : _128_[7];
  assign _129_[8] = _082_ ? _000_[31] : _128_[8];
  assign _129_[9] = _082_ ? _000_[31] : _128_[9];
  assign _128_[0] = _081_ ? _000_[31] : _127_[0];
  assign _128_[1] = _081_ ? _000_[31] : _127_[1];
  assign _128_[2] = _081_ ? _000_[31] : _127_[2];
  assign _128_[3] = _081_ ? _000_[31] : _127_[3];
  assign _128_[4] = _081_ ? _000_[31] : _127_[4];
  assign _128_[5] = _081_ ? _000_[31] : _127_[5];
  assign _128_[6] = _081_ ? _000_[31] : _127_[6];
  assign _128_[7] = _081_ ? _000_[31] : _127_[7];
  assign _128_[8] = _081_ ? _000_[31] : _127_[8];
  assign _128_[9] = _081_ ? _000_[31] : _127_[9];
  assign _127_[0] = _080_ ? _000_[31] : \mem[7] [0];
  assign _127_[1] = _080_ ? _000_[31] : \mem[7] [1];
  assign _127_[2] = _080_ ? _000_[31] : \mem[7] [2];
  assign _127_[3] = _080_ ? _000_[31] : \mem[7] [3];
  assign _127_[4] = _080_ ? _000_[31] : \mem[7] [4];
  assign _127_[5] = _080_ ? _000_[31] : \mem[7] [5];
  assign _127_[6] = _080_ ? _000_[31] : \mem[7] [6];
  assign _127_[7] = _080_ ? _000_[31] : \mem[7] [7];
  assign _127_[8] = _080_ ? _000_[31] : \mem[7] [8];
  assign _127_[9] = _080_ ? _000_[31] : \mem[7] [9];
  assign _126_[0] = _079_ ? _048_[0] : _125_[0];
  assign _126_[1] = _079_ ? _048_[1] : _125_[1];
  assign _126_[2] = _079_ ? _048_[2] : _125_[2];
  assign _126_[3] = _079_ ? _048_[3] : _125_[3];
  assign _126_[4] = _079_ ? _048_[4] : _125_[4];
  assign _126_[5] = _079_ ? _048_[5] : _125_[5];
  assign _126_[6] = _079_ ? _048_[6] : _125_[6];
  assign _126_[7] = _079_ ? _048_[7] : _125_[7];
  assign _126_[8] = _079_ ? _048_[8] : _125_[8];
  assign _126_[9] = _079_ ? _048_[9] : _125_[9];
  assign _125_[0] = _060_ ? _000_[31] : _124_[0];
  assign _125_[1] = _060_ ? _000_[31] : _124_[1];
  assign _125_[2] = _060_ ? _000_[31] : _124_[2];
  assign _125_[3] = _060_ ? _000_[31] : _124_[3];
  assign _125_[4] = _060_ ? _000_[31] : _124_[4];
  assign _125_[5] = _060_ ? _000_[31] : _124_[5];
  assign _125_[6] = _060_ ? _000_[31] : _124_[6];
  assign _125_[7] = _060_ ? _000_[31] : _124_[7];
  assign _125_[8] = _060_ ? _000_[31] : _124_[8];
  assign _125_[9] = _060_ ? _000_[31] : _124_[9];
  assign _006_[0] = reset ? (* src = "./src/memory_syn_syn.v:63" *) data_out[0] : 1'h0;
  assign _006_[1] = reset ? (* src = "./src/memory_syn_syn.v:63" *) data_out[1] : 1'h0;
  assign _006_[2] = reset ? (* src = "./src/memory_syn_syn.v:63" *) data_out[2] : 1'h0;
  assign _006_[3] = reset ? (* src = "./src/memory_syn_syn.v:63" *) data_out[3] : 1'h0;
  assign _006_[4] = reset ? (* src = "./src/memory_syn_syn.v:63" *) data_out[4] : 1'h0;
  assign _006_[5] = reset ? (* src = "./src/memory_syn_syn.v:63" *) data_out[5] : 1'h0;
  assign _006_[6] = reset ? (* src = "./src/memory_syn_syn.v:63" *) data_out[6] : 1'h0;
  assign _006_[7] = reset ? (* src = "./src/memory_syn_syn.v:63" *) data_out[7] : 1'h0;
  assign _006_[8] = reset ? (* src = "./src/memory_syn_syn.v:63" *) data_out[8] : 1'h0;
  assign _006_[9] = reset ? (* src = "./src/memory_syn_syn.v:63" *) data_out[9] : 1'h0;
  assign data_out[0] = read ? (* src = "./src/memory_syn_syn.v:51" *) _135_[0] : ff_mem[0];
  assign data_out[1] = read ? (* src = "./src/memory_syn_syn.v:51" *) _135_[1] : ff_mem[1];
  assign data_out[2] = read ? (* src = "./src/memory_syn_syn.v:51" *) _135_[2] : ff_mem[2];
  assign data_out[3] = read ? (* src = "./src/memory_syn_syn.v:51" *) _135_[3] : ff_mem[3];
  assign data_out[4] = read ? (* src = "./src/memory_syn_syn.v:51" *) _135_[4] : ff_mem[4];
  assign data_out[5] = read ? (* src = "./src/memory_syn_syn.v:51" *) _135_[5] : ff_mem[5];
  assign data_out[6] = read ? (* src = "./src/memory_syn_syn.v:51" *) _135_[6] : ff_mem[6];
  assign data_out[7] = read ? (* src = "./src/memory_syn_syn.v:51" *) _135_[7] : ff_mem[7];
  assign data_out[8] = read ? (* src = "./src/memory_syn_syn.v:51" *) _135_[8] : ff_mem[8];
  assign data_out[9] = read ? (* src = "./src/memory_syn_syn.v:51" *) _135_[9] : ff_mem[9];
  assign _118_[0] = _071_ ? _000_[31] : _117_[0];
  assign _118_[1] = _071_ ? _000_[31] : _117_[1];
  assign _118_[2] = _071_ ? _000_[31] : _117_[2];
  assign _118_[3] = _071_ ? _000_[31] : _117_[3];
  assign _118_[4] = _071_ ? _000_[31] : _117_[4];
  assign _118_[5] = _071_ ? _000_[31] : _117_[5];
  assign _118_[6] = _071_ ? _000_[31] : _117_[6];
  assign _118_[7] = _071_ ? _000_[31] : _117_[7];
  assign _118_[8] = _071_ ? _000_[31] : _117_[8];
  assign _118_[9] = _071_ ? _000_[31] : _117_[9];
  assign _117_[0] = _070_ ? _000_[31] : _116_[0];
  assign _117_[1] = _070_ ? _000_[31] : _116_[1];
  assign _117_[2] = _070_ ? _000_[31] : _116_[2];
  assign _117_[3] = _070_ ? _000_[31] : _116_[3];
  assign _117_[4] = _070_ ? _000_[31] : _116_[4];
  assign _117_[5] = _070_ ? _000_[31] : _116_[5];
  assign _117_[6] = _070_ ? _000_[31] : _116_[6];
  assign _117_[7] = _070_ ? _000_[31] : _116_[7];
  assign _117_[8] = _070_ ? _000_[31] : _116_[8];
  assign _117_[9] = _070_ ? _000_[31] : _116_[9];
  assign _116_[0] = _073_ ? _000_[31] : _115_[0];
  assign _116_[1] = _073_ ? _000_[31] : _115_[1];
  assign _116_[2] = _073_ ? _000_[31] : _115_[2];
  assign _116_[3] = _073_ ? _000_[31] : _115_[3];
  assign _116_[4] = _073_ ? _000_[31] : _115_[4];
  assign _116_[5] = _073_ ? _000_[31] : _115_[5];
  assign _116_[6] = _073_ ? _000_[31] : _115_[6];
  assign _116_[7] = _073_ ? _000_[31] : _115_[7];
  assign _116_[8] = _073_ ? _000_[31] : _115_[8];
  assign _116_[9] = _073_ ? _000_[31] : _115_[9];
  assign _115_[0] = _072_ ? _000_[31] : \mem[5] [0];
  assign _115_[1] = _072_ ? _000_[31] : \mem[5] [1];
  assign _115_[2] = _072_ ? _000_[31] : \mem[5] [2];
  assign _115_[3] = _072_ ? _000_[31] : \mem[5] [3];
  assign _115_[4] = _072_ ? _000_[31] : \mem[5] [4];
  assign _115_[5] = _072_ ? _000_[31] : \mem[5] [5];
  assign _115_[6] = _072_ ? _000_[31] : \mem[5] [6];
  assign _115_[7] = _072_ ? _000_[31] : \mem[5] [7];
  assign _115_[8] = _072_ ? _000_[31] : \mem[5] [8];
  assign _115_[9] = _072_ ? _000_[31] : \mem[5] [9];
  assign _114_[0] = _075_ ? _048_[0] : _113_[0];
  assign _114_[1] = _075_ ? _048_[1] : _113_[1];
  assign _114_[2] = _075_ ? _048_[2] : _113_[2];
  assign _114_[3] = _075_ ? _048_[3] : _113_[3];
  assign _114_[4] = _075_ ? _048_[4] : _113_[4];
  assign _114_[5] = _075_ ? _048_[5] : _113_[5];
  assign _114_[6] = _075_ ? _048_[6] : _113_[6];
  assign _114_[7] = _075_ ? _048_[7] : _113_[7];
  assign _114_[8] = _075_ ? _048_[8] : _113_[8];
  assign _114_[9] = _075_ ? _048_[9] : _113_[9];
  assign _001_[9] = ~(* src = "./src/memory_syn_syn.v:35" *) reset;
  assign _113_[0] = _066_ ? _000_[31] : _112_[0];
  assign _113_[1] = _066_ ? _000_[31] : _112_[1];
  assign _113_[2] = _066_ ? _000_[31] : _112_[2];
  assign _113_[3] = _066_ ? _000_[31] : _112_[3];
  assign _113_[4] = _066_ ? _000_[31] : _112_[4];
  assign _113_[5] = _066_ ? _000_[31] : _112_[5];
  assign _113_[6] = _066_ ? _000_[31] : _112_[6];
  assign _113_[7] = _066_ ? _000_[31] : _112_[7];
  assign _113_[8] = _066_ ? _000_[31] : _112_[8];
  assign _113_[9] = _066_ ? _000_[31] : _112_[9];
  assign _002_[0] = reset ? (* src = "./src/memory_syn_syn.v:35" *) 1'hx : 1'h1;
  assign _000_[31] = reset ? (* src = "./src/memory_syn_syn.v:35" *) 1'hx : 1'h0;
  assign _005_[9] = reset ? (* src = "./src/memory_syn_syn.v:35" *) write : 1'h0;
  assign _137_[0] = write ? (* src = "./src/memory_syn_syn.v:41" *) wr_ptr[0] : 1'hx;
  assign _137_[1] = write ? (* src = "./src/memory_syn_syn.v:41" *) wr_ptr[1] : 1'hx;
  assign _137_[2] = write ? (* src = "./src/memory_syn_syn.v:41" *) wr_ptr[2] : 1'hx;
  assign _136_[0] = write ? (* src = "./src/memory_syn_syn.v:41" *) data_in[0] : 1'hx;
  assign _136_[1] = write ? (* src = "./src/memory_syn_syn.v:41" *) data_in[1] : 1'hx;
  assign _136_[2] = write ? (* src = "./src/memory_syn_syn.v:41" *) data_in[2] : 1'hx;
  assign _136_[3] = write ? (* src = "./src/memory_syn_syn.v:41" *) data_in[3] : 1'hx;
  assign _136_[4] = write ? (* src = "./src/memory_syn_syn.v:41" *) data_in[4] : 1'hx;
  assign _136_[5] = write ? (* src = "./src/memory_syn_syn.v:41" *) data_in[5] : 1'hx;
  assign _136_[6] = write ? (* src = "./src/memory_syn_syn.v:41" *) data_in[6] : 1'hx;
  assign _136_[7] = write ? (* src = "./src/memory_syn_syn.v:41" *) data_in[7] : 1'hx;
  assign _136_[8] = write ? (* src = "./src/memory_syn_syn.v:41" *) data_in[8] : 1'hx;
  assign _136_[9] = write ? (* src = "./src/memory_syn_syn.v:41" *) data_in[9] : 1'hx;
  assign _004_[0] = reset ? (* src = "./src/memory_syn_syn.v:35" *) _136_[0] : 1'hx;
  assign _004_[1] = reset ? (* src = "./src/memory_syn_syn.v:35" *) _136_[1] : 1'hx;
  assign _004_[2] = reset ? (* src = "./src/memory_syn_syn.v:35" *) _136_[2] : 1'hx;
  assign _004_[3] = reset ? (* src = "./src/memory_syn_syn.v:35" *) _136_[3] : 1'hx;
  assign _004_[4] = reset ? (* src = "./src/memory_syn_syn.v:35" *) _136_[4] : 1'hx;
  assign _004_[5] = reset ? (* src = "./src/memory_syn_syn.v:35" *) _136_[5] : 1'hx;
  assign _004_[6] = reset ? (* src = "./src/memory_syn_syn.v:35" *) _136_[6] : 1'hx;
  assign _004_[7] = reset ? (* src = "./src/memory_syn_syn.v:35" *) _136_[7] : 1'hx;
  assign _004_[8] = reset ? (* src = "./src/memory_syn_syn.v:35" *) _136_[8] : 1'hx;
  assign _004_[9] = reset ? (* src = "./src/memory_syn_syn.v:35" *) _136_[9] : 1'hx;
  assign _112_[0] = _065_ ? _000_[31] : _111_[0];
  assign _112_[1] = _065_ ? _000_[31] : _111_[1];
  assign _112_[2] = _065_ ? _000_[31] : _111_[2];
  assign _112_[3] = _065_ ? _000_[31] : _111_[3];
  assign _112_[4] = _065_ ? _000_[31] : _111_[4];
  assign _112_[5] = _065_ ? _000_[31] : _111_[5];
  assign _112_[6] = _065_ ? _000_[31] : _111_[6];
  assign _112_[7] = _065_ ? _000_[31] : _111_[7];
  assign _112_[8] = _065_ ? _000_[31] : _111_[8];
  assign _112_[9] = _065_ ? _000_[31] : _111_[9];
  assign _003_[0] = reset ? (* src = "./src/memory_syn_syn.v:35" *) _137_[0] : 1'hx;
  assign _003_[1] = reset ? (* src = "./src/memory_syn_syn.v:35" *) _137_[1] : 1'hx;
  assign _003_[2] = reset ? (* src = "./src/memory_syn_syn.v:35" *) _137_[2] : 1'hx;
  assign _108_[0] = _073_ ? _000_[31] : _107_[0];
  assign _108_[1] = _073_ ? _000_[31] : _107_[1];
  assign _108_[2] = _073_ ? _000_[31] : _107_[2];
  assign _108_[3] = _073_ ? _000_[31] : _107_[3];
  assign _108_[4] = _073_ ? _000_[31] : _107_[4];
  assign _108_[5] = _073_ ? _000_[31] : _107_[5];
  assign _108_[6] = _073_ ? _000_[31] : _107_[6];
  assign _108_[7] = _073_ ? _000_[31] : _107_[7];
  assign _108_[8] = _073_ ? _000_[31] : _107_[8];
  assign _108_[9] = _073_ ? _000_[31] : _107_[9];
  assign _107_[0] = _072_ ? _000_[31] : _106_[0];
  assign _107_[1] = _072_ ? _000_[31] : _106_[1];
  assign _107_[2] = _072_ ? _000_[31] : _106_[2];
  assign _107_[3] = _072_ ? _000_[31] : _106_[3];
  assign _107_[4] = _072_ ? _000_[31] : _106_[4];
  assign _107_[5] = _072_ ? _000_[31] : _106_[5];
  assign _107_[6] = _072_ ? _000_[31] : _106_[6];
  assign _107_[7] = _072_ ? _000_[31] : _106_[7];
  assign _107_[8] = _072_ ? _000_[31] : _106_[8];
  assign _107_[9] = _072_ ? _000_[31] : _106_[9];
  assign _106_[0] = _071_ ? _000_[31] : _105_[0];
  assign _106_[1] = _071_ ? _000_[31] : _105_[1];
  assign _106_[2] = _071_ ? _000_[31] : _105_[2];
  assign _106_[3] = _071_ ? _000_[31] : _105_[3];
  assign _106_[4] = _071_ ? _000_[31] : _105_[4];
  assign _106_[5] = _071_ ? _000_[31] : _105_[5];
  assign _106_[6] = _071_ ? _000_[31] : _105_[6];
  assign _106_[7] = _071_ ? _000_[31] : _105_[7];
  assign _106_[8] = _071_ ? _000_[31] : _105_[8];
  assign _106_[9] = _071_ ? _000_[31] : _105_[9];
  assign _105_[0] = _070_ ? _000_[31] : \mem[3] [0];
  assign _105_[1] = _070_ ? _000_[31] : \mem[3] [1];
  assign _105_[2] = _070_ ? _000_[31] : \mem[3] [2];
  assign _105_[3] = _070_ ? _000_[31] : \mem[3] [3];
  assign _105_[4] = _070_ ? _000_[31] : \mem[3] [4];
  assign _105_[5] = _070_ ? _000_[31] : \mem[3] [5];
  assign _105_[6] = _070_ ? _000_[31] : \mem[3] [6];
  assign _105_[7] = _070_ ? _000_[31] : \mem[3] [7];
  assign _105_[8] = _070_ ? _000_[31] : \mem[3] [8];
  assign _105_[9] = _070_ ? _000_[31] : \mem[3] [9];
  assign _104_[0] = _069_ ? _048_[0] : _103_[0];
  assign _104_[1] = _069_ ? _048_[1] : _103_[1];
  assign _104_[2] = _069_ ? _048_[2] : _103_[2];
  assign _104_[3] = _069_ ? _048_[3] : _103_[3];
  assign _104_[4] = _069_ ? _048_[4] : _103_[4];
  assign _104_[5] = _069_ ? _048_[5] : _103_[5];
  assign _104_[6] = _069_ ? _048_[6] : _103_[6];
  assign _104_[7] = _069_ ? _048_[7] : _103_[7];
  assign _104_[8] = _069_ ? _048_[8] : _103_[8];
  assign _104_[9] = _069_ ? _048_[9] : _103_[9];
  assign _102_[0] = _067_ ? _000_[31] : _101_[0];
  assign _102_[1] = _067_ ? _000_[31] : _101_[1];
  assign _102_[2] = _067_ ? _000_[31] : _101_[2];
  assign _102_[3] = _067_ ? _000_[31] : _101_[3];
  assign _102_[4] = _067_ ? _000_[31] : _101_[4];
  assign _102_[5] = _067_ ? _000_[31] : _101_[5];
  assign _102_[6] = _067_ ? _000_[31] : _101_[6];
  assign _102_[7] = _067_ ? _000_[31] : _101_[7];
  assign _102_[8] = _067_ ? _000_[31] : _101_[8];
  assign _102_[9] = _067_ ? _000_[31] : _101_[9];
  assign _101_[0] = _066_ ? _000_[31] : _100_[0];
  assign _101_[1] = _066_ ? _000_[31] : _100_[1];
  assign _101_[2] = _066_ ? _000_[31] : _100_[2];
  assign _101_[3] = _066_ ? _000_[31] : _100_[3];
  assign _101_[4] = _066_ ? _000_[31] : _100_[4];
  assign _101_[5] = _066_ ? _000_[31] : _100_[5];
  assign _101_[6] = _066_ ? _000_[31] : _100_[6];
  assign _101_[7] = _066_ ? _000_[31] : _100_[7];
  assign _101_[8] = _066_ ? _000_[31] : _100_[8];
  assign _101_[9] = _066_ ? _000_[31] : _100_[9];
  assign _099_[0] = _064_ ? _048_[0] : _098_[0];
  assign _099_[1] = _064_ ? _048_[1] : _098_[1];
  assign _099_[2] = _064_ ? _048_[2] : _098_[2];
  assign _099_[3] = _064_ ? _048_[3] : _098_[3];
  assign _099_[4] = _064_ ? _048_[4] : _098_[4];
  assign _099_[5] = _064_ ? _048_[5] : _098_[5];
  assign _099_[6] = _064_ ? _048_[6] : _098_[6];
  assign _099_[7] = _064_ ? _048_[7] : _098_[7];
  assign _099_[8] = _064_ ? _048_[8] : _098_[8];
  assign _099_[9] = _064_ ? _048_[9] : _098_[9];
  assign _098_[0] = _063_ ? _000_[31] : _097_[0];
  assign _098_[1] = _063_ ? _000_[31] : _097_[1];
  assign _098_[2] = _063_ ? _000_[31] : _097_[2];
  assign _098_[3] = _063_ ? _000_[31] : _097_[3];
  assign _098_[4] = _063_ ? _000_[31] : _097_[4];
  assign _098_[5] = _063_ ? _000_[31] : _097_[5];
  assign _098_[6] = _063_ ? _000_[31] : _097_[6];
  assign _098_[7] = _063_ ? _000_[31] : _097_[7];
  assign _098_[8] = _063_ ? _000_[31] : _097_[8];
  assign _098_[9] = _063_ ? _000_[31] : _097_[9];
  assign _050_[0] = rd_ptr[1] ? _054_[0] : _053_[0];
  assign _050_[1] = rd_ptr[1] ? _054_[1] : _053_[1];
  assign _050_[2] = rd_ptr[1] ? _054_[2] : _053_[2];
  assign _050_[3] = rd_ptr[1] ? _054_[3] : _053_[3];
  assign _050_[4] = rd_ptr[1] ? _054_[4] : _053_[4];
  assign _050_[5] = rd_ptr[1] ? _054_[5] : _053_[5];
  assign _050_[6] = rd_ptr[1] ? _054_[6] : _053_[6];
  assign _050_[7] = rd_ptr[1] ? _054_[7] : _053_[7];
  assign _050_[8] = rd_ptr[1] ? _054_[8] : _053_[8];
  assign _050_[9] = rd_ptr[1] ? _054_[9] : _053_[9];
  assign _007_ = _005_[9] ? 1'h1 : _001_[9];
  assign _094_[0] = _061_ ? _000_[31] : _093_[0];
  assign _094_[1] = _061_ ? _000_[31] : _093_[1];
  assign _094_[2] = _061_ ? _000_[31] : _093_[2];
  assign _094_[3] = _061_ ? _000_[31] : _093_[3];
  assign _094_[4] = _061_ ? _000_[31] : _093_[4];
  assign _094_[5] = _061_ ? _000_[31] : _093_[5];
  assign _094_[6] = _061_ ? _000_[31] : _093_[6];
  assign _094_[7] = _061_ ? _000_[31] : _093_[7];
  assign _094_[8] = _061_ ? _000_[31] : _093_[8];
  assign _094_[9] = _061_ ? _000_[31] : _093_[9];
  assign _093_[0] = _060_ ? _000_[31] : \mem[1] [0];
  assign _093_[1] = _060_ ? _000_[31] : \mem[1] [1];
  assign _093_[2] = _060_ ? _000_[31] : \mem[1] [2];
  assign _093_[3] = _060_ ? _000_[31] : \mem[1] [3];
  assign _093_[4] = _060_ ? _000_[31] : \mem[1] [4];
  assign _093_[5] = _060_ ? _000_[31] : \mem[1] [5];
  assign _093_[6] = _060_ ? _000_[31] : \mem[1] [6];
  assign _093_[7] = _060_ ? _000_[31] : \mem[1] [7];
  assign _093_[8] = _060_ ? _000_[31] : \mem[1] [8];
  assign _093_[9] = _060_ ? _000_[31] : \mem[1] [9];
  assign _052_[0] = rd_ptr[0] ? \mem[3] [0] : \mem[2] [0];
  assign _052_[1] = rd_ptr[0] ? \mem[3] [1] : \mem[2] [1];
  assign _052_[2] = rd_ptr[0] ? \mem[3] [2] : \mem[2] [2];
  assign _052_[3] = rd_ptr[0] ? \mem[3] [3] : \mem[2] [3];
  assign _052_[4] = rd_ptr[0] ? \mem[3] [4] : \mem[2] [4];
  assign _052_[5] = rd_ptr[0] ? \mem[3] [5] : \mem[2] [5];
  assign _052_[6] = rd_ptr[0] ? \mem[3] [6] : \mem[2] [6];
  assign _052_[7] = rd_ptr[0] ? \mem[3] [7] : \mem[2] [7];
  assign _052_[8] = rd_ptr[0] ? \mem[3] [8] : \mem[2] [8];
  assign _052_[9] = rd_ptr[0] ? \mem[3] [9] : \mem[2] [9];
  assign _092_[0] = _059_ ? _048_[0] : _091_[0];
  assign _092_[1] = _059_ ? _048_[1] : _091_[1];
  assign _092_[2] = _059_ ? _048_[2] : _091_[2];
  assign _092_[3] = _059_ ? _048_[3] : _091_[3];
  assign _092_[4] = _059_ ? _048_[4] : _091_[4];
  assign _092_[5] = _059_ ? _048_[5] : _091_[5];
  assign _092_[6] = _059_ ? _048_[6] : _091_[6];
  assign _092_[7] = _059_ ? _048_[7] : _091_[7];
  assign _092_[8] = _059_ ? _048_[8] : _091_[8];
  assign _092_[9] = _059_ ? _048_[9] : _091_[9];
  assign _091_[0] = _056_ ? _000_[31] : _090_[0];
  assign _091_[1] = _056_ ? _000_[31] : _090_[1];
  assign _091_[2] = _056_ ? _000_[31] : _090_[2];
  assign _091_[3] = _056_ ? _000_[31] : _090_[3];
  assign _091_[4] = _056_ ? _000_[31] : _090_[4];
  assign _091_[5] = _056_ ? _000_[31] : _090_[5];
  assign _091_[6] = _056_ ? _000_[31] : _090_[6];
  assign _091_[7] = _056_ ? _000_[31] : _090_[7];
  assign _091_[8] = _056_ ? _000_[31] : _090_[8];
  assign _091_[9] = _056_ ? _000_[31] : _090_[9];
  assign _090_[0] = _058_ ? _000_[31] : _089_[0];
  assign _090_[1] = _058_ ? _000_[31] : _089_[1];
  assign _090_[2] = _058_ ? _000_[31] : _089_[2];
  assign _090_[3] = _058_ ? _000_[31] : _089_[3];
  assign _090_[4] = _058_ ? _000_[31] : _089_[4];
  assign _090_[5] = _058_ ? _000_[31] : _089_[5];
  assign _090_[6] = _058_ ? _000_[31] : _089_[6];
  assign _090_[7] = _058_ ? _000_[31] : _089_[7];
  assign _090_[8] = _058_ ? _000_[31] : _089_[8];
  assign _090_[9] = _058_ ? _000_[31] : _089_[9];
  assign _089_[0] = _057_ ? _000_[31] : _088_[0];
  assign _089_[1] = _057_ ? _000_[31] : _088_[1];
  assign _089_[2] = _057_ ? _000_[31] : _088_[2];
  assign _089_[3] = _057_ ? _000_[31] : _088_[3];
  assign _089_[4] = _057_ ? _000_[31] : _088_[4];
  assign _089_[5] = _057_ ? _000_[31] : _088_[5];
  assign _089_[6] = _057_ ? _000_[31] : _088_[6];
  assign _089_[7] = _057_ ? _000_[31] : _088_[7];
  assign _089_[8] = _057_ ? _000_[31] : _088_[8];
  assign _089_[9] = _057_ ? _000_[31] : _088_[9];
  assign _088_[0] = _058_ ? _000_[31] : _087_[0];
  assign _088_[1] = _058_ ? _000_[31] : _087_[1];
  assign _088_[2] = _058_ ? _000_[31] : _087_[2];
  assign _088_[3] = _058_ ? _000_[31] : _087_[3];
  assign _088_[4] = _058_ ? _000_[31] : _087_[4];
  assign _088_[5] = _058_ ? _000_[31] : _087_[5];
  assign _088_[6] = _058_ ? _000_[31] : _087_[6];
  assign _088_[7] = _058_ ? _000_[31] : _087_[7];
  assign _088_[8] = _058_ ? _000_[31] : _087_[8];
  assign _088_[9] = _058_ ? _000_[31] : _087_[9];
  assign _087_[0] = _057_ ? _000_[31] : _086_[0];
  assign _087_[1] = _057_ ? _000_[31] : _086_[1];
  assign _087_[2] = _057_ ? _000_[31] : _086_[2];
  assign _087_[3] = _057_ ? _000_[31] : _086_[3];
  assign _087_[4] = _057_ ? _000_[31] : _086_[4];
  assign _087_[5] = _057_ ? _000_[31] : _086_[5];
  assign _087_[6] = _057_ ? _000_[31] : _086_[6];
  assign _087_[7] = _057_ ? _000_[31] : _086_[7];
  assign _087_[8] = _057_ ? _000_[31] : _086_[8];
  assign _087_[9] = _057_ ? _000_[31] : _086_[9];
  assign _086_[0] = _056_ ? _000_[31] : _085_[0];
  assign _086_[1] = _056_ ? _000_[31] : _085_[1];
  assign _086_[2] = _056_ ? _000_[31] : _085_[2];
  assign _086_[3] = _056_ ? _000_[31] : _085_[3];
  assign _086_[4] = _056_ ? _000_[31] : _085_[4];
  assign _086_[5] = _056_ ? _000_[31] : _085_[5];
  assign _086_[6] = _056_ ? _000_[31] : _085_[6];
  assign _086_[7] = _056_ ? _000_[31] : _085_[7];
  assign _086_[8] = _056_ ? _000_[31] : _085_[8];
  assign _086_[9] = _056_ ? _000_[31] : _085_[9];
  assign _085_[0] = _055_ ? _000_[31] : \mem[0] [0];
  assign _085_[1] = _055_ ? _000_[31] : \mem[0] [1];
  assign _085_[2] = _055_ ? _000_[31] : \mem[0] [2];
  assign _085_[3] = _055_ ? _000_[31] : \mem[0] [3];
  assign _085_[4] = _055_ ? _000_[31] : \mem[0] [4];
  assign _085_[5] = _055_ ? _000_[31] : \mem[0] [5];
  assign _085_[6] = _055_ ? _000_[31] : \mem[0] [6];
  assign _085_[7] = _055_ ? _000_[31] : \mem[0] [7];
  assign _085_[8] = _055_ ? _000_[31] : \mem[0] [8];
  assign _085_[9] = _055_ ? _000_[31] : \mem[0] [9];
  assign _054_[0] = rd_ptr[0] ? \mem[7] [0] : \mem[6] [0];
  assign _054_[1] = rd_ptr[0] ? \mem[7] [1] : \mem[6] [1];
  assign _054_[2] = rd_ptr[0] ? \mem[7] [2] : \mem[6] [2];
  assign _054_[3] = rd_ptr[0] ? \mem[7] [3] : \mem[6] [3];
  assign _054_[4] = rd_ptr[0] ? \mem[7] [4] : \mem[6] [4];
  assign _054_[5] = rd_ptr[0] ? \mem[7] [5] : \mem[6] [5];
  assign _054_[6] = rd_ptr[0] ? \mem[7] [6] : \mem[6] [6];
  assign _054_[7] = rd_ptr[0] ? \mem[7] [7] : \mem[6] [7];
  assign _054_[8] = rd_ptr[0] ? \mem[7] [8] : \mem[6] [8];
  assign _054_[9] = rd_ptr[0] ? \mem[7] [9] : \mem[6] [9];
  assign _049_[0] = rd_ptr[1] ? _052_[0] : _051_[0];
  assign _049_[1] = rd_ptr[1] ? _052_[1] : _051_[1];
  assign _049_[2] = rd_ptr[1] ? _052_[2] : _051_[2];
  assign _049_[3] = rd_ptr[1] ? _052_[3] : _051_[3];
  assign _049_[4] = rd_ptr[1] ? _052_[4] : _051_[4];
  assign _049_[5] = rd_ptr[1] ? _052_[5] : _051_[5];
  assign _049_[6] = rd_ptr[1] ? _052_[6] : _051_[6];
  assign _049_[7] = rd_ptr[1] ? _052_[7] : _051_[7];
  assign _049_[8] = rd_ptr[1] ? _052_[8] : _051_[8];
  assign _049_[9] = rd_ptr[1] ? _052_[9] : _051_[9];
  assign _135_[0] = rd_ptr[2] ? _050_[0] : _049_[0];
  assign _135_[1] = rd_ptr[2] ? _050_[1] : _049_[1];
  assign _135_[2] = rd_ptr[2] ? _050_[2] : _049_[2];
  assign _135_[3] = rd_ptr[2] ? _050_[3] : _049_[3];
  assign _135_[4] = rd_ptr[2] ? _050_[4] : _049_[4];
  assign _135_[5] = rd_ptr[2] ? _050_[5] : _049_[5];
  assign _135_[6] = rd_ptr[2] ? _050_[6] : _049_[6];
  assign _135_[7] = rd_ptr[2] ? _050_[7] : _049_[7];
  assign _135_[8] = rd_ptr[2] ? _050_[8] : _049_[8];
  assign _135_[9] = rd_ptr[2] ? _050_[9] : _049_[9];
  assign _053_[0] = rd_ptr[0] ? \mem[5] [0] : \mem[4] [0];
  assign _053_[1] = rd_ptr[0] ? \mem[5] [1] : \mem[4] [1];
  assign _053_[2] = rd_ptr[0] ? \mem[5] [2] : \mem[4] [2];
  assign _053_[3] = rd_ptr[0] ? \mem[5] [3] : \mem[4] [3];
  assign _053_[4] = rd_ptr[0] ? \mem[5] [4] : \mem[4] [4];
  assign _053_[5] = rd_ptr[0] ? \mem[5] [5] : \mem[4] [5];
  assign _053_[6] = rd_ptr[0] ? \mem[5] [6] : \mem[4] [6];
  assign _053_[7] = rd_ptr[0] ? \mem[5] [7] : \mem[4] [7];
  assign _053_[8] = rd_ptr[0] ? \mem[5] [8] : \mem[4] [8];
  assign _053_[9] = rd_ptr[0] ? \mem[5] [9] : \mem[4] [9];
  assign _044_ = ~_047_;
  assign _043_ = ~_046_;
  assign _042_ = ~_045_;
  assign _012_ = ~_002_[0];
  assign _008_ = ~_000_[31];
  DFF _777_ (
    .C(clk),
    .D(_092_[0]),
    .Q(\mem[0] [0])
  );
  DFF _778_ (
    .C(clk),
    .D(_092_[1]),
    .Q(\mem[0] [1])
  );
  DFF _779_ (
    .C(clk),
    .D(_092_[2]),
    .Q(\mem[0] [2])
  );
  DFF _780_ (
    .C(clk),
    .D(_092_[3]),
    .Q(\mem[0] [3])
  );
  DFF _781_ (
    .C(clk),
    .D(_092_[4]),
    .Q(\mem[0] [4])
  );
  DFF _782_ (
    .C(clk),
    .D(_092_[5]),
    .Q(\mem[0] [5])
  );
  DFF _783_ (
    .C(clk),
    .D(_092_[6]),
    .Q(\mem[0] [6])
  );
  DFF _784_ (
    .C(clk),
    .D(_092_[7]),
    .Q(\mem[0] [7])
  );
  DFF _785_ (
    .C(clk),
    .D(_092_[8]),
    .Q(\mem[0] [8])
  );
  DFF _786_ (
    .C(clk),
    .D(_092_[9]),
    .Q(\mem[0] [9])
  );
  DFF _787_ (
    .C(clk),
    .D(_099_[0]),
    .Q(\mem[1] [0])
  );
  DFF _788_ (
    .C(clk),
    .D(_099_[1]),
    .Q(\mem[1] [1])
  );
  DFF _789_ (
    .C(clk),
    .D(_099_[2]),
    .Q(\mem[1] [2])
  );
  DFF _790_ (
    .C(clk),
    .D(_099_[3]),
    .Q(\mem[1] [3])
  );
  DFF _791_ (
    .C(clk),
    .D(_099_[4]),
    .Q(\mem[1] [4])
  );
  DFF _792_ (
    .C(clk),
    .D(_099_[5]),
    .Q(\mem[1] [5])
  );
  DFF _793_ (
    .C(clk),
    .D(_099_[6]),
    .Q(\mem[1] [6])
  );
  DFF _794_ (
    .C(clk),
    .D(_099_[7]),
    .Q(\mem[1] [7])
  );
  DFF _795_ (
    .C(clk),
    .D(_099_[8]),
    .Q(\mem[1] [8])
  );
  DFF _796_ (
    .C(clk),
    .D(_099_[9]),
    .Q(\mem[1] [9])
  );
  DFF _797_ (
    .C(clk),
    .D(_104_[0]),
    .Q(\mem[2] [0])
  );
  DFF _798_ (
    .C(clk),
    .D(_104_[1]),
    .Q(\mem[2] [1])
  );
  DFF _799_ (
    .C(clk),
    .D(_104_[2]),
    .Q(\mem[2] [2])
  );
  DFF _800_ (
    .C(clk),
    .D(_104_[3]),
    .Q(\mem[2] [3])
  );
  DFF _801_ (
    .C(clk),
    .D(_104_[4]),
    .Q(\mem[2] [4])
  );
  DFF _802_ (
    .C(clk),
    .D(_104_[5]),
    .Q(\mem[2] [5])
  );
  DFF _803_ (
    .C(clk),
    .D(_104_[6]),
    .Q(\mem[2] [6])
  );
  DFF _804_ (
    .C(clk),
    .D(_104_[7]),
    .Q(\mem[2] [7])
  );
  DFF _805_ (
    .C(clk),
    .D(_104_[8]),
    .Q(\mem[2] [8])
  );
  DFF _806_ (
    .C(clk),
    .D(_104_[9]),
    .Q(\mem[2] [9])
  );
  DFF _807_ (
    .C(clk),
    .D(_109_[0]),
    .Q(\mem[3] [0])
  );
  DFF _808_ (
    .C(clk),
    .D(_109_[1]),
    .Q(\mem[3] [1])
  );
  DFF _809_ (
    .C(clk),
    .D(_109_[2]),
    .Q(\mem[3] [2])
  );
  DFF _810_ (
    .C(clk),
    .D(_109_[3]),
    .Q(\mem[3] [3])
  );
  DFF _811_ (
    .C(clk),
    .D(_109_[4]),
    .Q(\mem[3] [4])
  );
  DFF _812_ (
    .C(clk),
    .D(_109_[5]),
    .Q(\mem[3] [5])
  );
  DFF _813_ (
    .C(clk),
    .D(_109_[6]),
    .Q(\mem[3] [6])
  );
  DFF _814_ (
    .C(clk),
    .D(_109_[7]),
    .Q(\mem[3] [7])
  );
  DFF _815_ (
    .C(clk),
    .D(_109_[8]),
    .Q(\mem[3] [8])
  );
  DFF _816_ (
    .C(clk),
    .D(_109_[9]),
    .Q(\mem[3] [9])
  );
  DFF _817_ (
    .C(clk),
    .D(_114_[0]),
    .Q(\mem[4] [0])
  );
  DFF _818_ (
    .C(clk),
    .D(_114_[1]),
    .Q(\mem[4] [1])
  );
  DFF _819_ (
    .C(clk),
    .D(_114_[2]),
    .Q(\mem[4] [2])
  );
  DFF _820_ (
    .C(clk),
    .D(_114_[3]),
    .Q(\mem[4] [3])
  );
  DFF _821_ (
    .C(clk),
    .D(_114_[4]),
    .Q(\mem[4] [4])
  );
  DFF _822_ (
    .C(clk),
    .D(_114_[5]),
    .Q(\mem[4] [5])
  );
  DFF _823_ (
    .C(clk),
    .D(_114_[6]),
    .Q(\mem[4] [6])
  );
  DFF _824_ (
    .C(clk),
    .D(_114_[7]),
    .Q(\mem[4] [7])
  );
  DFF _825_ (
    .C(clk),
    .D(_114_[8]),
    .Q(\mem[4] [8])
  );
  DFF _826_ (
    .C(clk),
    .D(_114_[9]),
    .Q(\mem[4] [9])
  );
  DFF _827_ (
    .C(clk),
    .D(_119_[0]),
    .Q(\mem[5] [0])
  );
  DFF _828_ (
    .C(clk),
    .D(_119_[1]),
    .Q(\mem[5] [1])
  );
  DFF _829_ (
    .C(clk),
    .D(_119_[2]),
    .Q(\mem[5] [2])
  );
  DFF _830_ (
    .C(clk),
    .D(_119_[3]),
    .Q(\mem[5] [3])
  );
  DFF _831_ (
    .C(clk),
    .D(_119_[4]),
    .Q(\mem[5] [4])
  );
  DFF _832_ (
    .C(clk),
    .D(_119_[5]),
    .Q(\mem[5] [5])
  );
  DFF _833_ (
    .C(clk),
    .D(_119_[6]),
    .Q(\mem[5] [6])
  );
  DFF _834_ (
    .C(clk),
    .D(_119_[7]),
    .Q(\mem[5] [7])
  );
  DFF _835_ (
    .C(clk),
    .D(_119_[8]),
    .Q(\mem[5] [8])
  );
  DFF _836_ (
    .C(clk),
    .D(_119_[9]),
    .Q(\mem[5] [9])
  );
  (* src = "./src/memory_syn_syn.v:62" *)
  DFF _837_ (
    .C(clk),
    .D(_006_[0]),
    .Q(ff_mem[0])
  );
  (* src = "./src/memory_syn_syn.v:62" *)
  DFF _838_ (
    .C(clk),
    .D(_006_[1]),
    .Q(ff_mem[1])
  );
  (* src = "./src/memory_syn_syn.v:62" *)
  DFF _839_ (
    .C(clk),
    .D(_006_[2]),
    .Q(ff_mem[2])
  );
  (* src = "./src/memory_syn_syn.v:62" *)
  DFF _840_ (
    .C(clk),
    .D(_006_[3]),
    .Q(ff_mem[3])
  );
  (* src = "./src/memory_syn_syn.v:62" *)
  DFF _841_ (
    .C(clk),
    .D(_006_[4]),
    .Q(ff_mem[4])
  );
  (* src = "./src/memory_syn_syn.v:62" *)
  DFF _842_ (
    .C(clk),
    .D(_006_[5]),
    .Q(ff_mem[5])
  );
  (* src = "./src/memory_syn_syn.v:62" *)
  DFF _843_ (
    .C(clk),
    .D(_006_[6]),
    .Q(ff_mem[6])
  );
  (* src = "./src/memory_syn_syn.v:62" *)
  DFF _844_ (
    .C(clk),
    .D(_006_[7]),
    .Q(ff_mem[7])
  );
  (* src = "./src/memory_syn_syn.v:62" *)
  DFF _845_ (
    .C(clk),
    .D(_006_[8]),
    .Q(ff_mem[8])
  );
  (* src = "./src/memory_syn_syn.v:62" *)
  DFF _846_ (
    .C(clk),
    .D(_006_[9]),
    .Q(ff_mem[9])
  );
  DFF _847_ (
    .C(clk),
    .D(_134_[0]),
    .Q(\mem[7] [0])
  );
  DFF _848_ (
    .C(clk),
    .D(_134_[1]),
    .Q(\mem[7] [1])
  );
  DFF _849_ (
    .C(clk),
    .D(_134_[2]),
    .Q(\mem[7] [2])
  );
  DFF _850_ (
    .C(clk),
    .D(_134_[3]),
    .Q(\mem[7] [3])
  );
  DFF _851_ (
    .C(clk),
    .D(_134_[4]),
    .Q(\mem[7] [4])
  );
  DFF _852_ (
    .C(clk),
    .D(_134_[5]),
    .Q(\mem[7] [5])
  );
  DFF _853_ (
    .C(clk),
    .D(_134_[6]),
    .Q(\mem[7] [6])
  );
  DFF _854_ (
    .C(clk),
    .D(_134_[7]),
    .Q(\mem[7] [7])
  );
  DFF _855_ (
    .C(clk),
    .D(_134_[8]),
    .Q(\mem[7] [8])
  );
  DFF _856_ (
    .C(clk),
    .D(_134_[9]),
    .Q(\mem[7] [9])
  );
  DFF _857_ (
    .C(clk),
    .D(_126_[0]),
    .Q(\mem[6] [0])
  );
  DFF _858_ (
    .C(clk),
    .D(_126_[1]),
    .Q(\mem[6] [1])
  );
  DFF _859_ (
    .C(clk),
    .D(_126_[2]),
    .Q(\mem[6] [2])
  );
  DFF _860_ (
    .C(clk),
    .D(_126_[3]),
    .Q(\mem[6] [3])
  );
  DFF _861_ (
    .C(clk),
    .D(_126_[4]),
    .Q(\mem[6] [4])
  );
  DFF _862_ (
    .C(clk),
    .D(_126_[5]),
    .Q(\mem[6] [5])
  );
  DFF _863_ (
    .C(clk),
    .D(_126_[6]),
    .Q(\mem[6] [6])
  );
  DFF _864_ (
    .C(clk),
    .D(_126_[7]),
    .Q(\mem[6] [7])
  );
  DFF _865_ (
    .C(clk),
    .D(_126_[8]),
    .Q(\mem[6] [8])
  );
  DFF _866_ (
    .C(clk),
    .D(_126_[9]),
    .Q(\mem[6] [9])
  );
  assign _015_ = _002_[0] & _008_;
  assign _020_ = _008_ & _015_;
  assign _068_ = _023_ & _001_[9];
  assign _023_ = _012_ & _018_;
  assign _060_ = _015_ & _001_[9];
  assign _078_ = _036_ & _001_[9];
  assign _036_ = _012_ & _034_;
  assign _077_ = _035_ & _001_[9];
  assign _035_ = _008_ & _034_;
  assign _034_ = _002_[0] & _000_[31];
  assign _063_ = _018_ & _001_[9];
  assign _018_ = _012_ & _000_[31];
  assign _037_ = _046_ & _047_;
  assign _082_ = _039_ & _001_[9];
  assign _039_ = _000_[31] & _034_;
  assign _065_ = _020_ & _001_[9];
  assign _084_ = _041_ & _007_;
  assign _041_ = _045_ & _037_;
  assign _081_ = _034_ & _001_[9];
  assign _083_ = _040_ & _001_[9];
  assign _040_ = _002_[0] & _034_;
  assign _080_ = _000_[31] & _001_[9];
  assign _079_ = _038_ & _007_;
  assign _038_ = _042_ & _037_;
  assign _076_ = _033_ & _007_;
  assign _033_ = _045_ & _031_;
  assign _075_ = _032_ & _007_;
  assign _032_ = _042_ & _031_;
  assign _031_ = _043_ & _047_;
  assign _074_ = _030_ & _007_;
  assign _030_ = _045_ & _024_;
  assign _073_ = _029_ & _001_[9];
  assign _029_ = _002_[0] & _018_;
  assign _072_ = _028_ & _001_[9];
  assign _028_ = _000_[31] & _018_;
  assign _071_ = _027_ & _001_[9];
  assign _027_ = _002_[0] & _015_;
  assign _070_ = _026_ & _001_[9];
  assign _026_ = _000_[31] & _015_;
  assign _069_ = _025_ & _007_;
  assign _025_ = _042_ & _024_;
  assign _024_ = _046_ & _044_;
  assign _067_ = _022_ & _001_[9];
  assign _022_ = _008_ & _018_;
  assign _066_ = _021_ & _001_[9];
  assign _021_ = _012_ & _015_;
  assign _064_ = _019_ & _007_;
  assign _019_ = _045_ & _013_;
  assign _062_ = _017_ & _001_[9];
  assign _017_ = _002_[0] & _009_;
  assign _061_ = _016_ & _001_[9];
  assign _016_ = _000_[31] & _009_;
  assign _059_ = _014_ & _007_;
  assign _014_ = _042_ & _013_;
  assign _013_ = _043_ & _044_;
  assign _056_ = _009_ & _001_[9];
  assign _009_ = _008_ & _012_;
  assign _058_ = _011_ & _001_[9];
  assign _011_ = _012_ & _009_;
  assign _057_ = _010_ & _001_[9];
  assign _010_ = _008_ & _009_;
  assign _055_ = _008_ & _001_[9];
  assign _000_[30:0] = { _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31] };
  assign _001_[8:0] = { _001_[9], _001_[9], _001_[9], _001_[9], _001_[9], _001_[9], _001_[9], _001_[9], _001_[9] };
  assign _002_[31:1] = { _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31] };
  assign _005_[8:0] = { _005_[9], _005_[9], _005_[9], _005_[9], _005_[9], _005_[9], _005_[9], _005_[9], _005_[9] };
  assign i = 32'd8;
endmodule

(* dynports =  1  *)
(* src = "./src/memory_syn_syn.v:12" *)
module \$paramod\memory_syn_syn\DATA_SIZE=8\MAIN_SIZE=6 (data_out, clk, reset, write, read, wr_ptr, rd_ptr, data_in);
  (* src = "./src/memory_syn_syn.v:34" *)
  wire [31:0] _000_;
  (* src = "./src/memory_syn_syn.v:34" *)
  wire [7:0] _001_;
  (* src = "./src/memory_syn_syn.v:34" *)
  wire [31:0] _002_;
  (* src = "./src/memory_syn_syn.v:34" *)
  (* unused_bits = "3 4 5" *)
  wire [5:0] _003_;
  (* src = "./src/memory_syn_syn.v:34" *)
  wire [7:0] _004_;
  (* src = "./src/memory_syn_syn.v:34" *)
  wire [7:0] _005_;
  (* src = "./src/memory_syn_syn.v:62" *)
  wire [7:0] _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire [7:0] _040_;
  wire [7:0] _041_;
  wire [7:0] _042_;
  wire [7:0] _043_;
  wire [7:0] _044_;
  wire [7:0] _045_;
  wire [7:0] _046_;
  wire [7:0] _047_;
  wire [7:0] _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire [7:0] _070_;
  wire [7:0] _071_;
  wire [7:0] _072_;
  wire [7:0] _073_;
  wire [7:0] _074_;
  wire [7:0] _075_;
  wire [7:0] _076_;
  wire [7:0] _077_;
  wire [7:0] _078_;
  wire [7:0] _079_;
  wire [7:0] _080_;
  wire [7:0] _081_;
  wire [7:0] _082_;
  wire [7:0] _083_;
  wire [7:0] _084_;
  wire [7:0] _085_;
  wire [7:0] _086_;
  wire [7:0] _087_;
  wire [7:0] _088_;
  wire [7:0] _089_;
  wire [7:0] _090_;
  wire [7:0] _091_;
  wire [7:0] _092_;
  wire [7:0] _093_;
  wire [7:0] _094_;
  wire [7:0] _095_;
  wire [7:0] _096_;
  (* src = "./src/memory_syn_syn.v:52" *)
  wire [7:0] _097_;
  wire [7:0] _098_;
  (* unused_bits = "3 4 5" *)
  wire [5:0] _099_;
  (* src = "./src/memory_syn_syn.v:19" *)
  input clk;
  (* src = "./src/memory_syn_syn.v:25" *)
  input [7:0] data_in;
  (* src = "./src/memory_syn_syn.v:17" *)
  output [7:0] data_out;
  (* src = "./src/memory_syn_syn.v:31" *)
  wire [7:0] ff_mem;
  (* src = "./src/memory_syn_syn.v:30" *)
  wire [31:0] i;
  wire [7:0] \mem[0] ;
  wire [7:0] \mem[1] ;
  wire [7:0] \mem[2] ;
  wire [7:0] \mem[3] ;
  wire [7:0] \mem[4] ;
  wire [7:0] \mem[5] ;
  (* src = "./src/memory_syn_syn.v:24" *)
  input [5:0] rd_ptr;
  (* src = "./src/memory_syn_syn.v:22" *)
  input read;
  (* src = "./src/memory_syn_syn.v:20" *)
  input reset;
  (* src = "./src/memory_syn_syn.v:23" *)
  input [5:0] wr_ptr;
  (* src = "./src/memory_syn_syn.v:21" *)
  input write;
  assign _070_[0] = _049_ ? _000_[31] : \mem[0] [0];
  assign _070_[1] = _049_ ? _000_[31] : \mem[0] [1];
  assign _070_[2] = _049_ ? _000_[31] : \mem[0] [2];
  assign _070_[3] = _049_ ? _000_[31] : \mem[0] [3];
  assign _070_[4] = _049_ ? _000_[31] : \mem[0] [4];
  assign _070_[5] = _049_ ? _000_[31] : \mem[0] [5];
  assign _070_[6] = _049_ ? _000_[31] : \mem[0] [6];
  assign _070_[7] = _049_ ? _000_[31] : \mem[0] [7];
  assign _082_[0] = _059_ ? _000_[31] : _081_[0];
  assign _082_[1] = _059_ ? _000_[31] : _081_[1];
  assign _082_[2] = _059_ ? _000_[31] : _081_[2];
  assign _082_[3] = _059_ ? _000_[31] : _081_[3];
  assign _082_[4] = _059_ ? _000_[31] : _081_[4];
  assign _082_[5] = _059_ ? _000_[31] : _081_[5];
  assign _082_[6] = _059_ ? _000_[31] : _081_[6];
  assign _082_[7] = _059_ ? _000_[31] : _081_[7];
  assign _071_[0] = _050_ ? _000_[31] : _070_[0];
  assign _071_[1] = _050_ ? _000_[31] : _070_[1];
  assign _071_[2] = _050_ ? _000_[31] : _070_[2];
  assign _071_[3] = _050_ ? _000_[31] : _070_[3];
  assign _071_[4] = _050_ ? _000_[31] : _070_[4];
  assign _071_[5] = _050_ ? _000_[31] : _070_[5];
  assign _071_[6] = _050_ ? _000_[31] : _070_[6];
  assign _071_[7] = _050_ ? _000_[31] : _070_[7];
  assign _072_[0] = _051_ ? _000_[31] : _071_[0];
  assign _072_[1] = _051_ ? _000_[31] : _071_[1];
  assign _072_[2] = _051_ ? _000_[31] : _071_[2];
  assign _072_[3] = _051_ ? _000_[31] : _071_[3];
  assign _072_[4] = _051_ ? _000_[31] : _071_[4];
  assign _072_[5] = _051_ ? _000_[31] : _071_[5];
  assign _072_[6] = _051_ ? _000_[31] : _071_[6];
  assign _072_[7] = _051_ ? _000_[31] : _071_[7];
  assign _088_[0] = _065_ ? _040_[0] : _087_[0];
  assign _088_[1] = _065_ ? _040_[1] : _087_[1];
  assign _088_[2] = _065_ ? _040_[2] : _087_[2];
  assign _088_[3] = _065_ ? _040_[3] : _087_[3];
  assign _088_[4] = _065_ ? _040_[4] : _087_[4];
  assign _088_[5] = _065_ ? _040_[5] : _087_[5];
  assign _088_[6] = _065_ ? _040_[6] : _087_[6];
  assign _088_[7] = _065_ ? _040_[7] : _087_[7];
  assign _045_[0] = rd_ptr[0] ? \mem[5] [0] : \mem[4] [0];
  assign _045_[1] = rd_ptr[0] ? \mem[5] [1] : \mem[4] [1];
  assign _045_[2] = rd_ptr[0] ? \mem[5] [2] : \mem[4] [2];
  assign _045_[3] = rd_ptr[0] ? \mem[5] [3] : \mem[4] [3];
  assign _045_[4] = rd_ptr[0] ? \mem[5] [4] : \mem[4] [4];
  assign _045_[5] = rd_ptr[0] ? \mem[5] [5] : \mem[4] [5];
  assign _045_[6] = rd_ptr[0] ? \mem[5] [6] : \mem[4] [6];
  assign _045_[7] = rd_ptr[0] ? \mem[5] [7] : \mem[4] [7];
  assign _046_[0] = rd_ptr[0] ? _048_[0] : _047_[0];
  assign _046_[1] = rd_ptr[0] ? _048_[1] : _047_[1];
  assign _046_[2] = rd_ptr[0] ? _048_[2] : _047_[2];
  assign _046_[3] = rd_ptr[0] ? _048_[3] : _047_[3];
  assign _046_[4] = rd_ptr[0] ? _048_[4] : _047_[4];
  assign _046_[5] = rd_ptr[0] ? _048_[5] : _047_[5];
  assign _046_[6] = rd_ptr[0] ? _048_[6] : _047_[6];
  assign _046_[7] = rd_ptr[0] ? _048_[7] : _047_[7];
  assign _044_[0] = rd_ptr[0] ? \mem[3] [0] : \mem[2] [0];
  assign _044_[1] = rd_ptr[0] ? \mem[3] [1] : \mem[2] [1];
  assign _044_[2] = rd_ptr[0] ? \mem[3] [2] : \mem[2] [2];
  assign _044_[3] = rd_ptr[0] ? \mem[3] [3] : \mem[2] [3];
  assign _044_[4] = rd_ptr[0] ? \mem[3] [4] : \mem[2] [4];
  assign _044_[5] = rd_ptr[0] ? \mem[3] [5] : \mem[2] [5];
  assign _044_[6] = rd_ptr[0] ? \mem[3] [6] : \mem[2] [6];
  assign _044_[7] = rd_ptr[0] ? \mem[3] [7] : \mem[2] [7];
  assign _097_[0] = rd_ptr[2] ? _042_[0] : _041_[0];
  assign _097_[1] = rd_ptr[2] ? _042_[1] : _041_[1];
  assign _097_[2] = rd_ptr[2] ? _042_[2] : _041_[2];
  assign _097_[3] = rd_ptr[2] ? _042_[3] : _041_[3];
  assign _097_[4] = rd_ptr[2] ? _042_[4] : _041_[4];
  assign _097_[5] = rd_ptr[2] ? _042_[5] : _041_[5];
  assign _097_[6] = rd_ptr[2] ? _042_[6] : _041_[6];
  assign _097_[7] = rd_ptr[2] ? _042_[7] : _041_[7];
  assign _042_[0] = rd_ptr[1] ? _046_[0] : _045_[0];
  assign _042_[1] = rd_ptr[1] ? _046_[1] : _045_[1];
  assign _042_[2] = rd_ptr[1] ? _046_[2] : _045_[2];
  assign _042_[3] = rd_ptr[1] ? _046_[3] : _045_[3];
  assign _042_[4] = rd_ptr[1] ? _046_[4] : _045_[4];
  assign _042_[5] = rd_ptr[1] ? _046_[5] : _045_[5];
  assign _042_[6] = rd_ptr[1] ? _046_[6] : _045_[6];
  assign _042_[7] = rd_ptr[1] ? _046_[7] : _045_[7];
  assign _041_[0] = rd_ptr[1] ? _044_[0] : _043_[0];
  assign _041_[1] = rd_ptr[1] ? _044_[1] : _043_[1];
  assign _041_[2] = rd_ptr[1] ? _044_[2] : _043_[2];
  assign _041_[3] = rd_ptr[1] ? _044_[3] : _043_[3];
  assign _041_[4] = rd_ptr[1] ? _044_[4] : _043_[4];
  assign _041_[5] = rd_ptr[1] ? _044_[5] : _043_[5];
  assign _041_[6] = rd_ptr[1] ? _044_[6] : _043_[6];
  assign _041_[7] = rd_ptr[1] ? _044_[7] : _043_[7];
  assign _043_[0] = rd_ptr[0] ? \mem[1] [0] : \mem[0] [0];
  assign _043_[1] = rd_ptr[0] ? \mem[1] [1] : \mem[0] [1];
  assign _043_[2] = rd_ptr[0] ? \mem[1] [2] : \mem[0] [2];
  assign _043_[3] = rd_ptr[0] ? \mem[1] [3] : \mem[0] [3];
  assign _043_[4] = rd_ptr[0] ? \mem[1] [4] : \mem[0] [4];
  assign _043_[5] = rd_ptr[0] ? \mem[1] [5] : \mem[0] [5];
  assign _043_[6] = rd_ptr[0] ? \mem[1] [6] : \mem[0] [6];
  assign _043_[7] = rd_ptr[0] ? \mem[1] [7] : \mem[0] [7];
  assign _083_[0] = _060_ ? _000_[31] : _082_[0];
  assign _083_[1] = _060_ ? _000_[31] : _082_[1];
  assign _083_[2] = _060_ ? _000_[31] : _082_[2];
  assign _083_[3] = _060_ ? _000_[31] : _082_[3];
  assign _083_[4] = _060_ ? _000_[31] : _082_[4];
  assign _083_[5] = _060_ ? _000_[31] : _082_[5];
  assign _083_[6] = _060_ ? _000_[31] : _082_[6];
  assign _083_[7] = _060_ ? _000_[31] : _082_[7];
  assign _084_[0] = _061_ ? _040_[0] : _083_[0];
  assign _084_[1] = _061_ ? _040_[1] : _083_[1];
  assign _084_[2] = _061_ ? _040_[2] : _083_[2];
  assign _084_[3] = _061_ ? _040_[3] : _083_[3];
  assign _084_[4] = _061_ ? _040_[4] : _083_[4];
  assign _084_[5] = _061_ ? _040_[5] : _083_[5];
  assign _084_[6] = _061_ ? _040_[6] : _083_[6];
  assign _084_[7] = _061_ ? _040_[7] : _083_[7];
  assign _037_ = _005_[7] ? _003_[0] : _002_[0];
  assign _038_ = _005_[7] ? _003_[1] : _000_[31];
  assign _039_ = _005_[7] ? _003_[2] : _002_[0];
  assign _040_[0] = _005_[7] ? _004_[0] : _000_[31];
  assign _040_[1] = _005_[7] ? _004_[1] : _000_[31];
  assign _040_[2] = _005_[7] ? _004_[2] : _000_[31];
  assign _040_[3] = _005_[7] ? _004_[3] : _000_[31];
  assign _040_[4] = _005_[7] ? _004_[4] : _000_[31];
  assign _040_[5] = _005_[7] ? _004_[5] : _000_[31];
  assign _040_[6] = _005_[7] ? _004_[6] : _000_[31];
  assign _040_[7] = _005_[7] ? _004_[7] : _000_[31];
  assign _073_[0] = _052_ ? _000_[31] : _072_[0];
  assign _073_[1] = _052_ ? _000_[31] : _072_[1];
  assign _073_[2] = _052_ ? _000_[31] : _072_[2];
  assign _073_[3] = _052_ ? _000_[31] : _072_[3];
  assign _073_[4] = _052_ ? _000_[31] : _072_[4];
  assign _073_[5] = _052_ ? _000_[31] : _072_[5];
  assign _073_[6] = _052_ ? _000_[31] : _072_[6];
  assign _073_[7] = _052_ ? _000_[31] : _072_[7];
  assign _087_[0] = _064_ ? _000_[31] : _086_[0];
  assign _087_[1] = _064_ ? _000_[31] : _086_[1];
  assign _087_[2] = _064_ ? _000_[31] : _086_[2];
  assign _087_[3] = _064_ ? _000_[31] : _086_[3];
  assign _087_[4] = _064_ ? _000_[31] : _086_[4];
  assign _087_[5] = _064_ ? _000_[31] : _086_[5];
  assign _087_[6] = _064_ ? _000_[31] : _086_[6];
  assign _087_[7] = _064_ ? _000_[31] : _086_[7];
  assign _081_[0] = _058_ ? _000_[31] : \mem[2] [0];
  assign _081_[1] = _058_ ? _000_[31] : \mem[2] [1];
  assign _081_[2] = _058_ ? _000_[31] : \mem[2] [2];
  assign _081_[3] = _058_ ? _000_[31] : \mem[2] [3];
  assign _081_[4] = _058_ ? _000_[31] : \mem[2] [4];
  assign _081_[5] = _058_ ? _000_[31] : \mem[2] [5];
  assign _081_[6] = _058_ ? _000_[31] : \mem[2] [6];
  assign _081_[7] = _058_ ? _000_[31] : \mem[2] [7];
  assign _077_[0] = _055_ ? _000_[31] : _076_[0];
  assign _077_[1] = _055_ ? _000_[31] : _076_[1];
  assign _077_[2] = _055_ ? _000_[31] : _076_[2];
  assign _077_[3] = _055_ ? _000_[31] : _076_[3];
  assign _077_[4] = _055_ ? _000_[31] : _076_[4];
  assign _077_[5] = _055_ ? _000_[31] : _076_[5];
  assign _077_[6] = _055_ ? _000_[31] : _076_[6];
  assign _077_[7] = _055_ ? _000_[31] : _076_[7];
  assign _078_[0] = _056_ ? _000_[31] : _077_[0];
  assign _078_[1] = _056_ ? _000_[31] : _077_[1];
  assign _078_[2] = _056_ ? _000_[31] : _077_[2];
  assign _078_[3] = _056_ ? _000_[31] : _077_[3];
  assign _078_[4] = _056_ ? _000_[31] : _077_[4];
  assign _078_[5] = _056_ ? _000_[31] : _077_[5];
  assign _078_[6] = _056_ ? _000_[31] : _077_[6];
  assign _078_[7] = _056_ ? _000_[31] : _077_[7];
  assign _006_[0] = reset ? (* src = "./src/memory_syn_syn.v:63" *) data_out[0] : 1'h0;
  assign _006_[1] = reset ? (* src = "./src/memory_syn_syn.v:63" *) data_out[1] : 1'h0;
  assign _006_[2] = reset ? (* src = "./src/memory_syn_syn.v:63" *) data_out[2] : 1'h0;
  assign _006_[3] = reset ? (* src = "./src/memory_syn_syn.v:63" *) data_out[3] : 1'h0;
  assign _006_[4] = reset ? (* src = "./src/memory_syn_syn.v:63" *) data_out[4] : 1'h0;
  assign _006_[5] = reset ? (* src = "./src/memory_syn_syn.v:63" *) data_out[5] : 1'h0;
  assign _006_[6] = reset ? (* src = "./src/memory_syn_syn.v:63" *) data_out[6] : 1'h0;
  assign _006_[7] = reset ? (* src = "./src/memory_syn_syn.v:63" *) data_out[7] : 1'h0;
  assign data_out[0] = read ? (* src = "./src/memory_syn_syn.v:51" *) _097_[0] : ff_mem[0];
  assign data_out[1] = read ? (* src = "./src/memory_syn_syn.v:51" *) _097_[1] : ff_mem[1];
  assign data_out[2] = read ? (* src = "./src/memory_syn_syn.v:51" *) _097_[2] : ff_mem[2];
  assign data_out[3] = read ? (* src = "./src/memory_syn_syn.v:51" *) _097_[3] : ff_mem[3];
  assign data_out[4] = read ? (* src = "./src/memory_syn_syn.v:51" *) _097_[4] : ff_mem[4];
  assign data_out[5] = read ? (* src = "./src/memory_syn_syn.v:51" *) _097_[5] : ff_mem[5];
  assign data_out[6] = read ? (* src = "./src/memory_syn_syn.v:51" *) _097_[6] : ff_mem[6];
  assign data_out[7] = read ? (* src = "./src/memory_syn_syn.v:51" *) _097_[7] : ff_mem[7];
  assign _075_[0] = _053_ ? _040_[0] : _074_[0];
  assign _075_[1] = _053_ ? _040_[1] : _074_[1];
  assign _075_[2] = _053_ ? _040_[2] : _074_[2];
  assign _075_[3] = _053_ ? _040_[3] : _074_[3];
  assign _075_[4] = _053_ ? _040_[4] : _074_[4];
  assign _075_[5] = _053_ ? _040_[5] : _074_[5];
  assign _075_[6] = _053_ ? _040_[6] : _074_[6];
  assign _075_[7] = _053_ ? _040_[7] : _074_[7];
  assign _002_[0] = reset ? (* src = "./src/memory_syn_syn.v:35" *) 1'hx : 1'h1;
  assign _001_[7] = ~(* src = "./src/memory_syn_syn.v:35" *) reset;
  assign _000_[31] = reset ? (* src = "./src/memory_syn_syn.v:35" *) 1'hx : 1'h0;
  assign _098_[0] = write ? (* src = "./src/memory_syn_syn.v:41" *) data_in[0] : 1'hx;
  assign _098_[1] = write ? (* src = "./src/memory_syn_syn.v:41" *) data_in[1] : 1'hx;
  assign _098_[2] = write ? (* src = "./src/memory_syn_syn.v:41" *) data_in[2] : 1'hx;
  assign _098_[3] = write ? (* src = "./src/memory_syn_syn.v:41" *) data_in[3] : 1'hx;
  assign _098_[4] = write ? (* src = "./src/memory_syn_syn.v:41" *) data_in[4] : 1'hx;
  assign _098_[5] = write ? (* src = "./src/memory_syn_syn.v:41" *) data_in[5] : 1'hx;
  assign _098_[6] = write ? (* src = "./src/memory_syn_syn.v:41" *) data_in[6] : 1'hx;
  assign _098_[7] = write ? (* src = "./src/memory_syn_syn.v:41" *) data_in[7] : 1'hx;
  assign _005_[7] = reset ? (* src = "./src/memory_syn_syn.v:35" *) write : 1'h0;
  assign _004_[0] = reset ? (* src = "./src/memory_syn_syn.v:35" *) _098_[0] : 1'hx;
  assign _004_[1] = reset ? (* src = "./src/memory_syn_syn.v:35" *) _098_[1] : 1'hx;
  assign _004_[2] = reset ? (* src = "./src/memory_syn_syn.v:35" *) _098_[2] : 1'hx;
  assign _004_[3] = reset ? (* src = "./src/memory_syn_syn.v:35" *) _098_[3] : 1'hx;
  assign _004_[4] = reset ? (* src = "./src/memory_syn_syn.v:35" *) _098_[4] : 1'hx;
  assign _004_[5] = reset ? (* src = "./src/memory_syn_syn.v:35" *) _098_[5] : 1'hx;
  assign _004_[6] = reset ? (* src = "./src/memory_syn_syn.v:35" *) _098_[6] : 1'hx;
  assign _004_[7] = reset ? (* src = "./src/memory_syn_syn.v:35" *) _098_[7] : 1'hx;
  assign _099_[0] = write ? (* src = "./src/memory_syn_syn.v:41" *) wr_ptr[0] : 1'hx;
  assign _099_[1] = write ? (* src = "./src/memory_syn_syn.v:41" *) wr_ptr[1] : 1'hx;
  assign _099_[2] = write ? (* src = "./src/memory_syn_syn.v:41" *) wr_ptr[2] : 1'hx;
  assign _003_[0] = reset ? (* src = "./src/memory_syn_syn.v:35" *) _099_[0] : 1'hx;
  assign _003_[1] = reset ? (* src = "./src/memory_syn_syn.v:35" *) _099_[1] : 1'hx;
  assign _003_[2] = reset ? (* src = "./src/memory_syn_syn.v:35" *) _099_[2] : 1'hx;
  assign _079_[0] = _055_ ? _000_[31] : _078_[0];
  assign _079_[1] = _055_ ? _000_[31] : _078_[1];
  assign _079_[2] = _055_ ? _000_[31] : _078_[2];
  assign _079_[3] = _055_ ? _000_[31] : _078_[3];
  assign _079_[4] = _055_ ? _000_[31] : _078_[4];
  assign _079_[5] = _055_ ? _000_[31] : _078_[5];
  assign _079_[6] = _055_ ? _000_[31] : _078_[6];
  assign _079_[7] = _055_ ? _000_[31] : _078_[7];
  assign _080_[0] = _057_ ? _040_[0] : _079_[0];
  assign _080_[1] = _057_ ? _040_[1] : _079_[1];
  assign _080_[2] = _057_ ? _040_[2] : _079_[2];
  assign _080_[3] = _057_ ? _040_[3] : _079_[3];
  assign _080_[4] = _057_ ? _040_[4] : _079_[4];
  assign _080_[5] = _057_ ? _040_[5] : _079_[5];
  assign _080_[6] = _057_ ? _040_[6] : _079_[6];
  assign _080_[7] = _057_ ? _040_[7] : _079_[7];
  assign _086_[0] = _063_ ? _000_[31] : _085_[0];
  assign _086_[1] = _063_ ? _000_[31] : _085_[1];
  assign _086_[2] = _063_ ? _000_[31] : _085_[2];
  assign _086_[3] = _063_ ? _000_[31] : _085_[3];
  assign _086_[4] = _063_ ? _000_[31] : _085_[4];
  assign _086_[5] = _063_ ? _000_[31] : _085_[5];
  assign _086_[6] = _063_ ? _000_[31] : _085_[6];
  assign _086_[7] = _063_ ? _000_[31] : _085_[7];
  assign _076_[0] = _054_ ? _000_[31] : \mem[1] [0];
  assign _076_[1] = _054_ ? _000_[31] : \mem[1] [1];
  assign _076_[2] = _054_ ? _000_[31] : \mem[1] [2];
  assign _076_[3] = _054_ ? _000_[31] : \mem[1] [3];
  assign _076_[4] = _054_ ? _000_[31] : \mem[1] [4];
  assign _076_[5] = _054_ ? _000_[31] : \mem[1] [5];
  assign _076_[6] = _054_ ? _000_[31] : \mem[1] [6];
  assign _076_[7] = _054_ ? _000_[31] : \mem[1] [7];
  assign _085_[0] = _062_ ? _000_[31] : \mem[3] [0];
  assign _085_[1] = _062_ ? _000_[31] : \mem[3] [1];
  assign _085_[2] = _062_ ? _000_[31] : \mem[3] [2];
  assign _085_[3] = _062_ ? _000_[31] : \mem[3] [3];
  assign _085_[4] = _062_ ? _000_[31] : \mem[3] [4];
  assign _085_[5] = _062_ ? _000_[31] : \mem[3] [5];
  assign _085_[6] = _062_ ? _000_[31] : \mem[3] [6];
  assign _085_[7] = _062_ ? _000_[31] : \mem[3] [7];
  assign _074_[0] = _051_ ? _000_[31] : _073_[0];
  assign _074_[1] = _051_ ? _000_[31] : _073_[1];
  assign _074_[2] = _051_ ? _000_[31] : _073_[2];
  assign _074_[3] = _051_ ? _000_[31] : _073_[3];
  assign _074_[4] = _051_ ? _000_[31] : _073_[4];
  assign _074_[5] = _051_ ? _000_[31] : _073_[5];
  assign _074_[6] = _051_ ? _000_[31] : _073_[6];
  assign _074_[7] = _051_ ? _000_[31] : _073_[7];
  assign _007_ = _005_[7] ? 1'h1 : _001_[7];
  assign _089_[0] = _060_ ? _000_[31] : \mem[4] [0];
  assign _089_[1] = _060_ ? _000_[31] : \mem[4] [1];
  assign _089_[2] = _060_ ? _000_[31] : \mem[4] [2];
  assign _089_[3] = _060_ ? _000_[31] : \mem[4] [3];
  assign _089_[4] = _060_ ? _000_[31] : \mem[4] [4];
  assign _089_[5] = _060_ ? _000_[31] : \mem[4] [5];
  assign _089_[6] = _060_ ? _000_[31] : \mem[4] [6];
  assign _089_[7] = _060_ ? _000_[31] : \mem[4] [7];
  assign _090_[0] = _066_ ? _000_[31] : _089_[0];
  assign _090_[1] = _066_ ? _000_[31] : _089_[1];
  assign _090_[2] = _066_ ? _000_[31] : _089_[2];
  assign _090_[3] = _066_ ? _000_[31] : _089_[3];
  assign _090_[4] = _066_ ? _000_[31] : _089_[4];
  assign _090_[5] = _066_ ? _000_[31] : _089_[5];
  assign _090_[6] = _066_ ? _000_[31] : _089_[6];
  assign _090_[7] = _066_ ? _000_[31] : _089_[7];
  assign _091_[0] = _058_ ? _000_[31] : _090_[0];
  assign _091_[1] = _058_ ? _000_[31] : _090_[1];
  assign _091_[2] = _058_ ? _000_[31] : _090_[2];
  assign _091_[3] = _058_ ? _000_[31] : _090_[3];
  assign _091_[4] = _058_ ? _000_[31] : _090_[4];
  assign _091_[5] = _058_ ? _000_[31] : _090_[5];
  assign _091_[6] = _058_ ? _000_[31] : _090_[6];
  assign _091_[7] = _058_ ? _000_[31] : _090_[7];
  assign _092_[0] = _067_ ? _040_[0] : _091_[0];
  assign _092_[1] = _067_ ? _040_[1] : _091_[1];
  assign _092_[2] = _067_ ? _040_[2] : _091_[2];
  assign _092_[3] = _067_ ? _040_[3] : _091_[3];
  assign _092_[4] = _067_ ? _040_[4] : _091_[4];
  assign _092_[5] = _067_ ? _040_[5] : _091_[5];
  assign _092_[6] = _067_ ? _040_[6] : _091_[6];
  assign _092_[7] = _067_ ? _040_[7] : _091_[7];
  assign _093_[0] = _064_ ? _000_[31] : \mem[5] [0];
  assign _093_[1] = _064_ ? _000_[31] : \mem[5] [1];
  assign _093_[2] = _064_ ? _000_[31] : \mem[5] [2];
  assign _093_[3] = _064_ ? _000_[31] : \mem[5] [3];
  assign _093_[4] = _064_ ? _000_[31] : \mem[5] [4];
  assign _093_[5] = _064_ ? _000_[31] : \mem[5] [5];
  assign _093_[6] = _064_ ? _000_[31] : \mem[5] [6];
  assign _093_[7] = _064_ ? _000_[31] : \mem[5] [7];
  assign _094_[0] = _068_ ? _000_[31] : _093_[0];
  assign _094_[1] = _068_ ? _000_[31] : _093_[1];
  assign _094_[2] = _068_ ? _000_[31] : _093_[2];
  assign _094_[3] = _068_ ? _000_[31] : _093_[3];
  assign _094_[4] = _068_ ? _000_[31] : _093_[4];
  assign _094_[5] = _068_ ? _000_[31] : _093_[5];
  assign _094_[6] = _068_ ? _000_[31] : _093_[6];
  assign _094_[7] = _068_ ? _000_[31] : _093_[7];
  assign _095_[0] = _062_ ? _000_[31] : _094_[0];
  assign _095_[1] = _062_ ? _000_[31] : _094_[1];
  assign _095_[2] = _062_ ? _000_[31] : _094_[2];
  assign _095_[3] = _062_ ? _000_[31] : _094_[3];
  assign _095_[4] = _062_ ? _000_[31] : _094_[4];
  assign _095_[5] = _062_ ? _000_[31] : _094_[5];
  assign _095_[6] = _062_ ? _000_[31] : _094_[6];
  assign _095_[7] = _062_ ? _000_[31] : _094_[7];
  assign _096_[0] = _069_ ? _040_[0] : _095_[0];
  assign _096_[1] = _069_ ? _040_[1] : _095_[1];
  assign _096_[2] = _069_ ? _040_[2] : _095_[2];
  assign _096_[3] = _069_ ? _040_[3] : _095_[3];
  assign _096_[4] = _069_ ? _040_[4] : _095_[4];
  assign _096_[5] = _069_ ? _040_[5] : _095_[5];
  assign _096_[6] = _069_ ? _040_[6] : _095_[6];
  assign _096_[7] = _069_ ? _040_[7] : _095_[7];
  assign _033_ = ~_002_[0];
  assign _008_ = ~_000_[31];
  assign _034_ = ~_037_;
  assign _035_ = ~_038_;
  assign _036_ = ~_039_;
  DFF _431_ (
    .C(clk),
    .D(_096_[0]),
    .Q(\mem[5] [0])
  );
  DFF _432_ (
    .C(clk),
    .D(_096_[1]),
    .Q(\mem[5] [1])
  );
  DFF _433_ (
    .C(clk),
    .D(_096_[2]),
    .Q(\mem[5] [2])
  );
  DFF _434_ (
    .C(clk),
    .D(_096_[3]),
    .Q(\mem[5] [3])
  );
  DFF _435_ (
    .C(clk),
    .D(_096_[4]),
    .Q(\mem[5] [4])
  );
  DFF _436_ (
    .C(clk),
    .D(_096_[5]),
    .Q(\mem[5] [5])
  );
  DFF _437_ (
    .C(clk),
    .D(_096_[6]),
    .Q(\mem[5] [6])
  );
  DFF _438_ (
    .C(clk),
    .D(_096_[7]),
    .Q(\mem[5] [7])
  );
  DFF _439_ (
    .C(clk),
    .D(_092_[0]),
    .Q(\mem[4] [0])
  );
  DFF _440_ (
    .C(clk),
    .D(_092_[1]),
    .Q(\mem[4] [1])
  );
  DFF _441_ (
    .C(clk),
    .D(_092_[2]),
    .Q(\mem[4] [2])
  );
  DFF _442_ (
    .C(clk),
    .D(_092_[3]),
    .Q(\mem[4] [3])
  );
  DFF _443_ (
    .C(clk),
    .D(_092_[4]),
    .Q(\mem[4] [4])
  );
  DFF _444_ (
    .C(clk),
    .D(_092_[5]),
    .Q(\mem[4] [5])
  );
  DFF _445_ (
    .C(clk),
    .D(_092_[6]),
    .Q(\mem[4] [6])
  );
  DFF _446_ (
    .C(clk),
    .D(_092_[7]),
    .Q(\mem[4] [7])
  );
  DFF _447_ (
    .C(clk),
    .D(_088_[0]),
    .Q(\mem[3] [0])
  );
  DFF _448_ (
    .C(clk),
    .D(_088_[1]),
    .Q(\mem[3] [1])
  );
  DFF _449_ (
    .C(clk),
    .D(_088_[2]),
    .Q(\mem[3] [2])
  );
  DFF _450_ (
    .C(clk),
    .D(_088_[3]),
    .Q(\mem[3] [3])
  );
  DFF _451_ (
    .C(clk),
    .D(_088_[4]),
    .Q(\mem[3] [4])
  );
  DFF _452_ (
    .C(clk),
    .D(_088_[5]),
    .Q(\mem[3] [5])
  );
  DFF _453_ (
    .C(clk),
    .D(_088_[6]),
    .Q(\mem[3] [6])
  );
  DFF _454_ (
    .C(clk),
    .D(_088_[7]),
    .Q(\mem[3] [7])
  );
  DFF _455_ (
    .C(clk),
    .D(_080_[0]),
    .Q(\mem[1] [0])
  );
  DFF _456_ (
    .C(clk),
    .D(_080_[1]),
    .Q(\mem[1] [1])
  );
  DFF _457_ (
    .C(clk),
    .D(_080_[2]),
    .Q(\mem[1] [2])
  );
  DFF _458_ (
    .C(clk),
    .D(_080_[3]),
    .Q(\mem[1] [3])
  );
  DFF _459_ (
    .C(clk),
    .D(_080_[4]),
    .Q(\mem[1] [4])
  );
  DFF _460_ (
    .C(clk),
    .D(_080_[5]),
    .Q(\mem[1] [5])
  );
  DFF _461_ (
    .C(clk),
    .D(_080_[6]),
    .Q(\mem[1] [6])
  );
  DFF _462_ (
    .C(clk),
    .D(_080_[7]),
    .Q(\mem[1] [7])
  );
  DFF _463_ (
    .C(clk),
    .D(_084_[0]),
    .Q(\mem[2] [0])
  );
  DFF _464_ (
    .C(clk),
    .D(_084_[1]),
    .Q(\mem[2] [1])
  );
  DFF _465_ (
    .C(clk),
    .D(_084_[2]),
    .Q(\mem[2] [2])
  );
  DFF _466_ (
    .C(clk),
    .D(_084_[3]),
    .Q(\mem[2] [3])
  );
  DFF _467_ (
    .C(clk),
    .D(_084_[4]),
    .Q(\mem[2] [4])
  );
  DFF _468_ (
    .C(clk),
    .D(_084_[5]),
    .Q(\mem[2] [5])
  );
  DFF _469_ (
    .C(clk),
    .D(_084_[6]),
    .Q(\mem[2] [6])
  );
  DFF _470_ (
    .C(clk),
    .D(_084_[7]),
    .Q(\mem[2] [7])
  );
  DFF _471_ (
    .C(clk),
    .D(_075_[0]),
    .Q(\mem[0] [0])
  );
  DFF _472_ (
    .C(clk),
    .D(_075_[1]),
    .Q(\mem[0] [1])
  );
  DFF _473_ (
    .C(clk),
    .D(_075_[2]),
    .Q(\mem[0] [2])
  );
  DFF _474_ (
    .C(clk),
    .D(_075_[3]),
    .Q(\mem[0] [3])
  );
  DFF _475_ (
    .C(clk),
    .D(_075_[4]),
    .Q(\mem[0] [4])
  );
  DFF _476_ (
    .C(clk),
    .D(_075_[5]),
    .Q(\mem[0] [5])
  );
  DFF _477_ (
    .C(clk),
    .D(_075_[6]),
    .Q(\mem[0] [6])
  );
  DFF _478_ (
    .C(clk),
    .D(_075_[7]),
    .Q(\mem[0] [7])
  );
  (* src = "./src/memory_syn_syn.v:62" *)
  DFF _479_ (
    .C(clk),
    .D(_006_[0]),
    .Q(ff_mem[0])
  );
  (* src = "./src/memory_syn_syn.v:62" *)
  DFF _480_ (
    .C(clk),
    .D(_006_[1]),
    .Q(ff_mem[1])
  );
  (* src = "./src/memory_syn_syn.v:62" *)
  DFF _481_ (
    .C(clk),
    .D(_006_[2]),
    .Q(ff_mem[2])
  );
  (* src = "./src/memory_syn_syn.v:62" *)
  DFF _482_ (
    .C(clk),
    .D(_006_[3]),
    .Q(ff_mem[3])
  );
  (* src = "./src/memory_syn_syn.v:62" *)
  DFF _483_ (
    .C(clk),
    .D(_006_[4]),
    .Q(ff_mem[4])
  );
  (* src = "./src/memory_syn_syn.v:62" *)
  DFF _484_ (
    .C(clk),
    .D(_006_[5]),
    .Q(ff_mem[5])
  );
  (* src = "./src/memory_syn_syn.v:62" *)
  DFF _485_ (
    .C(clk),
    .D(_006_[6]),
    .Q(ff_mem[6])
  );
  (* src = "./src/memory_syn_syn.v:62" *)
  DFF _486_ (
    .C(clk),
    .D(_006_[7]),
    .Q(ff_mem[7])
  );
  assign _020_ = _000_[31] & _033_;
  assign _059_ = _019_ & _001_[7];
  assign _009_ = _033_ & _008_;
  assign _019_ = _033_ & _014_;
  assign _050_ = _009_ & _001_[7];
  assign _010_ = _008_ & _009_;
  assign _051_ = _010_ & _001_[7];
  assign _011_ = _033_ & _009_;
  assign _052_ = _011_ & _001_[7];
  assign _049_ = _008_ & _001_[7];
  assign _060_ = _021_ & _001_[7];
  assign _021_ = _008_ & _020_;
  assign _022_ = _038_ & _036_;
  assign _061_ = _023_ & _007_;
  assign _023_ = _034_ & _022_;
  assign _064_ = _026_ & _001_[7];
  assign _027_ = _037_ & _022_;
  assign _065_ = _027_ & _007_;
  assign _058_ = _018_ & _001_[7];
  assign _018_ = _008_ & _014_;
  assign _015_ = _000_[31] & _009_;
  assign _055_ = _015_ & _001_[7];
  assign _016_ = _002_[0] & _009_;
  assign _056_ = _016_ & _001_[7];
  assign _014_ = _002_[0] & _008_;
  assign _013_ = _034_ & _012_;
  assign _053_ = _013_ & _007_;
  assign _024_ = _000_[31] & _014_;
  assign _017_ = _037_ & _012_;
  assign _057_ = _017_ & _007_;
  assign _063_ = _025_ & _001_[7];
  assign _026_ = _000_[31] & _020_;
  assign _054_ = _014_ & _001_[7];
  assign _062_ = _024_ & _001_[7];
  assign _025_ = _002_[0] & _014_;
  assign _012_ = _035_ & _036_;
  assign _028_ = _033_ & _020_;
  assign _066_ = _028_ & _001_[7];
  assign _029_ = _035_ & _039_;
  assign _030_ = _034_ & _029_;
  assign _067_ = _030_ & _007_;
  assign _031_ = _002_[0] & _020_;
  assign _068_ = _031_ & _001_[7];
  assign _032_ = _037_ & _029_;
  assign _069_ = _032_ & _007_;
  assign _000_[30:0] = { _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31] };
  assign _001_[6:0] = { _001_[7], _001_[7], _001_[7], _001_[7], _001_[7], _001_[7], _001_[7] };
  assign _002_[31:1] = { _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31] };
  assign _005_[6:0] = { _005_[7], _005_[7], _005_[7], _005_[7], _005_[7], _005_[7], _005_[7] };
  assign i = 32'd6;
endmodule

(* dynports =  1  *)
(* src = "./src/mux2x1.v:18" *)
module \$paramod\mux21_syn\DATA_SIZE=10 (out, valid, pop_0, pop_1, clk, reset, fifo_empty0, fifo_empty1, fifo_almost_empty0, fifo_almost_empty1, in0, in1, fifo_up0_almostfull, fifo_up1_almostfull);
  (* src = "./src/mux2x1.v:40" *)
  wire _00_;
  (* src = "./src/mux2x1.v:40" *)
  wire _01_;
  (* src = "./src/mux2x1.v:61" *)
  wire [9:0] _02_;
  (* src = "./src/mux2x1.v:61" *)
  wire _03_;
  (* src = "./src/mux2x1.v:64" *)
  wire _04_;
  (* src = "./src/mux2x1.v:64" *)
  wire _05_;
  (* src = "./src/mux2x1.v:69" *)
  wire _06_;
  (* src = "./src/mux2x1.v:48" *)
  wire _07_;
  (* src = "./src/mux2x1.v:48" *)
  wire _08_;
  (* src = "./src/mux2x1.v:50" *)
  wire _09_;
  (* src = "./src/mux2x1.v:50" *)
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  (* src = "./src/mux2x1.v:27" *)
  input clk;
  (* src = "./src/mux2x1.v:31" *)
  input fifo_almost_empty0;
  (* src = "./src/mux2x1.v:32" *)
  input fifo_almost_empty1;
  (* src = "./src/mux2x1.v:29" *)
  input fifo_empty0;
  (* src = "./src/mux2x1.v:30" *)
  input fifo_empty1;
  (* src = "./src/mux2x1.v:35" *)
  input fifo_up0_almostfull;
  (* src = "./src/mux2x1.v:36" *)
  input fifo_up1_almostfull;
  (* src = "./src/mux2x1.v:33" *)
  input [9:0] in0;
  (* src = "./src/mux2x1.v:34" *)
  input [9:0] in1;
  (* src = "./src/mux2x1.v:22" *)
  output [9:0] out;
  (* src = "./src/mux2x1.v:24" *)
  output pop_0;
  (* src = "./src/mux2x1.v:25" *)
  output pop_1;
  (* src = "./src/mux2x1.v:28" *)
  input reset;
  (* src = "./src/mux2x1.v:23" *)
  output valid;
  assign _05_ = ~(* src = "./src/mux2x1.v:64" *) fifo_empty0;
  assign _06_ = ~(* src = "./src/mux2x1.v:69" *) fifo_empty1;
  assign _04_ = _05_ &(* src = "./src/mux2x1.v:64" *)  pop_0;
  assign _03_ = _06_ &(* src = "./src/mux2x1.v:69" *)  pop_1;
  assign valid = _04_ ? (* src = "./src/mux2x1.v:64" *) 1'h1 : _03_;
  assign _02_[0] = _03_ ? (* src = "./src/mux2x1.v:69" *) in1[0] : 1'h0;
  assign _02_[1] = _03_ ? (* src = "./src/mux2x1.v:69" *) in1[1] : 1'h0;
  assign _02_[2] = _03_ ? (* src = "./src/mux2x1.v:69" *) in1[2] : 1'h0;
  assign _02_[3] = _03_ ? (* src = "./src/mux2x1.v:69" *) in1[3] : 1'h0;
  assign _02_[4] = _03_ ? (* src = "./src/mux2x1.v:69" *) in1[4] : 1'h0;
  assign _02_[5] = _03_ ? (* src = "./src/mux2x1.v:69" *) in1[5] : 1'h0;
  assign _02_[6] = _03_ ? (* src = "./src/mux2x1.v:69" *) in1[6] : 1'h0;
  assign _02_[7] = _03_ ? (* src = "./src/mux2x1.v:69" *) in1[7] : 1'h0;
  assign _02_[8] = _03_ ? (* src = "./src/mux2x1.v:69" *) in1[8] : 1'h0;
  assign _02_[9] = _03_ ? (* src = "./src/mux2x1.v:69" *) in1[9] : 1'h0;
  assign _00_ = reset ? (* src = "./src/mux2x1.v:42" *) _11_ : 1'h0;
  assign out[0] = _04_ ? (* src = "./src/mux2x1.v:64" *) in0[0] : _02_[0];
  assign out[1] = _04_ ? (* src = "./src/mux2x1.v:64" *) in0[1] : _02_[1];
  assign out[2] = _04_ ? (* src = "./src/mux2x1.v:64" *) in0[2] : _02_[2];
  assign out[3] = _04_ ? (* src = "./src/mux2x1.v:64" *) in0[3] : _02_[3];
  assign out[4] = _04_ ? (* src = "./src/mux2x1.v:64" *) in0[4] : _02_[4];
  assign out[5] = _04_ ? (* src = "./src/mux2x1.v:64" *) in0[5] : _02_[5];
  assign out[6] = _04_ ? (* src = "./src/mux2x1.v:64" *) in0[6] : _02_[6];
  assign out[7] = _04_ ? (* src = "./src/mux2x1.v:64" *) in0[7] : _02_[7];
  assign out[8] = _04_ ? (* src = "./src/mux2x1.v:64" *) in0[8] : _02_[8];
  assign out[9] = _04_ ? (* src = "./src/mux2x1.v:64" *) in0[9] : _02_[9];
  assign _11_ = ~(* src = "./src/mux2x1.v:48" *) _08_;
  assign _01_ = reset ? (* src = "./src/mux2x1.v:42" *) _13_ : 1'h0;
  assign _12_ = ~(* src = "./src/mux2x1.v:50" *) _10_;
  assign _13_ = _08_ ? (* src = "./src/mux2x1.v:48" *) _12_ : pop_1;
  (* src = "./src/mux2x1.v:40" *)
  DFF _44_ (
    .C(clk),
    .D(_01_),
    .Q(pop_1)
  );
  (* src = "./src/mux2x1.v:40" *)
  DFF _45_ (
    .C(clk),
    .D(_00_),
    .Q(pop_0)
  );
  assign _07_ = fifo_empty0 |(* src = "./src/mux2x1.v:48" *)  fifo_almost_empty0;
  assign _08_ = _07_ |(* src = "./src/mux2x1.v:48" *)  fifo_up0_almostfull;
  assign _09_ = fifo_empty1 |(* src = "./src/mux2x1.v:50" *)  fifo_almost_empty1;
  assign _10_ = _09_ |(* src = "./src/mux2x1.v:50" *)  fifo_up1_almostfull;
endmodule

(* dynports =  1  *)
(* src = "./src/paratoserial_syn.v:13" *)
module \$paramod\paratoserial_syn\DATA_SIZE=8 (in0, in1, clk, fifo_empty0, fifo_empty1, fifo0_almost_empty, fifo1_almost_empty, fifo_up0_almostfull, fifo_up1_almostfull, reset, out0, out1, pop_0, pop_1);
  (* src = "./src/paratoserial_syn.v:68" *)
  wire _0_;
  (* src = "./src/paratoserial_syn.v:68" *)
  wire _1_;
  (* src = "./src/paratoserial_syn.v:75" *)
  wire _2_;
  (* src = "./src/paratoserial_syn.v:75" *)
  wire _3_;
  (* src = "./src/paratoserial_syn.v:17" *)
  input clk;
  (* src = "./src/paratoserial_syn.v:20" *)
  input fifo0_almost_empty;
  (* src = "./src/paratoserial_syn.v:21" *)
  input fifo1_almost_empty;
  (* src = "./src/paratoserial_syn.v:18" *)
  input fifo_empty0;
  (* src = "./src/paratoserial_syn.v:19" *)
  input fifo_empty1;
  (* src = "./src/paratoserial_syn.v:22" *)
  input fifo_up0_almostfull;
  (* src = "./src/paratoserial_syn.v:23" *)
  input fifo_up1_almostfull;
  (* src = "./src/paratoserial_syn.v:15" *)
  input [7:0] in0;
  (* src = "./src/paratoserial_syn.v:16" *)
  input [7:0] in1;
  (* src = "./src/paratoserial_syn.v:26" *)
  output out0;
  (* src = "./src/paratoserial_syn.v:34" *)
  wire out00;
  (* src = "./src/paratoserial_syn.v:27" *)
  output out1;
  (* src = "./src/paratoserial_syn.v:34" *)
  wire out11;
  (* src = "./src/paratoserial_syn.v:28" *)
  output pop_0;
  (* src = "./src/paratoserial_syn.v:29" *)
  output pop_1;
  (* src = "./src/paratoserial_syn.v:24" *)
  input reset;
  (* src = "./src/paratoserial_syn.v:35" *)
  wire valid_0;
  (* src = "./src/paratoserial_syn.v:36" *)
  wire valid_1;
  assign valid_1 = ~(* src = "./src/paratoserial_syn.v:75" *) _3_;
  assign valid_0 = ~(* src = "./src/paratoserial_syn.v:68" *) _1_;
  assign _1_ = _0_ |(* src = "./src/paratoserial_syn.v:68" *)  fifo_up0_almostfull;
  assign _2_ = fifo_empty1 |(* src = "./src/paratoserial_syn.v:75" *)  fifo1_almost_empty;
  assign _3_ = _2_ |(* src = "./src/paratoserial_syn.v:75" *)  fifo_up1_almostfull;
  assign _0_ = fifo_empty0 |(* src = "./src/paratoserial_syn.v:68" *)  fifo0_almost_empty;
  (* module_not_derived = 32'd1 *)
  (* src = "./src/paratoserial_syn.v:38" *)
  paralelo_a_serial_syn ptos1 (
    .clk(clk),
    .in(in0),
    .in_valid(valid_0),
    .out(out00),
    .reset(reset)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "./src/paratoserial_syn.v:50" *)
  paralelo_a_serial_syn ptos2 (
    .clk(clk),
    .in(in1),
    .in_valid(valid_1),
    .out(out11),
    .reset(reset)
  );
  assign out0 = out00;
  assign out1 = out11;
  assign pop_0 = valid_0;
  assign pop_1 = valid_1;
endmodule

(* dynports =  1  *)
(* src = "./src/routing.v:18" *)
module \$paramod\router_syn\DATA_SIZE=10\MAIN_SIZE=8 (out0, out1, Error, pop_0, pop_1, fifo0_route_almost_empty, fifo1_route_almost_empty, fifo_route_empty0, fifo_route_empty1, in0, in1, clk, reset, pop_0_in, pop_1_in, fifo0_almost_empty, fifo1_almost_empty, fifo_empty0, fifo_empty1);
  (* src = "./src/routing.v:29" *)
  output Error;
  (* src = "./src/routing.v:39" *)
  input clk;
  (* src = "./src/routing.v:57" *)
  wire [7:0] data_out_fifo0_to_out;
  (* src = "./src/routing.v:64" *)
  wire [7:0] data_out_fifo1_to_out;
  (* src = "./src/routing.v:43" *)
  input fifo0_almost_empty;
  (* src = "./src/routing.v:32" *)
  output fifo0_route_almost_empty;
  (* src = "./src/routing.v:44" *)
  input fifo1_almost_empty;
  (* src = "./src/routing.v:33" *)
  output fifo1_route_almost_empty;
  (* src = "./src/routing.v:46" *)
  input fifo_empty0;
  (* src = "./src/routing.v:47" *)
  input fifo_empty1;
  (* src = "./src/routing.v:34" *)
  output fifo_route_empty0;
  (* src = "./src/routing.v:35" *)
  output fifo_route_empty1;
  (* src = "./src/routing.v:37" *)
  input [9:0] in0;
  (* src = "./src/routing.v:38" *)
  input [9:0] in1;
  (* src = "./src/routing.v:72" *)
  wire n_pop0;
  (* src = "./src/routing.v:73" *)
  wire n_pop1;
  (* src = "./src/routing.v:27" *)
  output [7:0] out0;
  (* src = "./src/routing.v:55" *)
  wire [7:0] out0_demux;
  (* src = "./src/routing.v:28" *)
  output [7:0] out1;
  (* src = "./src/routing.v:56" *)
  wire [7:0] out1_demux;
  (* src = "./src/routing.v:54" *)
  (* unused_bits = "9" *)
  wire [9:0] out_mux;
  (* src = "./src/routing.v:30" *)
  output pop_0;
  (* src = "./src/routing.v:41" *)
  input pop_0_in;
  (* src = "./src/routing.v:31" *)
  output pop_1;
  (* src = "./src/routing.v:42" *)
  input pop_1_in;
  (* src = "./src/routing.v:74" *)
  wire push_0;
  (* src = "./src/routing.v:75" *)
  wire push_1;
  (* src = "./src/routing.v:40" *)
  input reset;
  (* src = "./src/routing.v:71" *)
  wire valid;
  (* src = "./src/routing.v:59" *)
  wire wire_fifo0_almost_empty;
  (* src = "./src/routing.v:58" *)
  wire wire_fifo0_almost_full;
  (* src = "./src/routing.v:61" *)
  wire wire_fifo0_empty;
  (* src = "./src/routing.v:62" *)
  wire wire_fifo0_error;
  (* src = "./src/routing.v:60" *)
  (* unused_bits = "0" *)
  wire wire_fifo0_full;
  (* src = "./src/routing.v:66" *)
  wire wire_fifo1_almost_empty;
  (* src = "./src/routing.v:65" *)
  wire wire_fifo1_almost_full;
  (* src = "./src/routing.v:68" *)
  wire wire_fifo1_empty;
  (* src = "./src/routing.v:69" *)
  wire wire_fifo1_error;
  (* src = "./src/routing.v:67" *)
  (* unused_bits = "0" *)
  wire wire_fifo1_full;
  assign Error = wire_fifo0_error |(* src = "./src/routing.v:164" *)  wire_fifo1_error;
  (* src = "./src/routing.v:103" *)
  \$paramod\demux12_syn\DATA_SIZE=8  demux1x2_Routering (
    .classif(out_mux[8]),
    .clk(clk),
    .fifo_up0_almostfull(wire_fifo0_almost_full),
    .fifo_up1_almostfull(wire_fifo1_almost_full),
    .in(out_mux[7:0]),
    .out0(out0_demux),
    .out1(out1_demux),
    .push_0(push_0),
    .push_1(push_1),
    .reset(reset),
    .valid(valid)
  );
  (* src = "./src/routing.v:123" *)
  \$paramod\fifo_param_syn\DATA_SIZE=8\MAIN_SIZE=6  fifo6x8_router_syning_0 (
    .Fifo_full(wire_fifo0_full),
    .almost_empty(wire_fifo0_almost_empty),
    .almost_full(wire_fifo0_almost_full),
    .clk(clk),
    .data_in_push(out0_demux),
    .data_out_pop(data_out_fifo0_to_out),
    .fifo_empty(wire_fifo0_empty),
    .fifo_error(wire_fifo0_error),
    .read(pop_0_in),
    .reset(reset),
    .write(push_0)
  );
  (* src = "./src/routing.v:141" *)
  \$paramod\fifo_param_syn\DATA_SIZE=8\MAIN_SIZE=6  fifo6x8_router_syning_1 (
    .Fifo_full(wire_fifo1_full),
    .almost_empty(wire_fifo1_almost_empty),
    .almost_full(wire_fifo1_almost_full),
    .clk(clk),
    .data_in_push(out1_demux),
    .data_out_pop(data_out_fifo1_to_out),
    .fifo_empty(wire_fifo1_empty),
    .fifo_error(wire_fifo1_error),
    .read(pop_1_in),
    .reset(reset),
    .write(push_1)
  );
  (* src = "./src/routing.v:78" *)
  \$paramod\mux21_syn\DATA_SIZE=10  mux21_syn_TB (
    .clk(clk),
    .fifo_almost_empty0(fifo0_almost_empty),
    .fifo_almost_empty1(fifo1_almost_empty),
    .fifo_empty0(fifo_empty0),
    .fifo_empty1(fifo_empty1),
    .fifo_up0_almostfull(wire_fifo0_almost_full),
    .fifo_up1_almostfull(wire_fifo0_almost_full),
    .in0(in0),
    .in1(in1),
    .out(out_mux),
    .pop_0(n_pop0),
    .pop_1(n_pop1),
    .reset(reset),
    .valid(valid)
  );
  assign fifo0_route_almost_empty = wire_fifo0_almost_empty;
  assign fifo1_route_almost_empty = wire_fifo1_almost_empty;
  assign fifo_route_empty0 = wire_fifo0_empty;
  assign fifo_route_empty1 = wire_fifo1_empty;
  assign out0 = data_out_fifo0_to_out;
  assign out1 = data_out_fifo1_to_out;
  assign pop_0 = n_pop0;
  assign pop_1 = n_pop1;
endmodule

(* dynports =  1  *)
(* top =  1  *)
(* src = "./src/disp1.v:26" *)
module device1_syn(out0, out1, Error_class, Error_route, in, valid, clk, clk8f, reset, fifo0_disp2_almostfull, fifo1_disp2_almostfull);
  (* src = "./src/disp1.v:35" *)
  output Error_class;
  (* src = "./src/disp1.v:36" *)
  output Error_route;
  (* src = "./src/disp1.v:40" *)
  input clk;
  (* src = "./src/disp1.v:41" *)
  input clk8f;
  (* src = "./src/disp1.v:54" *)
  wire error_class;
  (* src = "./src/disp1.v:69" *)
  wire error_route;
  (* src = "./src/disp1.v:63" *)
  wire fifo0_almost_empty_route;
  (* src = "./src/disp1.v:45" *)
  input fifo0_disp2_almostfull;
  (* src = "./src/disp1.v:55" *)
  wire fifo0_empty_class;
  (* src = "./src/disp1.v:65" *)
  wire fifo0_empty_route;
  (* src = "./src/disp1.v:64" *)
  wire fifo1_almost_empty_route;
  (* src = "./src/disp1.v:46" *)
  input fifo1_disp2_almostfull;
  (* src = "./src/disp1.v:56" *)
  wire fifo1_empty_class;
  (* src = "./src/disp1.v:66" *)
  wire fifo1_empty_route;
  (* src = "./src/disp1.v:67" *)
  wire fifo_class_almost_empty0;
  (* src = "./src/disp1.v:68" *)
  wire fifo_class_almost_empty1;
  (* src = "./src/disp1.v:38" *)
  input [9:0] in;
  (* src = "./src/disp1.v:57" *)
  wire n_pop0_class;
  (* src = "./src/disp1.v:59" *)
  wire n_pop0_route;
  (* src = "./src/disp1.v:58" *)
  wire n_pop1_class;
  (* src = "./src/disp1.v:60" *)
  wire n_pop1_route;
  (* src = "./src/disp1.v:33" *)
  output out0;
  (* src = "./src/disp1.v:52" *)
  wire [9:0] out0_class;
  (* src = "./src/disp1.v:61" *)
  wire [7:0] out0_route;
  (* src = "./src/disp1.v:70" *)
  wire out0_serial;
  (* src = "./src/disp1.v:34" *)
  output out1;
  (* src = "./src/disp1.v:53" *)
  wire [9:0] out1_class;
  (* src = "./src/disp1.v:62" *)
  wire [7:0] out1_route;
  (* src = "./src/disp1.v:71" *)
  wire out1_serial;
  (* src = "./src/disp1.v:42" *)
  input reset;
  (* src = "./src/disp1.v:39" *)
  input valid;
  (* src = "./src/disp1.v:73" *)
  \$paramod\classswitching_syn\DATA_SIZE=10\MAIN_SIZE=8  classwit (
    .Error(error_class),
    .clk(clk),
    .fifo_class_almost_empty0(fifo_class_almost_empty0),
    .fifo_class_almost_empty1(fifo_class_almost_empty1),
    .fifo_empty0(fifo0_empty_class),
    .fifo_empty1(fifo1_empty_class),
    .in(in),
    .out0(out0_class),
    .out1(out1_class),
    .pop_0(n_pop0_class),
    .pop_1(n_pop1_class),
    .reset(reset),
    .valid(valid)
  );
  (* src = "./src/disp1.v:126" *)
  \$paramod\paratoserial_syn\DATA_SIZE=8  paralleltoSerial (
    .clk(clk8f),
    .fifo0_almost_empty(fifo0_almost_empty_route),
    .fifo1_almost_empty(fifo1_almost_empty_route),
    .fifo_empty0(fifo0_empty_route),
    .fifo_empty1(fifo1_empty_route),
    .fifo_up0_almostfull(fifo0_disp2_almostfull),
    .fifo_up1_almostfull(fifo1_disp2_almostfull),
    .in0(out0_route),
    .in1(out1_route),
    .out0(out0_serial),
    .out1(out1_serial),
    .pop_0(n_pop0_route),
    .pop_1(n_pop1_route),
    .reset(reset)
  );
  (* src = "./src/disp1.v:96" *)
  \$paramod\router_syn\DATA_SIZE=10\MAIN_SIZE=8  route_TB (
    .Error(error_route),
    .clk(clk),
    .fifo0_almost_empty(fifo_class_almost_empty0),
    .fifo0_route_almost_empty(fifo0_almost_empty_route),
    .fifo1_almost_empty(fifo_class_almost_empty1),
    .fifo1_route_almost_empty(fifo1_almost_empty_route),
    .fifo_empty0(fifo0_empty_class),
    .fifo_empty1(fifo1_empty_class),
    .fifo_route_empty0(fifo0_empty_route),
    .fifo_route_empty1(fifo1_empty_route),
    .in0(out0_class),
    .in1(out1_class),
    .out0(out0_route),
    .out1(out1_route),
    .pop_0(n_pop0_class),
    .pop_0_in(n_pop0_route),
    .pop_1(n_pop1_class),
    .pop_1_in(n_pop1_route),
    .reset(reset)
  );
  assign Error_class = error_class;
  assign Error_route = error_route;
  assign out0 = out0_serial;
  assign out1 = out1_serial;
endmodule

(* dynports =  1  *)
(* src = "./src/fifo.v:22" *)
module fifo_param_syn(data_out_pop, almost_full, almost_empty, Fifo_full, fifo_empty, fifo_error, clk, reset, read, write, data_in_push);
  (* src = "./src/fifo.v:110" *)
  wire [9:0] _000_;
  (* src = "./src/fifo.v:110" *)
  wire [9:0] _001_;
  (* src = "./src/fifo.v:110" *)
  wire [7:0] _002_;
  (* src = "./src/fifo.v:110" *)
  wire [7:0] _003_;
  (* src = "./src/fifo.v:63" *)
  wire _004_;
  (* src = "./src/fifo.v:63" *)
  wire _005_;
  (* src = "./src/fifo.v:63" *)
  wire _006_;
  (* src = "./src/fifo.v:63" *)
  wire _007_;
  (* src = "./src/fifo.v:63" *)
  wire _008_;
  (* src = "./src/fifo.v:63" *)
  wire _009_;
  (* src = "./src/fifo.v:63" *)
  wire _010_;
  (* src = "./src/fifo.v:63" *)
  wire _011_;
  (* src = "./src/fifo.v:63" *)
  wire _012_;
  (* src = "./src/fifo.v:63" *)
  wire _013_;
  (* src = "./src/fifo.v:63" *)
  wire _014_;
  (* src = "./src/fifo.v:63" *)
  wire _015_;
  (* src = "./src/fifo.v:63" *)
  wire _016_;
  (* src = "./src/fifo.v:124" *)
  (* unused_bits = "8" *)
  wire [31:0] _017_;
  (* src = "./src/fifo.v:134" *)
  (* unused_bits = "8" *)
  wire [31:0] _018_;
  (* src = "./src/fifo.v:138" *)
  (* unused_bits = "10" *)
  wire [31:0] _019_;
  wire [4:0] _020_;
  wire [1:0] _021_;
  wire _022_;
  wire [4:0] _023_;
  wire [1:0] _024_;
  wire _025_;
  wire [3:0] _026_;
  wire [1:0] _027_;
  wire [3:0] _028_;
  wire [1:0] _029_;
  wire [15:0] _030_;
  wire [7:0] _031_;
  wire [3:0] _032_;
  wire [1:0] _033_;
  wire [15:0] _034_;
  wire [7:0] _035_;
  wire [3:0] _036_;
  wire [1:0] _037_;
  wire _038_;
  wire [9:0] _039_;
  wire [7:0] _040_;
  wire [7:0] _041_;
  wire [1:0] _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  (* src = "./src/fifo.v:78" *)
  wire _047_;
  (* src = "./src/fifo.v:91" *)
  wire _048_;
  (* src = "./src/fifo.v:86" *)
  wire _049_;
  (* src = "./src/fifo.v:82" *)
  wire _050_;
  (* src = "./src/fifo.v:103" *)
  wire _051_;
  (* src = "./src/fifo.v:103" *)
  wire _052_;
  (* src = "./src/fifo.v:127" *)
  wire _053_;
  (* src = "./src/fifo.v:86" *)
  wire _054_;
  (* src = "./src/fifo.v:127" *)
  wire _055_;
  (* src = "./src/fifo.v:86" *)
  wire _056_;
  wire _057_;
  wire [9:0] _058_;
  wire [9:0] _059_;
  wire [9:0] _060_;
  wire [9:0] _061_;
  wire [7:0] _062_;
  wire [7:0] _063_;
  wire [7:0] _064_;
  wire [7:0] _065_;
  (* src = "./src/fifo.v:148" *)
  (* unused_bits = "10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _066_;
  (* src = "./src/fifo.v:124|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "7" *)
  wire [31:0] _067_;
  (* src = "./src/fifo.v:138|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "9" *)
  wire [31:0] _068_;
  (* src = "./src/fifo.v:154|./src/fifo.v:124|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "7" *)
  wire [31:0] _069_;
  (* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "2 4 5 6 8" *)
  wire [31:0] _070_;
  wire [31:0] _071_;
  wire _072_;
  wire _073_;
  (* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "2 4 5 6 8" *)
  wire [31:0] _074_;
  wire [31:0] _075_;
  wire _076_;
  (* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _077_;
  wire [31:0] _078_;
  (* src = "./src/fifo.v:124|<techmap.v>:260|<techmap.v>:222" *)
  wire _079_;
  (* src = "./src/fifo.v:124|<techmap.v>:260|<techmap.v>:222" *)
  wire _080_;
  (* src = "./src/fifo.v:138|<techmap.v>:260|<techmap.v>:222" *)
  wire _081_;
  (* src = "./src/fifo.v:138|<techmap.v>:260|<techmap.v>:222" *)
  wire _082_;
  (* src = "./src/fifo.v:138|<techmap.v>:260|<techmap.v>:222" *)
  wire _083_;
  (* src = "./src/fifo.v:138|<techmap.v>:260|<techmap.v>:222" *)
  wire _084_;
  (* src = "./src/fifo.v:154|./src/fifo.v:124|<techmap.v>:260|<techmap.v>:222" *)
  wire _085_;
  (* src = "./src/fifo.v:154|./src/fifo.v:124|<techmap.v>:260|<techmap.v>:222" *)
  wire _086_;
  (* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:221" *)
  wire _087_;
  (* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:221" *)
  wire _088_;
  (* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:221" *)
  wire _089_;
  (* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:221" *)
  wire _090_;
  (* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:221" *)
  wire _091_;
  (* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:221" *)
  wire _092_;
  (* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:221" *)
  wire _093_;
  (* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:221" *)
  wire _094_;
  (* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:221" *)
  wire _095_;
  (* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:221" *)
  wire _096_;
  (* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:221" *)
  wire _097_;
  (* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:221" *)
  wire _098_;
  (* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:221" *)
  wire _099_;
  (* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:221" *)
  wire _100_;
  (* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:221" *)
  wire _101_;
  (* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:221" *)
  wire _102_;
  (* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:221" *)
  wire _103_;
  (* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:221" *)
  wire _104_;
  (* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:229" *)
  wire _105_;
  (* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:229" *)
  wire _106_;
  (* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:229" *)
  wire _107_;
  (* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:229" *)
  wire _108_;
  (* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:229" *)
  wire _109_;
  (* src = "./src/fifo.v:28" *)
  output Fifo_full;
  (* src = "./src/fifo.v:27" *)
  output almost_empty;
  (* src = "./src/fifo.v:26" *)
  output almost_full;
  (* src = "./src/fifo.v:32" *)
  input clk;
  (* src = "./src/fifo.v:44" *)
  wire [9:0] data_count;
  (* src = "./src/fifo.v:36" *)
  input [9:0] data_in_push;
  (* src = "./src/fifo.v:42" *)
  wire [9:0] data_out;
  (* src = "./src/fifo.v:25" *)
  output [9:0] data_out_pop;
  (* src = "./src/fifo.v:29" *)
  output fifo_empty;
  (* src = "./src/fifo.v:30" *)
  output fifo_error;
  (* src = "./src/fifo.v:45" *)
  wire [7:0] rd_ptr;
  (* src = "./src/fifo.v:34" *)
  input read;
  (* src = "./src/fifo.v:33" *)
  input reset;
  (* src = "./src/fifo.v:46" *)
  wire [7:0] wr_ptr;
  (* src = "./src/fifo.v:35" *)
  input write;
  assign _020_[1] = data_count[2] |(* src = "./src/fifo.v:82" *)  data_count[3];
  assign _021_[0] = _020_[0] |(* src = "./src/fifo.v:82" *)  _020_[1];
  assign _022_ = _021_[0] |(* src = "./src/fifo.v:82" *)  _021_[1];
  assign _020_[0] = data_count[0] |(* src = "./src/fifo.v:95" *)  data_count[1];
  assign _023_[1] = data_count[2] |(* src = "./src/fifo.v:95" *)  _039_[3];
  assign _020_[2] = data_count[4] |(* src = "./src/fifo.v:95" *)  data_count[5];
  assign _020_[3] = data_count[6] |(* src = "./src/fifo.v:95" *)  data_count[7];
  assign _020_[4] = data_count[8] |(* src = "./src/fifo.v:95" *)  data_count[9];
  assign _024_[0] = _020_[0] |(* src = "./src/fifo.v:95" *)  _023_[1];
  assign _021_[1] = _020_[2] |(* src = "./src/fifo.v:95" *)  _020_[3];
  assign _025_ = _024_[0] |(* src = "./src/fifo.v:95" *)  _021_[1];
  assign _043_ = _025_ |(* src = "./src/fifo.v:95" *)  _020_[4];
  assign _026_[0] = _017_[0] |(* src = "./src/fifo.v:120" *)  _040_[1];
  assign _026_[1] = _040_[2] |(* src = "./src/fifo.v:120" *)  wr_ptr[3];
  assign _026_[2] = wr_ptr[4] |(* src = "./src/fifo.v:120" *)  wr_ptr[5];
  assign _026_[3] = wr_ptr[6] |(* src = "./src/fifo.v:120" *)  wr_ptr[7];
  assign _027_[0] = _026_[0] |(* src = "./src/fifo.v:120" *)  _026_[1];
  assign _027_[1] = _026_[2] |(* src = "./src/fifo.v:120" *)  _026_[3];
  assign _044_ = _027_[0] |(* src = "./src/fifo.v:120" *)  _027_[1];
  assign _028_[0] = _018_[0] |(* src = "./src/fifo.v:151" *)  _041_[1];
  assign _028_[1] = _041_[2] |(* src = "./src/fifo.v:151" *)  rd_ptr[3];
  assign _028_[2] = rd_ptr[4] |(* src = "./src/fifo.v:151" *)  rd_ptr[5];
  assign _028_[3] = rd_ptr[6] |(* src = "./src/fifo.v:151" *)  rd_ptr[7];
  assign _029_[0] = _028_[0] |(* src = "./src/fifo.v:151" *)  _028_[1];
  assign _029_[1] = _028_[2] |(* src = "./src/fifo.v:151" *)  _028_[3];
  assign _045_ = _029_[0] |(* src = "./src/fifo.v:151" *)  _029_[1];
  assign _046_ = Fifo_full |(* src = "./src/fifo.v:119|./src/fifo.v:118" *)  _042_[1];
  assign _031_[0] = _030_[0] &(* src = "./src/fifo.v:86" *)  _030_[1];
  assign _032_[0] = _031_[0] &(* src = "./src/fifo.v:86" *)  _031_[1];
  assign _033_[0] = _032_[0] &(* src = "./src/fifo.v:86" *)  _030_[4];
  assign _030_[0] = _019_[0] &(* src = "./src/fifo.v:91" *)  data_count[1];
  assign _035_[0] = _030_[0] &(* src = "./src/fifo.v:91" *)  _034_[1];
  assign _036_[0] = _035_[0] &(* src = "./src/fifo.v:91" *)  _031_[1];
  assign _037_[0] = _036_[0] &(* src = "./src/fifo.v:91" *)  _030_[4];
  assign _048_ = _072_ | _037_[0];
  assign _038_ = _022_ |(* src = "./src/fifo.v:78" *)  _020_[4];
  assign _047_ = ~(* src = "./src/fifo.v:78" *) _038_;
  assign _016_ = ~(* src = "./src/fifo.v:95" *) _043_;
  assign _055_ = ~(* src = "./src/fifo.v:147" *) fifo_empty;
  assign _010_ = _050_ &(* src = "./src/fifo.v:82" *)  _038_;
  assign _054_ = _049_ &(* src = "./src/fifo.v:86" *)  _056_;
  assign _015_ = _048_ &(* src = "./src/fifo.v:91" *)  _043_;
  assign _051_ = write &(* src = "./src/fifo.v:103" *)  _004_;
  assign _052_ = read &(* src = "./src/fifo.v:103" *)  _007_;
  assign _053_ = read &(* src = "./src/fifo.v:147" *)  _055_;
  assign _058_[0] = _053_ ? (* src = "./src/fifo.v:127" *) data_out[0] : data_out_pop[0];
  assign _058_[1] = _053_ ? (* src = "./src/fifo.v:127" *) data_out[1] : data_out_pop[1];
  assign _058_[2] = _053_ ? (* src = "./src/fifo.v:127" *) data_out[2] : data_out_pop[2];
  assign _058_[3] = _053_ ? (* src = "./src/fifo.v:127" *) data_out[3] : data_out_pop[3];
  assign _058_[4] = _053_ ? (* src = "./src/fifo.v:127" *) data_out[4] : data_out_pop[4];
  assign _058_[5] = _053_ ? (* src = "./src/fifo.v:127" *) data_out[5] : data_out_pop[5];
  assign _058_[6] = _053_ ? (* src = "./src/fifo.v:127" *) data_out[6] : data_out_pop[6];
  assign _058_[7] = _053_ ? (* src = "./src/fifo.v:127" *) data_out[7] : data_out_pop[7];
  assign _058_[8] = _053_ ? (* src = "./src/fifo.v:127" *) data_out[8] : data_out_pop[8];
  assign _058_[9] = _053_ ? (* src = "./src/fifo.v:127" *) data_out[9] : data_out_pop[9];
  assign _001_[0] = reset ? (* src = "./src/fifo.v:111" *) _058_[0] : 1'h0;
  assign _001_[1] = reset ? (* src = "./src/fifo.v:111" *) _058_[1] : 1'h0;
  assign _001_[2] = reset ? (* src = "./src/fifo.v:111" *) _058_[2] : 1'h0;
  assign _001_[3] = reset ? (* src = "./src/fifo.v:111" *) _058_[3] : 1'h0;
  assign _001_[4] = reset ? (* src = "./src/fifo.v:111" *) _058_[4] : 1'h0;
  assign _001_[5] = reset ? (* src = "./src/fifo.v:111" *) _058_[5] : 1'h0;
  assign _001_[6] = reset ? (* src = "./src/fifo.v:111" *) _058_[6] : 1'h0;
  assign _001_[7] = reset ? (* src = "./src/fifo.v:111" *) _058_[7] : 1'h0;
  assign _001_[8] = reset ? (* src = "./src/fifo.v:111" *) _058_[8] : 1'h0;
  assign _001_[9] = reset ? (* src = "./src/fifo.v:111" *) _058_[9] : 1'h0;
  assign _059_[0] = _053_ ? (* src = "./src/fifo.v:147" *) _019_[0] : data_count[0];
  assign _059_[1] = _053_ ? (* src = "./src/fifo.v:147" *) _066_[1] : data_count[1];
  assign _059_[2] = _053_ ? (* src = "./src/fifo.v:147" *) _066_[2] : data_count[2];
  assign _059_[3] = _053_ ? (* src = "./src/fifo.v:147" *) _066_[3] : data_count[3];
  assign _059_[4] = _053_ ? (* src = "./src/fifo.v:147" *) _066_[4] : data_count[4];
  assign _059_[5] = _053_ ? (* src = "./src/fifo.v:147" *) _066_[5] : data_count[5];
  assign _059_[6] = _053_ ? (* src = "./src/fifo.v:147" *) _066_[6] : data_count[6];
  assign _059_[7] = _053_ ? (* src = "./src/fifo.v:147" *) _066_[7] : data_count[7];
  assign _059_[8] = _053_ ? (* src = "./src/fifo.v:147" *) _066_[8] : data_count[8];
  assign _059_[9] = _053_ ? (* src = "./src/fifo.v:147" *) _066_[9] : data_count[9];
  assign _060_[0] = _053_ ? (* src = "./src/fifo.v:127" *) data_count[0] : _019_[0];
  assign _060_[1] = _053_ ? (* src = "./src/fifo.v:127" *) data_count[1] : _019_[1];
  assign _060_[2] = _053_ ? (* src = "./src/fifo.v:127" *) data_count[2] : _019_[2];
  assign _060_[3] = _053_ ? (* src = "./src/fifo.v:127" *) data_count[3] : _019_[3];
  assign _060_[4] = _053_ ? (* src = "./src/fifo.v:127" *) data_count[4] : _019_[4];
  assign _060_[5] = _053_ ? (* src = "./src/fifo.v:127" *) data_count[5] : _019_[5];
  assign _060_[6] = _053_ ? (* src = "./src/fifo.v:127" *) data_count[6] : _019_[6];
  assign _060_[7] = _053_ ? (* src = "./src/fifo.v:127" *) data_count[7] : _019_[7];
  assign _060_[8] = _053_ ? (* src = "./src/fifo.v:127" *) data_count[8] : _019_[8];
  assign _060_[9] = _053_ ? (* src = "./src/fifo.v:127" *) data_count[9] : _019_[9];
  assign _061_[0] = _046_ ? (* src = "./src/fifo.v:119|./src/fifo.v:118" *) _059_[0] : _060_[0];
  assign _061_[1] = _046_ ? (* src = "./src/fifo.v:119|./src/fifo.v:118" *) _059_[1] : _060_[1];
  assign _061_[2] = _046_ ? (* src = "./src/fifo.v:119|./src/fifo.v:118" *) _059_[2] : _060_[2];
  assign _061_[3] = _046_ ? (* src = "./src/fifo.v:119|./src/fifo.v:118" *) _059_[3] : _060_[3];
  assign _061_[4] = _046_ ? (* src = "./src/fifo.v:119|./src/fifo.v:118" *) _059_[4] : _060_[4];
  assign _061_[5] = _046_ ? (* src = "./src/fifo.v:119|./src/fifo.v:118" *) _059_[5] : _060_[5];
  assign _061_[6] = _046_ ? (* src = "./src/fifo.v:119|./src/fifo.v:118" *) _059_[6] : _060_[6];
  assign _061_[7] = _046_ ? (* src = "./src/fifo.v:119|./src/fifo.v:118" *) _059_[7] : _060_[7];
  assign _061_[8] = _046_ ? (* src = "./src/fifo.v:119|./src/fifo.v:118" *) _059_[8] : _060_[8];
  assign _061_[9] = _046_ ? (* src = "./src/fifo.v:119|./src/fifo.v:118" *) _059_[9] : _060_[9];
  assign _000_[0] = reset ? (* src = "./src/fifo.v:111" *) _061_[0] : 1'h0;
  assign _000_[1] = reset ? (* src = "./src/fifo.v:111" *) _061_[1] : 1'h0;
  assign _000_[2] = reset ? (* src = "./src/fifo.v:111" *) _061_[2] : 1'h0;
  assign _000_[3] = reset ? (* src = "./src/fifo.v:111" *) _061_[3] : 1'h0;
  assign _000_[4] = reset ? (* src = "./src/fifo.v:111" *) _061_[4] : 1'h0;
  assign _000_[5] = reset ? (* src = "./src/fifo.v:111" *) _061_[5] : 1'h0;
  assign _000_[6] = reset ? (* src = "./src/fifo.v:111" *) _061_[6] : 1'h0;
  assign _000_[7] = reset ? (* src = "./src/fifo.v:111" *) _061_[7] : 1'h0;
  assign _000_[8] = reset ? (* src = "./src/fifo.v:111" *) _061_[8] : 1'h0;
  assign _000_[9] = reset ? (* src = "./src/fifo.v:111" *) _061_[9] : 1'h0;
  assign _062_[0] = _045_ ? (* src = "./src/fifo.v:131" *) _018_[0] : 1'h0;
  assign _062_[1] = _045_ ? (* src = "./src/fifo.v:131" *) _018_[1] : 1'h0;
  assign _062_[2] = _045_ ? (* src = "./src/fifo.v:131" *) _018_[2] : 1'h0;
  assign _062_[3] = _045_ ? (* src = "./src/fifo.v:131" *) _018_[3] : 1'h0;
  assign _062_[4] = _045_ ? (* src = "./src/fifo.v:131" *) _018_[4] : 1'h0;
  assign _062_[5] = _045_ ? (* src = "./src/fifo.v:131" *) _018_[5] : 1'h0;
  assign _062_[6] = _045_ ? (* src = "./src/fifo.v:131" *) _018_[6] : 1'h0;
  assign _062_[7] = _045_ ? (* src = "./src/fifo.v:131" *) _018_[7] : 1'h0;
  assign _063_[0] = _053_ ? (* src = "./src/fifo.v:127" *) _062_[0] : rd_ptr[0];
  assign _063_[1] = _053_ ? (* src = "./src/fifo.v:127" *) _062_[1] : rd_ptr[1];
  assign _063_[2] = _053_ ? (* src = "./src/fifo.v:127" *) _062_[2] : rd_ptr[2];
  assign _063_[3] = _053_ ? (* src = "./src/fifo.v:127" *) _062_[3] : rd_ptr[3];
  assign _063_[4] = _053_ ? (* src = "./src/fifo.v:127" *) _062_[4] : rd_ptr[4];
  assign _063_[5] = _053_ ? (* src = "./src/fifo.v:127" *) _062_[5] : rd_ptr[5];
  assign _063_[6] = _053_ ? (* src = "./src/fifo.v:127" *) _062_[6] : rd_ptr[6];
  assign _063_[7] = _053_ ? (* src = "./src/fifo.v:127" *) _062_[7] : rd_ptr[7];
  assign _002_[0] = reset ? (* src = "./src/fifo.v:111" *) _063_[0] : 1'h0;
  assign _002_[1] = reset ? (* src = "./src/fifo.v:111" *) _063_[1] : 1'h0;
  assign _002_[2] = reset ? (* src = "./src/fifo.v:111" *) _063_[2] : 1'h0;
  assign _002_[3] = reset ? (* src = "./src/fifo.v:111" *) _063_[3] : 1'h0;
  assign _002_[4] = reset ? (* src = "./src/fifo.v:111" *) _063_[4] : 1'h0;
  assign _002_[5] = reset ? (* src = "./src/fifo.v:111" *) _063_[5] : 1'h0;
  assign _002_[6] = reset ? (* src = "./src/fifo.v:111" *) _063_[6] : 1'h0;
  assign _002_[7] = reset ? (* src = "./src/fifo.v:111" *) _063_[7] : 1'h0;
  assign _064_[0] = _044_ ? (* src = "./src/fifo.v:120" *) _017_[0] : 1'h0;
  assign _064_[1] = _044_ ? (* src = "./src/fifo.v:120" *) _017_[1] : 1'h0;
  assign _064_[2] = _044_ ? (* src = "./src/fifo.v:120" *) _017_[2] : 1'h0;
  assign _064_[3] = _044_ ? (* src = "./src/fifo.v:120" *) _017_[3] : 1'h0;
  assign _064_[4] = _044_ ? (* src = "./src/fifo.v:120" *) _017_[4] : 1'h0;
  assign _064_[5] = _044_ ? (* src = "./src/fifo.v:120" *) _017_[5] : 1'h0;
  assign _064_[6] = _044_ ? (* src = "./src/fifo.v:120" *) _017_[6] : 1'h0;
  assign _064_[7] = _044_ ? (* src = "./src/fifo.v:120" *) _017_[7] : 1'h0;
  assign _065_[0] = _046_ ? (* src = "./src/fifo.v:119|./src/fifo.v:118" *) wr_ptr[0] : _064_[0];
  assign _065_[1] = _046_ ? (* src = "./src/fifo.v:119|./src/fifo.v:118" *) wr_ptr[1] : _064_[1];
  assign _065_[2] = _046_ ? (* src = "./src/fifo.v:119|./src/fifo.v:118" *) wr_ptr[2] : _064_[2];
  assign _065_[3] = _046_ ? (* src = "./src/fifo.v:119|./src/fifo.v:118" *) wr_ptr[3] : _064_[3];
  assign _065_[4] = _046_ ? (* src = "./src/fifo.v:119|./src/fifo.v:118" *) wr_ptr[4] : _064_[4];
  assign _065_[5] = _046_ ? (* src = "./src/fifo.v:119|./src/fifo.v:118" *) wr_ptr[5] : _064_[5];
  assign _065_[6] = _046_ ? (* src = "./src/fifo.v:119|./src/fifo.v:118" *) wr_ptr[6] : _064_[6];
  assign _065_[7] = _046_ ? (* src = "./src/fifo.v:119|./src/fifo.v:118" *) wr_ptr[7] : _064_[7];
  assign _003_[0] = reset ? (* src = "./src/fifo.v:111" *) _065_[0] : 1'h0;
  assign _003_[1] = reset ? (* src = "./src/fifo.v:111" *) _065_[1] : 1'h0;
  assign _003_[2] = reset ? (* src = "./src/fifo.v:111" *) _065_[2] : 1'h0;
  assign _003_[3] = reset ? (* src = "./src/fifo.v:111" *) _065_[3] : 1'h0;
  assign _003_[4] = reset ? (* src = "./src/fifo.v:111" *) _065_[4] : 1'h0;
  assign _003_[5] = reset ? (* src = "./src/fifo.v:111" *) _065_[5] : 1'h0;
  assign _003_[6] = reset ? (* src = "./src/fifo.v:111" *) _065_[6] : 1'h0;
  assign _003_[7] = reset ? (* src = "./src/fifo.v:111" *) _065_[7] : 1'h0;
  assign _014_ = _015_ ? (* src = "./src/fifo.v:91" *) 1'h0 : _016_;
  assign _013_ = _054_ ? (* src = "./src/fifo.v:86" *) 1'h0 : _015_;
  assign _012_ = _054_ ? (* src = "./src/fifo.v:86" *) 1'h0 : _014_;
  assign _009_ = _010_ ? (* src = "./src/fifo.v:82" *) 1'h0 : _012_;
  assign _011_ = _010_ ? (* src = "./src/fifo.v:82" *) 1'h0 : _013_;
  assign _057_ = _038_ ? (* src = "./src/fifo.v:78" *) _009_ : 1'h0;
  assign _007_ = reset ? (* src = "./src/fifo.v:69" *) _047_ : 1'hx;
  assign _004_ = reset ? (* src = "./src/fifo.v:69" *) _057_ : 1'hx;
  assign _006_ = _038_ ? (* src = "./src/fifo.v:78" *) _011_ : 1'h0;
  assign _005_ = _038_ ? (* src = "./src/fifo.v:78" *) _010_ : 1'h0;
  assign almost_full = reset ? (* src = "./src/fifo.v:69" *) _006_ : 1'h0;
  assign fifo_error = reset ? (* src = "./src/fifo.v:69" *) _008_ : 1'h0;
  assign almost_empty = reset ? (* src = "./src/fifo.v:69" *) _005_ : 1'h0;
  assign Fifo_full = reset ? (* src = "./src/fifo.v:69" *) _004_ : 1'h0;
  assign fifo_empty = reset ? (* src = "./src/fifo.v:69" *) _007_ : 1'h1;
  assign _049_ = ~(* src = "./src/fifo.v:86" *) _050_;
  assign _076_ = ~(* src = "./src/fifo.v:86" *) _074_[31];
  assign _072_ = ~(* src = "./src/fifo.v:91" *) _073_;
  assign _056_ = ~(* src = "./src/fifo.v:91" *) _070_[31];
  (* src = "./src/fifo.v:110" *)
  DFF _282_ (
    .C(clk),
    .D(_003_[0]),
    .Q(wr_ptr[0])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _283_ (
    .C(clk),
    .D(_003_[1]),
    .Q(wr_ptr[1])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _284_ (
    .C(clk),
    .D(_003_[2]),
    .Q(wr_ptr[2])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _285_ (
    .C(clk),
    .D(_003_[3]),
    .Q(wr_ptr[3])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _286_ (
    .C(clk),
    .D(_003_[4]),
    .Q(wr_ptr[4])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _287_ (
    .C(clk),
    .D(_003_[5]),
    .Q(wr_ptr[5])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _288_ (
    .C(clk),
    .D(_003_[6]),
    .Q(wr_ptr[6])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _289_ (
    .C(clk),
    .D(_003_[7]),
    .Q(wr_ptr[7])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _290_ (
    .C(clk),
    .D(_002_[0]),
    .Q(rd_ptr[0])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _291_ (
    .C(clk),
    .D(_002_[1]),
    .Q(rd_ptr[1])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _292_ (
    .C(clk),
    .D(_002_[2]),
    .Q(rd_ptr[2])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _293_ (
    .C(clk),
    .D(_002_[3]),
    .Q(rd_ptr[3])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _294_ (
    .C(clk),
    .D(_002_[4]),
    .Q(rd_ptr[4])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _295_ (
    .C(clk),
    .D(_002_[5]),
    .Q(rd_ptr[5])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _296_ (
    .C(clk),
    .D(_002_[6]),
    .Q(rd_ptr[6])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _297_ (
    .C(clk),
    .D(_002_[7]),
    .Q(rd_ptr[7])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _298_ (
    .C(clk),
    .D(_000_[0]),
    .Q(data_count[0])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _299_ (
    .C(clk),
    .D(_000_[1]),
    .Q(data_count[1])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _300_ (
    .C(clk),
    .D(_000_[2]),
    .Q(data_count[2])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _301_ (
    .C(clk),
    .D(_000_[3]),
    .Q(data_count[3])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _302_ (
    .C(clk),
    .D(_000_[4]),
    .Q(data_count[4])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _303_ (
    .C(clk),
    .D(_000_[5]),
    .Q(data_count[5])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _304_ (
    .C(clk),
    .D(_000_[6]),
    .Q(data_count[6])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _305_ (
    .C(clk),
    .D(_000_[7]),
    .Q(data_count[7])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _306_ (
    .C(clk),
    .D(_000_[8]),
    .Q(data_count[8])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _307_ (
    .C(clk),
    .D(_000_[9]),
    .Q(data_count[9])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _308_ (
    .C(clk),
    .D(_001_[0]),
    .Q(data_out_pop[0])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _309_ (
    .C(clk),
    .D(_001_[1]),
    .Q(data_out_pop[1])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _310_ (
    .C(clk),
    .D(_001_[2]),
    .Q(data_out_pop[2])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _311_ (
    .C(clk),
    .D(_001_[3]),
    .Q(data_out_pop[3])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _312_ (
    .C(clk),
    .D(_001_[4]),
    .Q(data_out_pop[4])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _313_ (
    .C(clk),
    .D(_001_[5]),
    .Q(data_out_pop[5])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _314_ (
    .C(clk),
    .D(_001_[6]),
    .Q(data_out_pop[6])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _315_ (
    .C(clk),
    .D(_001_[7]),
    .Q(data_out_pop[7])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _316_ (
    .C(clk),
    .D(_001_[8]),
    .Q(data_out_pop[8])
  );
  (* src = "./src/fifo.v:110" *)
  DFF _317_ (
    .C(clk),
    .D(_001_[9]),
    .Q(data_out_pop[9])
  );
  assign _008_ = _051_ |(* src = "./src/fifo.v:103" *)  _052_;
  assign _040_[1] = wr_ptr[1] ^(* src = "./src/fifo.v:120" *)  1'h1;
  assign _040_[2] = wr_ptr[2] ^(* src = "./src/fifo.v:120" *)  1'h1;
  assign _041_[1] = rd_ptr[1] ^(* src = "./src/fifo.v:151" *)  1'h1;
  assign _041_[2] = rd_ptr[2] ^(* src = "./src/fifo.v:151" *)  1'h1;
  assign _042_[1] = write ^(* src = "./src/fifo.v:119|./src/fifo.v:118" *)  1'h1;
  assign _050_ = _076_ | _033_[0];
  assign _073_ = _056_ | _037_[0];
  assign _075_[2] = data_count[2] ^(* src = "./src/fifo.v:82|<techmap.v>:262" *)  1'h1;
  assign _039_[3] = data_count[3] ^(* src = "./src/fifo.v:82|<techmap.v>:262" *)  1'h1;
  assign _071_[4] = data_count[4] ^(* src = "./src/fifo.v:82|<techmap.v>:262" *)  1'h1;
  assign _071_[5] = data_count[5] ^(* src = "./src/fifo.v:82|<techmap.v>:262" *)  1'h1;
  assign _071_[7] = data_count[7] ^(* src = "./src/fifo.v:82|<techmap.v>:262" *)  1'h1;
  assign _071_[8] = data_count[8] ^(* src = "./src/fifo.v:82|<techmap.v>:262" *)  1'h1;
  assign _071_[9] = data_count[9] ^(* src = "./src/fifo.v:82|<techmap.v>:262" *)  1'h1;
  assign _071_[6] = data_count[6] ^(* src = "./src/fifo.v:91|<techmap.v>:262" *)  1'h1;
  assign _017_[1] = wr_ptr[1] ^(* src = "./src/fifo.v:124|<techmap.v>:263" *)  wr_ptr[0];
  assign _017_[2] = wr_ptr[2] ^(* src = "./src/fifo.v:124|<techmap.v>:263" *)  _067_[1];
  assign _017_[3] = wr_ptr[3] ^(* src = "./src/fifo.v:124|<techmap.v>:263" *)  _067_[2];
  assign _017_[4] = wr_ptr[4] ^(* src = "./src/fifo.v:124|<techmap.v>:263" *)  _067_[3];
  assign _017_[5] = wr_ptr[5] ^(* src = "./src/fifo.v:124|<techmap.v>:263" *)  _067_[4];
  assign _017_[6] = wr_ptr[6] ^(* src = "./src/fifo.v:124|<techmap.v>:263" *)  _067_[5];
  assign _017_[7] = wr_ptr[7] ^(* src = "./src/fifo.v:124|<techmap.v>:263" *)  _067_[6];
  assign _017_[0] = wr_ptr[0] ^(* src = "./src/fifo.v:124|<techmap.v>:262" *)  1'h1;
  assign _019_[1] = data_count[1] ^(* src = "./src/fifo.v:138|<techmap.v>:263" *)  data_count[0];
  assign _019_[2] = data_count[2] ^(* src = "./src/fifo.v:138|<techmap.v>:263" *)  _068_[1];
  assign _019_[3] = data_count[3] ^(* src = "./src/fifo.v:138|<techmap.v>:263" *)  _068_[2];
  assign _019_[4] = data_count[4] ^(* src = "./src/fifo.v:138|<techmap.v>:263" *)  _068_[3];
  assign _019_[5] = data_count[5] ^(* src = "./src/fifo.v:138|<techmap.v>:263" *)  _068_[4];
  assign _019_[6] = data_count[6] ^(* src = "./src/fifo.v:138|<techmap.v>:263" *)  _068_[5];
  assign _019_[7] = data_count[7] ^(* src = "./src/fifo.v:138|<techmap.v>:263" *)  _068_[6];
  assign _019_[8] = data_count[8] ^(* src = "./src/fifo.v:138|<techmap.v>:263" *)  _068_[7];
  assign _019_[9] = data_count[9] ^(* src = "./src/fifo.v:138|<techmap.v>:263" *)  _068_[8];
  assign _019_[0] = data_count[0] ^(* src = "./src/fifo.v:148|<techmap.v>:263" *)  1'h1;
  assign _066_[1] = _078_[1] ^(* src = "./src/fifo.v:148|<techmap.v>:263" *)  data_count[0];
  assign _066_[2] = _075_[2] ^(* src = "./src/fifo.v:148|<techmap.v>:263" *)  _077_[1];
  assign _066_[3] = _039_[3] ^(* src = "./src/fifo.v:148|<techmap.v>:263" *)  _077_[2];
  assign _066_[4] = _071_[4] ^(* src = "./src/fifo.v:148|<techmap.v>:263" *)  _077_[3];
  assign _066_[5] = _071_[5] ^(* src = "./src/fifo.v:148|<techmap.v>:263" *)  _077_[4];
  assign _066_[6] = _071_[6] ^(* src = "./src/fifo.v:148|<techmap.v>:263" *)  _077_[5];
  assign _066_[7] = _071_[7] ^(* src = "./src/fifo.v:148|<techmap.v>:263" *)  _077_[6];
  assign _066_[8] = _071_[8] ^(* src = "./src/fifo.v:148|<techmap.v>:263" *)  _077_[7];
  assign _066_[9] = _071_[9] ^(* src = "./src/fifo.v:148|<techmap.v>:263" *)  _077_[8];
  assign _078_[1] = data_count[1] ^(* src = "./src/fifo.v:148|<techmap.v>:262" *)  1'h1;
  assign _018_[1] = rd_ptr[1] ^(* src = "./src/fifo.v:154|./src/fifo.v:124|<techmap.v>:263" *)  rd_ptr[0];
  assign _018_[2] = rd_ptr[2] ^(* src = "./src/fifo.v:154|./src/fifo.v:124|<techmap.v>:263" *)  _069_[1];
  assign _018_[3] = rd_ptr[3] ^(* src = "./src/fifo.v:154|./src/fifo.v:124|<techmap.v>:263" *)  _069_[2];
  assign _018_[4] = rd_ptr[4] ^(* src = "./src/fifo.v:154|./src/fifo.v:124|<techmap.v>:263" *)  _069_[3];
  assign _018_[5] = rd_ptr[5] ^(* src = "./src/fifo.v:154|./src/fifo.v:124|<techmap.v>:263" *)  _069_[4];
  assign _018_[6] = rd_ptr[6] ^(* src = "./src/fifo.v:154|./src/fifo.v:124|<techmap.v>:263" *)  _069_[5];
  assign _018_[7] = rd_ptr[7] ^(* src = "./src/fifo.v:154|./src/fifo.v:124|<techmap.v>:263" *)  _069_[6];
  assign _018_[0] = rd_ptr[0] ^(* src = "./src/fifo.v:154|./src/fifo.v:124|<techmap.v>:262" *)  1'h1;
  assign _087_ = _071_[5] &(* src = "./src/fifo.v:82|<techmap.v>:260|<techmap.v>:221" *)  data_count[4];
  assign _098_ = _030_[1] &(* src = "./src/fifo.v:82|<techmap.v>:260|<techmap.v>:221" *)  _070_[1];
  assign _100_ = _030_[4] &(* src = "./src/fifo.v:82|<techmap.v>:260|<techmap.v>:221" *)  _074_[7];
  assign _030_[2] = _071_[5] &(* src = "./src/fifo.v:82|<techmap.v>:260|<techmap.v>:222" *)  _071_[4];
  assign _092_ = data_count[9] |(* src = "./src/fifo.v:82|<techmap.v>:260|<techmap.v>:221" *)  _089_;
  assign _097_ = _096_ |(* src = "./src/fifo.v:82|<techmap.v>:260|<techmap.v>:221" *)  _091_;
  assign _070_[1] = data_count[1] &(* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:221" *)  _070_[0];
  assign _088_ = _071_[7] &(* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:221" *)  data_count[6];
  assign _089_ = _071_[9] &(* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:221" *)  data_count[8];
  assign _091_ = _030_[3] &(* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:221" *)  _095_;
  assign _099_ = _031_[1] &(* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:221" *)  _074_[3];
  assign _030_[4] = _071_[9] &(* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:222" *)  _071_[8];
  assign _031_[1] = _030_[3] &(* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:222" *)  _030_[2];
  assign _074_[3] = _101_ |(* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:221" *)  _098_;
  assign _074_[7] = _097_ |(* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:221" *)  _099_;
  assign _074_[31] = _092_ |(* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:221" *)  _100_;
  assign _090_ = _034_[1] &(* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:221" *)  _070_[1];
  assign _034_[1] = _039_[3] &(* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:222" *)  data_count[2];
  assign _030_[3] = _071_[7] &(* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:222" *)  _071_[6];
  assign _070_[0] = data_count[0] |(* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:212" *)  _019_[0];
  assign _096_ = data_count[7] |(* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:221" *)  _088_;
  assign _070_[3] = data_count[3] |(* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:221" *)  _090_;
  assign _070_[31] = _092_ |(* src = "./src/fifo.v:86|<techmap.v>:260|<techmap.v>:229" *)  _094_;
  assign _093_ = _031_[1] &(* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:221" *)  _070_[3];
  assign _094_ = _030_[4] &(* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:229" *)  _070_[7];
  assign _070_[7] = _097_ |(* src = "./src/fifo.v:91|<techmap.v>:260|<techmap.v>:221" *)  _093_;
  assign _067_[1] = wr_ptr[1] &(* src = "./src/fifo.v:124|<techmap.v>:260|<techmap.v>:221" *)  wr_ptr[0];
  assign _067_[3] = _079_ &(* src = "./src/fifo.v:124|<techmap.v>:260|<techmap.v>:221" *)  _067_[1];
  assign _079_ = wr_ptr[3] &(* src = "./src/fifo.v:124|<techmap.v>:260|<techmap.v>:222" *)  wr_ptr[2];
  assign _080_ = wr_ptr[5] &(* src = "./src/fifo.v:124|<techmap.v>:260|<techmap.v>:222" *)  wr_ptr[4];
  assign _067_[5] = _080_ &(* src = "./src/fifo.v:124|<techmap.v>:260|<techmap.v>:229" *)  _067_[3];
  assign _067_[2] = wr_ptr[2] &(* src = "./src/fifo.v:124|<techmap.v>:260|<techmap.v>:229" *)  _067_[1];
  assign _067_[4] = wr_ptr[4] &(* src = "./src/fifo.v:124|<techmap.v>:260|<techmap.v>:229" *)  _067_[3];
  assign _067_[6] = wr_ptr[6] &(* src = "./src/fifo.v:124|<techmap.v>:260|<techmap.v>:229" *)  _067_[5];
  assign _068_[1] = data_count[1] &(* src = "./src/fifo.v:138|<techmap.v>:260|<techmap.v>:221" *)  data_count[0];
  assign _068_[3] = _081_ &(* src = "./src/fifo.v:138|<techmap.v>:260|<techmap.v>:221" *)  _068_[1];
  assign _068_[7] = _084_ &(* src = "./src/fifo.v:138|<techmap.v>:260|<techmap.v>:221" *)  _068_[3];
  assign _081_ = data_count[3] &(* src = "./src/fifo.v:138|<techmap.v>:260|<techmap.v>:222" *)  data_count[2];
  assign _082_ = data_count[5] &(* src = "./src/fifo.v:138|<techmap.v>:260|<techmap.v>:222" *)  data_count[4];
  assign _083_ = data_count[7] &(* src = "./src/fifo.v:138|<techmap.v>:260|<techmap.v>:222" *)  data_count[6];
  assign _084_ = _083_ &(* src = "./src/fifo.v:138|<techmap.v>:260|<techmap.v>:222" *)  _082_;
  assign _068_[5] = _082_ &(* src = "./src/fifo.v:138|<techmap.v>:260|<techmap.v>:229" *)  _068_[3];
  assign _068_[2] = data_count[2] &(* src = "./src/fifo.v:138|<techmap.v>:260|<techmap.v>:229" *)  _068_[1];
  assign _068_[4] = data_count[4] &(* src = "./src/fifo.v:138|<techmap.v>:260|<techmap.v>:229" *)  _068_[3];
  assign _068_[6] = data_count[6] &(* src = "./src/fifo.v:138|<techmap.v>:260|<techmap.v>:229" *)  _068_[5];
  assign _068_[8] = data_count[8] &(* src = "./src/fifo.v:138|<techmap.v>:260|<techmap.v>:229" *)  _068_[7];
  assign _102_ = _078_[1] &(* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:221" *)  data_count[0];
  assign _103_ = _030_[1] &(* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:221" *)  _077_[1];
  assign _104_ = _031_[1] &(* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:221" *)  _077_[3];
  assign _030_[1] = _039_[3] &(* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:222" *)  _075_[2];
  assign _105_ = _030_[2] &(* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:229" *)  _077_[3];
  assign _106_ = _075_[2] &(* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:229" *)  _077_[1];
  assign _107_ = _071_[4] &(* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:229" *)  _077_[3];
  assign _108_ = _071_[6] &(* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:229" *)  _077_[5];
  assign _109_ = _071_[8] &(* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:229" *)  _077_[7];
  assign _077_[1] = data_count[1] |(* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:221" *)  _102_;
  assign _101_ = data_count[3] |(* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:221" *)  _034_[1];
  assign _095_ = data_count[5] |(* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:221" *)  _087_;
  assign _077_[3] = _101_ |(* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:221" *)  _103_;
  assign _077_[7] = _097_ |(* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:221" *)  _104_;
  assign _077_[5] = _095_ |(* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:229" *)  _105_;
  assign _077_[2] = data_count[2] |(* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:229" *)  _106_;
  assign _077_[4] = data_count[4] |(* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:229" *)  _107_;
  assign _077_[6] = data_count[6] |(* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:229" *)  _108_;
  assign _077_[8] = data_count[8] |(* src = "./src/fifo.v:148|<techmap.v>:260|<techmap.v>:229" *)  _109_;
  assign _069_[1] = rd_ptr[1] &(* src = "./src/fifo.v:154|./src/fifo.v:124|<techmap.v>:260|<techmap.v>:221" *)  rd_ptr[0];
  assign _069_[3] = _085_ &(* src = "./src/fifo.v:154|./src/fifo.v:124|<techmap.v>:260|<techmap.v>:221" *)  _069_[1];
  assign _085_ = rd_ptr[3] &(* src = "./src/fifo.v:154|./src/fifo.v:124|<techmap.v>:260|<techmap.v>:222" *)  rd_ptr[2];
  assign _086_ = rd_ptr[5] &(* src = "./src/fifo.v:154|./src/fifo.v:124|<techmap.v>:260|<techmap.v>:222" *)  rd_ptr[4];
  assign _069_[5] = _086_ &(* src = "./src/fifo.v:154|./src/fifo.v:124|<techmap.v>:260|<techmap.v>:229" *)  _069_[3];
  assign _069_[2] = rd_ptr[2] &(* src = "./src/fifo.v:154|./src/fifo.v:124|<techmap.v>:260|<techmap.v>:229" *)  _069_[1];
  assign _069_[4] = rd_ptr[4] &(* src = "./src/fifo.v:154|./src/fifo.v:124|<techmap.v>:260|<techmap.v>:229" *)  _069_[3];
  assign _069_[6] = rd_ptr[6] &(* src = "./src/fifo.v:154|./src/fifo.v:124|<techmap.v>:260|<techmap.v>:229" *)  _069_[5];
  (* src = "./src/fifo.v:49" *)
  \$paramod\memory_syn_syn\DATA_SIZE=10\MAIN_SIZE=8  mem (
    .clk(clk),
    .data_in(data_in_push),
    .data_out(data_out),
    .rd_ptr(rd_ptr),
    .read(read),
    .reset(reset),
    .wr_ptr(wr_ptr),
    .write(write)
  );
  assign _017_[31:9] = 23'h000000;
  assign _018_[31:9] = 23'h000000;
  assign _019_[31:11] = 21'h000000;
  assign { _023_[4:2], _023_[0] } = { _020_[4:2], _020_[0] };
  assign _024_[1] = _021_[1];
  assign _030_[15:5] = 11'h7ff;
  assign _031_[7:2] = { 5'h1f, _030_[4] };
  assign _032_[3:1] = { 2'h3, _030_[4] };
  assign _033_[1] = 1'h1;
  assign { _034_[15:2], _034_[0] } = { 11'h7ff, _030_[4:2], _030_[0] };
  assign _035_[7:1] = { 5'h1f, _030_[4], _031_[1] };
  assign _036_[3:1] = { 2'h3, _030_[4] };
  assign _037_[1] = 1'h1;
  assign { _039_[9:4], _039_[2:0] } = { data_count[9:4], data_count[2:0] };
  assign { _040_[7:3], _040_[0] } = { wr_ptr[7:3], _017_[0] };
  assign { _041_[7:3], _041_[0] } = { rd_ptr[7:3], _018_[0] };
  assign _042_[0] = Fifo_full;
  assign { _066_[30:10], _066_[0] } = { _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _066_[31], _019_[0] };
  assign { _067_[31:7], _067_[0] } = { 24'h000000, _017_[8], wr_ptr[0] };
  assign { _068_[31:9], _068_[0] } = { 22'h000000, _019_[10], data_count[0] };
  assign { _069_[31:7], _069_[0] } = { 24'h000000, _018_[8], rd_ptr[0] };
  assign _070_[30:9] = { _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31], _070_[31] };
  assign { _071_[31:10], _071_[3:0] } = { 22'h3fffff, _039_[3], data_count[2:1], _019_[0] };
  assign { _074_[30:9], _074_[1:0] } = { _074_[31], _074_[31], _074_[31], _074_[31], _074_[31], _074_[31], _074_[31], _074_[31], _074_[31], _074_[31], _074_[31], _074_[31], _074_[31], _074_[31], _074_[31], _074_[31], _074_[31], _074_[31], _074_[31], _074_[31], _074_[31], _074_[31], _070_[1:0] };
  assign { _075_[31:3], _075_[1:0] } = { 22'h3fffff, _071_[9:4], _039_[3], data_count[1], _019_[0] };
  assign { _077_[30:9], _077_[0] } = { _077_[31], _077_[31], _077_[31], _077_[31], _077_[31], _077_[31], _077_[31], _077_[31], _077_[31], _077_[31], _077_[31], _077_[31], _077_[31], _077_[31], _077_[31], _077_[31], _077_[31], _077_[31], _077_[31], _077_[31], _077_[31], _077_[31], data_count[0] };
  assign { _078_[31:2], _078_[0] } = { 22'h3fffff, _071_[9:4], _039_[3], _075_[2], data_count[0] };
endmodule

(* src = "./src/paralelltoserial.v:6" *)
module paralelo_a_serial_syn(in, in_valid, reset, clk, out);
  (* src = "./src/paralelltoserial.v:26" *)
  wire _00_;
  (* src = "./src/paralelltoserial.v:26" *)
  wire [2:0] _01_;
  (* src = "./src/paralelltoserial.v:35" *)
  (* unused_bits = "3" *)
  wire [31:0] _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire [2:0] _07_;
  wire [1:0] _08_;
  wire [2:0] _09_;
  wire [1:0] _10_;
  wire _11_;
  wire [2:0] _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  (* src = "./src/paralelltoserial.v:43|./src/paralelltoserial.v:36|<techmap.v>:432" *)
  wire [6:0] _19_;
  (* src = "./src/paralelltoserial.v:43|./src/paralelltoserial.v:36|<techmap.v>:428" *)
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  (* src = "./src/paralelltoserial.v:35|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "2" *)
  wire [31:0] _29_;
  (* src = "./src/paralelltoserial.v:43|./src/paralelltoserial.v:36|<techmap.v>:445" *)
  wire _30_;
  (* src = "./src/paralelltoserial.v:11" *)
  input clk;
  (* src = "./src/paralelltoserial.v:8" *)
  input [7:0] in;
  (* src = "./src/paralelltoserial.v:15" *)
  wire in0;
  (* src = "./src/paralelltoserial.v:15" *)
  wire in1;
  (* src = "./src/paralelltoserial.v:15" *)
  wire in2;
  (* src = "./src/paralelltoserial.v:15" *)
  wire in3;
  (* src = "./src/paralelltoserial.v:15" *)
  wire in4;
  (* src = "./src/paralelltoserial.v:15" *)
  wire in5;
  (* src = "./src/paralelltoserial.v:15" *)
  wire in6;
  (* src = "./src/paralelltoserial.v:15" *)
  wire in7;
  (* src = "./src/paralelltoserial.v:9" *)
  input in_valid;
  (* src = "./src/paralelltoserial.v:12" *)
  output out;
  (* src = "./src/paralelltoserial.v:10" *)
  input reset;
  (* src = "./src/paralelltoserial.v:16" *)
  wire [2:0] selector;
  assign _13_ = _03_ |(* src = "./src/paralelltoserial.v:43|./src/paralelltoserial.v:36" *)  _12_[2];
  assign _14_ = _04_ |(* src = "./src/paralelltoserial.v:42|./src/paralelltoserial.v:36" *)  _12_[2];
  assign _15_ = _05_ |(* src = "./src/paralelltoserial.v:41|./src/paralelltoserial.v:36" *)  _12_[2];
  assign _06_ = _02_[0] |(* src = "./src/paralelltoserial.v:40|./src/paralelltoserial.v:36" *)  _12_[1];
  assign _16_ = _06_ |(* src = "./src/paralelltoserial.v:40|./src/paralelltoserial.v:36" *)  selector[2];
  assign _03_ = selector[0] |(* src = "./src/paralelltoserial.v:39|./src/paralelltoserial.v:36" *)  _12_[1];
  assign _17_ = _03_ |(* src = "./src/paralelltoserial.v:39|./src/paralelltoserial.v:36" *)  selector[2];
  assign _04_ = _02_[0] |(* src = "./src/paralelltoserial.v:38|./src/paralelltoserial.v:36" *)  selector[1];
  assign _18_ = _04_ |(* src = "./src/paralelltoserial.v:38|./src/paralelltoserial.v:36" *)  selector[2];
  assign _07_[0] = _19_[0] |(* src = "./src/paralelltoserial.v:43|./src/paralelltoserial.v:36|<techmap.v>:441" *)  _19_[1];
  assign _07_[1] = _19_[2] |(* src = "./src/paralelltoserial.v:43|./src/paralelltoserial.v:36|<techmap.v>:441" *)  _19_[3];
  assign _07_[2] = _19_[4] |(* src = "./src/paralelltoserial.v:43|./src/paralelltoserial.v:36|<techmap.v>:441" *)  _19_[5];
  assign _08_[0] = _07_[0] |(* src = "./src/paralelltoserial.v:43|./src/paralelltoserial.v:36|<techmap.v>:441" *)  _07_[1];
  assign _08_[1] = _07_[2] |(* src = "./src/paralelltoserial.v:43|./src/paralelltoserial.v:36|<techmap.v>:441" *)  _19_[6];
  assign _20_ = _08_[0] |(* src = "./src/paralelltoserial.v:43|./src/paralelltoserial.v:36|<techmap.v>:441" *)  _08_[1];
  assign _09_[0] = _22_ |(* src = "./src/paralelltoserial.v:43|./src/paralelltoserial.v:36|<techmap.v>:445" *)  _23_;
  assign _09_[1] = _24_ |(* src = "./src/paralelltoserial.v:43|./src/paralelltoserial.v:36|<techmap.v>:445" *)  _25_;
  assign _09_[2] = _26_ |(* src = "./src/paralelltoserial.v:43|./src/paralelltoserial.v:36|<techmap.v>:445" *)  _27_;
  assign _10_[0] = _09_[0] |(* src = "./src/paralelltoserial.v:43|./src/paralelltoserial.v:36|<techmap.v>:445" *)  _09_[1];
  assign _10_[1] = _09_[2] |(* src = "./src/paralelltoserial.v:43|./src/paralelltoserial.v:36|<techmap.v>:445" *)  _28_;
  assign _30_ = _10_[0] |(* src = "./src/paralelltoserial.v:43|./src/paralelltoserial.v:36|<techmap.v>:445" *)  _10_[1];
  assign _05_ = selector[0] |(* src = "./src/paralelltoserial.v:37|./src/paralelltoserial.v:36" *)  selector[1];
  assign _11_ = _05_ |(* src = "./src/paralelltoserial.v:37|./src/paralelltoserial.v:36" *)  selector[2];
  assign _22_ = ~(* src = "./src/paralelltoserial.v:43|./src/paralelltoserial.v:36" *) _13_;
  assign _23_ = ~(* src = "./src/paralelltoserial.v:42|./src/paralelltoserial.v:36" *) _14_;
  assign _24_ = ~(* src = "./src/paralelltoserial.v:41|./src/paralelltoserial.v:36" *) _15_;
  assign _25_ = ~(* src = "./src/paralelltoserial.v:40|./src/paralelltoserial.v:36" *) _16_;
  assign _26_ = ~(* src = "./src/paralelltoserial.v:39|./src/paralelltoserial.v:36" *) _17_;
  assign _27_ = ~(* src = "./src/paralelltoserial.v:38|./src/paralelltoserial.v:36" *) _18_;
  assign _28_ = ~(* src = "./src/paralelltoserial.v:37|./src/paralelltoserial.v:36" *) _11_;
  assign _01_[0] = reset ? (* src = "./src/paralelltoserial.v:27" *) _02_[0] : 1'h0;
  assign _01_[1] = reset ? (* src = "./src/paralelltoserial.v:27" *) _02_[1] : 1'h0;
  assign _01_[2] = reset ? (* src = "./src/paralelltoserial.v:27" *) _02_[2] : 1'h0;
  assign _00_ = reset ? (* src = "./src/paralelltoserial.v:27" *) _21_ : 1'h0;
  assign in4 = in_valid ? (* src = "./src/paralelltoserial.v:20" *) in[3] : 1'h1;
  assign in0 = in_valid ? (* src = "./src/paralelltoserial.v:20" *) in[7] : 1'h1;
  assign in5 = in_valid ? (* src = "./src/paralelltoserial.v:20" *) in[2] : 1'h1;
  assign in7 = in_valid ? (* src = "./src/paralelltoserial.v:20" *) in[0] : 1'h0;
  assign in6 = in_valid ? (* src = "./src/paralelltoserial.v:20" *) in[1] : 1'h0;
  assign in1 = in_valid ? (* src = "./src/paralelltoserial.v:20" *) in[6] : 1'h0;
  assign in2 = in_valid ? (* src = "./src/paralelltoserial.v:20" *) in[5] : 1'h1;
  assign in3 = in_valid ? (* src = "./src/paralelltoserial.v:20" *) in[4] : 1'h1;
  assign _21_ = _30_ ? (* src = "./src/paralelltoserial.v:43|./src/paralelltoserial.v:36|<techmap.v>:445" *) _20_ : in7;
  (* src = "./src/paralelltoserial.v:26" *)
  DFF _74_ (
    .C(clk),
    .D(_00_),
    .Q(out)
  );
  (* src = "./src/paralelltoserial.v:26" *)
  DFF _75_ (
    .C(clk),
    .D(_01_[0]),
    .Q(selector[0])
  );
  (* src = "./src/paralelltoserial.v:26" *)
  DFF _76_ (
    .C(clk),
    .D(_01_[1]),
    .Q(selector[1])
  );
  (* src = "./src/paralelltoserial.v:26" *)
  DFF _77_ (
    .C(clk),
    .D(_01_[2]),
    .Q(selector[2])
  );
  assign _12_[2] = selector[2] ^(* src = "./src/paralelltoserial.v:41|./src/paralelltoserial.v:36" *)  1'h1;
  assign _12_[1] = selector[1] ^(* src = "./src/paralelltoserial.v:39|./src/paralelltoserial.v:36" *)  1'h1;
  assign _19_[6] = in0 &(* src = "./src/paralelltoserial.v:43|./src/paralelltoserial.v:36|<techmap.v>:434" *)  _28_;
  assign _19_[5] = in1 &(* src = "./src/paralelltoserial.v:43|./src/paralelltoserial.v:36|<techmap.v>:434" *)  _27_;
  assign _19_[4] = in2 &(* src = "./src/paralelltoserial.v:43|./src/paralelltoserial.v:36|<techmap.v>:434" *)  _26_;
  assign _19_[3] = in3 &(* src = "./src/paralelltoserial.v:43|./src/paralelltoserial.v:36|<techmap.v>:434" *)  _25_;
  assign _19_[2] = in4 &(* src = "./src/paralelltoserial.v:43|./src/paralelltoserial.v:36|<techmap.v>:434" *)  _24_;
  assign _19_[1] = in5 &(* src = "./src/paralelltoserial.v:43|./src/paralelltoserial.v:36|<techmap.v>:434" *)  _23_;
  assign _19_[0] = in6 &(* src = "./src/paralelltoserial.v:43|./src/paralelltoserial.v:36|<techmap.v>:434" *)  _22_;
  assign _02_[1] = selector[1] ^(* src = "./src/paralelltoserial.v:35|<techmap.v>:263" *)  selector[0];
  assign _02_[2] = selector[2] ^(* src = "./src/paralelltoserial.v:35|<techmap.v>:263" *)  _29_[1];
  assign _02_[0] = selector[0] ^(* src = "./src/paralelltoserial.v:35|<techmap.v>:262" *)  1'h1;
  assign _29_[1] = selector[1] &(* src = "./src/paralelltoserial.v:35|<techmap.v>:260|<techmap.v>:221" *)  selector[0];
  assign _02_[31:4] = 28'h0000000;
  assign _12_[0] = selector[0];
  assign { _29_[31:2], _29_[0] } = { 29'h00000000, _02_[3], selector[0] };
endmodule
