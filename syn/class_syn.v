/* Generated by Yosys 0.9 (git sha1 UNKNOWN, gcc 7.5.0-3ubuntu1~18.04 -fPIC -Os) */

(* dynports =  1  *)
(* src = "./src/memory_syn.v:12" *)
module \$paramod\memory_syn\DATA_SIZE=10\MAIN_SIZE=8 (clk, reset, write, read, wr_ptr, rd_ptr, data_in, data_out);
  (* src = "./src/memory_syn.v:35" *)
  wire [31:0] _000_;
  (* src = "./src/memory_syn.v:35" *)
  wire [9:0] _001_;
  (* src = "./src/memory_syn.v:35" *)
  wire [31:0] _002_;
  (* src = "./src/memory_syn.v:35" *)
  (* unused_bits = "3 4 5 6 7" *)
  wire [7:0] _003_;
  (* src = "./src/memory_syn.v:35" *)
  wire [9:0] _004_;
  (* src = "./src/memory_syn.v:35" *)
  wire [9:0] _005_;
  (* src = "./src/memory_syn.v:49" *)
  wire [7:0] _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire [9:0] _048_;
  wire [9:0] _049_;
  wire [9:0] _050_;
  wire [9:0] _051_;
  wire [9:0] _052_;
  wire [9:0] _053_;
  wire [9:0] _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire [9:0] _085_;
  wire [9:0] _086_;
  wire [9:0] _087_;
  wire [9:0] _088_;
  wire [9:0] _089_;
  wire [9:0] _090_;
  wire [9:0] _091_;
  wire [9:0] _092_;
  wire [9:0] _093_;
  wire [9:0] _094_;
  wire [9:0] _095_;
  wire [9:0] _096_;
  wire [9:0] _097_;
  wire [9:0] _098_;
  wire [9:0] _099_;
  wire [9:0] _100_;
  wire [9:0] _101_;
  wire [9:0] _102_;
  wire [9:0] _103_;
  wire [9:0] _104_;
  wire [9:0] _105_;
  wire [9:0] _106_;
  wire [9:0] _107_;
  wire [9:0] _108_;
  wire [9:0] _109_;
  wire [9:0] _110_;
  wire [9:0] _111_;
  wire [9:0] _112_;
  wire [9:0] _113_;
  wire [9:0] _114_;
  wire [9:0] _115_;
  wire [9:0] _116_;
  wire [9:0] _117_;
  wire [9:0] _118_;
  wire [9:0] _119_;
  wire [9:0] _120_;
  wire [9:0] _121_;
  wire [9:0] _122_;
  wire [9:0] _123_;
  wire [9:0] _124_;
  wire [9:0] _125_;
  wire [9:0] _126_;
  wire [9:0] _127_;
  wire [9:0] _128_;
  wire [9:0] _129_;
  wire [9:0] _130_;
  (* src = "./src/memory_syn.v:61" *)
  wire [9:0] _131_;
  wire [9:0] _132_;
  (* unused_bits = "3 4 5 6 7" *)
  wire [7:0] _133_;
  (* src = "./src/memory_syn.v:17" *)
  input clk;
  (* src = "./src/memory_syn.v:23" *)
  input [9:0] data_in;
  (* src = "./src/memory_syn.v:25" *)
  output [9:0] data_out;
  (* src = "./src/memory_syn.v:32" *)
  wire [7:0] ff_mem;
  (* src = "./src/memory_syn.v:30" *)
  wire [31:0] i;
  wire [9:0] \mem[0] ;
  wire [9:0] \mem[1] ;
  wire [9:0] \mem[2] ;
  wire [9:0] \mem[3] ;
  wire [9:0] \mem[4] ;
  wire [9:0] \mem[5] ;
  wire [9:0] \mem[6] ;
  wire [9:0] \mem[7] ;
  (* src = "./src/memory_syn.v:22" *)
  input [7:0] rd_ptr;
  (* src = "./src/memory_syn.v:20" *)
  input read;
  (* src = "./src/memory_syn.v:18" *)
  input reset;
  (* src = "./src/memory_syn.v:21" *)
  input [7:0] wr_ptr;
  (* src = "./src/memory_syn.v:19" *)
  input write;
  assign _099_[0] = _065_ ? _000_[31] : _098_[0];
  assign _099_[1] = _065_ ? _000_[31] : _098_[1];
  assign _099_[2] = _065_ ? _000_[31] : _098_[2];
  assign _099_[3] = _065_ ? _000_[31] : _098_[3];
  assign _099_[4] = _065_ ? _000_[31] : _098_[4];
  assign _099_[5] = _065_ ? _000_[31] : _098_[5];
  assign _099_[6] = _065_ ? _000_[31] : _098_[6];
  assign _099_[7] = _065_ ? _000_[31] : _098_[7];
  assign _099_[8] = _065_ ? _000_[31] : _098_[8];
  assign _099_[9] = _065_ ? _000_[31] : _098_[9];
  assign _109_[0] = _067_ ? _000_[31] : _108_[0];
  assign _109_[1] = _067_ ? _000_[31] : _108_[1];
  assign _109_[2] = _067_ ? _000_[31] : _108_[2];
  assign _109_[3] = _067_ ? _000_[31] : _108_[3];
  assign _109_[4] = _067_ ? _000_[31] : _108_[4];
  assign _109_[5] = _067_ ? _000_[31] : _108_[5];
  assign _109_[6] = _067_ ? _000_[31] : _108_[6];
  assign _109_[7] = _067_ ? _000_[31] : _108_[7];
  assign _109_[8] = _067_ ? _000_[31] : _108_[8];
  assign _109_[9] = _067_ ? _000_[31] : _108_[9];
  assign _100_[0] = _066_ ? _000_[31] : _099_[0];
  assign _100_[1] = _066_ ? _000_[31] : _099_[1];
  assign _100_[2] = _066_ ? _000_[31] : _099_[2];
  assign _100_[3] = _066_ ? _000_[31] : _099_[3];
  assign _100_[4] = _066_ ? _000_[31] : _099_[4];
  assign _100_[5] = _066_ ? _000_[31] : _099_[5];
  assign _100_[6] = _066_ ? _000_[31] : _099_[6];
  assign _100_[7] = _066_ ? _000_[31] : _099_[7];
  assign _100_[8] = _066_ ? _000_[31] : _099_[8];
  assign _100_[9] = _066_ ? _000_[31] : _099_[9];
  assign _101_[0] = _067_ ? _000_[31] : _100_[0];
  assign _101_[1] = _067_ ? _000_[31] : _100_[1];
  assign _101_[2] = _067_ ? _000_[31] : _100_[2];
  assign _101_[3] = _067_ ? _000_[31] : _100_[3];
  assign _101_[4] = _067_ ? _000_[31] : _100_[4];
  assign _101_[5] = _067_ ? _000_[31] : _100_[5];
  assign _101_[6] = _067_ ? _000_[31] : _100_[6];
  assign _101_[7] = _067_ ? _000_[31] : _100_[7];
  assign _101_[8] = _067_ ? _000_[31] : _100_[8];
  assign _101_[9] = _067_ ? _000_[31] : _100_[9];
  assign _102_[0] = _068_ ? _048_[0] : _101_[0];
  assign _102_[1] = _068_ ? _048_[1] : _101_[1];
  assign _102_[2] = _068_ ? _048_[2] : _101_[2];
  assign _102_[3] = _068_ ? _048_[3] : _101_[3];
  assign _102_[4] = _068_ ? _048_[4] : _101_[4];
  assign _102_[5] = _068_ ? _048_[5] : _101_[5];
  assign _102_[6] = _068_ ? _048_[6] : _101_[6];
  assign _102_[7] = _068_ ? _048_[7] : _101_[7];
  assign _102_[8] = _068_ ? _048_[8] : _101_[8];
  assign _102_[9] = _068_ ? _048_[9] : _101_[9];
  assign _088_[0] = _058_ ? _000_[31] : _087_[0];
  assign _088_[1] = _058_ ? _000_[31] : _087_[1];
  assign _088_[2] = _058_ ? _000_[31] : _087_[2];
  assign _088_[3] = _058_ ? _000_[31] : _087_[3];
  assign _088_[4] = _058_ ? _000_[31] : _087_[4];
  assign _088_[5] = _058_ ? _000_[31] : _087_[5];
  assign _088_[6] = _058_ ? _000_[31] : _087_[6];
  assign _088_[7] = _058_ ? _000_[31] : _087_[7];
  assign _088_[8] = _058_ ? _000_[31] : _087_[8];
  assign _088_[9] = _058_ ? _000_[31] : _087_[9];
  assign _098_[0] = _064_ ? _000_[31] : \mem[2] [0];
  assign _098_[1] = _064_ ? _000_[31] : \mem[2] [1];
  assign _098_[2] = _064_ ? _000_[31] : \mem[2] [2];
  assign _098_[3] = _064_ ? _000_[31] : \mem[2] [3];
  assign _098_[4] = _064_ ? _000_[31] : \mem[2] [4];
  assign _098_[5] = _064_ ? _000_[31] : \mem[2] [5];
  assign _098_[6] = _064_ ? _000_[31] : \mem[2] [6];
  assign _098_[7] = _064_ ? _000_[31] : \mem[2] [7];
  assign _098_[8] = _064_ ? _000_[31] : \mem[2] [8];
  assign _098_[9] = _064_ ? _000_[31] : \mem[2] [9];
  assign _104_[0] = _070_ ? _000_[31] : _103_[0];
  assign _104_[1] = _070_ ? _000_[31] : _103_[1];
  assign _104_[2] = _070_ ? _000_[31] : _103_[2];
  assign _104_[3] = _070_ ? _000_[31] : _103_[3];
  assign _104_[4] = _070_ ? _000_[31] : _103_[4];
  assign _104_[5] = _070_ ? _000_[31] : _103_[5];
  assign _104_[6] = _070_ ? _000_[31] : _103_[6];
  assign _104_[7] = _070_ ? _000_[31] : _103_[7];
  assign _104_[8] = _070_ ? _000_[31] : _103_[8];
  assign _104_[9] = _070_ ? _000_[31] : _103_[9];
  assign _103_[0] = _069_ ? _000_[31] : \mem[3] [0];
  assign _103_[1] = _069_ ? _000_[31] : \mem[3] [1];
  assign _103_[2] = _069_ ? _000_[31] : \mem[3] [2];
  assign _103_[3] = _069_ ? _000_[31] : \mem[3] [3];
  assign _103_[4] = _069_ ? _000_[31] : \mem[3] [4];
  assign _103_[5] = _069_ ? _000_[31] : \mem[3] [5];
  assign _103_[6] = _069_ ? _000_[31] : \mem[3] [6];
  assign _103_[7] = _069_ ? _000_[31] : \mem[3] [7];
  assign _103_[8] = _069_ ? _000_[31] : \mem[3] [8];
  assign _103_[9] = _069_ ? _000_[31] : \mem[3] [9];
  assign _045_ = _005_[9] ? _003_[0] : _000_[31];
  assign _046_ = _005_[9] ? _003_[1] : _002_[0];
  assign _047_ = _005_[9] ? _003_[2] : _002_[0];
  assign _048_[0] = _005_[9] ? _004_[0] : _000_[31];
  assign _048_[1] = _005_[9] ? _004_[1] : _000_[31];
  assign _048_[2] = _005_[9] ? _004_[2] : _000_[31];
  assign _048_[3] = _005_[9] ? _004_[3] : _000_[31];
  assign _048_[4] = _005_[9] ? _004_[4] : _000_[31];
  assign _048_[5] = _005_[9] ? _004_[5] : _000_[31];
  assign _048_[6] = _005_[9] ? _004_[6] : _000_[31];
  assign _048_[7] = _005_[9] ? _004_[7] : _000_[31];
  assign _048_[8] = _005_[9] ? _004_[8] : _000_[31];
  assign _048_[9] = _005_[9] ? _004_[9] : _000_[31];
  assign _090_[0] = _058_ ? _000_[31] : _089_[0];
  assign _090_[1] = _058_ ? _000_[31] : _089_[1];
  assign _090_[2] = _058_ ? _000_[31] : _089_[2];
  assign _090_[3] = _058_ ? _000_[31] : _089_[3];
  assign _090_[4] = _058_ ? _000_[31] : _089_[4];
  assign _090_[5] = _058_ ? _000_[31] : _089_[5];
  assign _090_[6] = _058_ ? _000_[31] : _089_[6];
  assign _090_[7] = _058_ ? _000_[31] : _089_[7];
  assign _090_[8] = _058_ ? _000_[31] : _089_[8];
  assign _090_[9] = _058_ ? _000_[31] : _089_[9];
  assign _108_[0] = _066_ ? _000_[31] : \mem[4] [0];
  assign _108_[1] = _066_ ? _000_[31] : \mem[4] [1];
  assign _108_[2] = _066_ ? _000_[31] : \mem[4] [2];
  assign _108_[3] = _066_ ? _000_[31] : \mem[4] [3];
  assign _108_[4] = _066_ ? _000_[31] : \mem[4] [4];
  assign _108_[5] = _066_ ? _000_[31] : \mem[4] [5];
  assign _108_[6] = _066_ ? _000_[31] : \mem[4] [6];
  assign _108_[7] = _066_ ? _000_[31] : \mem[4] [7];
  assign _108_[8] = _066_ ? _000_[31] : \mem[4] [8];
  assign _108_[9] = _066_ ? _000_[31] : \mem[4] [9];
  assign _089_[0] = _057_ ? _000_[31] : _088_[0];
  assign _089_[1] = _057_ ? _000_[31] : _088_[1];
  assign _089_[2] = _057_ ? _000_[31] : _088_[2];
  assign _089_[3] = _057_ ? _000_[31] : _088_[3];
  assign _089_[4] = _057_ ? _000_[31] : _088_[4];
  assign _089_[5] = _057_ ? _000_[31] : _088_[5];
  assign _089_[6] = _057_ ? _000_[31] : _088_[6];
  assign _089_[7] = _057_ ? _000_[31] : _088_[7];
  assign _089_[8] = _057_ ? _000_[31] : _088_[8];
  assign _089_[9] = _057_ ? _000_[31] : _088_[9];
  assign _097_[0] = _063_ ? _048_[0] : _096_[0];
  assign _097_[1] = _063_ ? _048_[1] : _096_[1];
  assign _097_[2] = _063_ ? _048_[2] : _096_[2];
  assign _097_[3] = _063_ ? _048_[3] : _096_[3];
  assign _097_[4] = _063_ ? _048_[4] : _096_[4];
  assign _097_[5] = _063_ ? _048_[5] : _096_[5];
  assign _097_[6] = _063_ ? _048_[6] : _096_[6];
  assign _097_[7] = _063_ ? _048_[7] : _096_[7];
  assign _097_[8] = _063_ ? _048_[8] : _096_[8];
  assign _097_[9] = _063_ ? _048_[9] : _096_[9];
  assign _096_[0] = _062_ ? _000_[31] : _095_[0];
  assign _096_[1] = _062_ ? _000_[31] : _095_[1];
  assign _096_[2] = _062_ ? _000_[31] : _095_[2];
  assign _096_[3] = _062_ ? _000_[31] : _095_[3];
  assign _096_[4] = _062_ ? _000_[31] : _095_[4];
  assign _096_[5] = _062_ ? _000_[31] : _095_[5];
  assign _096_[6] = _062_ ? _000_[31] : _095_[6];
  assign _096_[7] = _062_ ? _000_[31] : _095_[7];
  assign _096_[8] = _062_ ? _000_[31] : _095_[8];
  assign _096_[9] = _062_ ? _000_[31] : _095_[9];
  assign _095_[0] = _061_ ? _000_[31] : _094_[0];
  assign _095_[1] = _061_ ? _000_[31] : _094_[1];
  assign _095_[2] = _061_ ? _000_[31] : _094_[2];
  assign _095_[3] = _061_ ? _000_[31] : _094_[3];
  assign _095_[4] = _061_ ? _000_[31] : _094_[4];
  assign _095_[5] = _061_ ? _000_[31] : _094_[5];
  assign _095_[6] = _061_ ? _000_[31] : _094_[6];
  assign _095_[7] = _061_ ? _000_[31] : _094_[7];
  assign _095_[8] = _061_ ? _000_[31] : _094_[8];
  assign _095_[9] = _061_ ? _000_[31] : _094_[9];
  assign _094_[0] = _062_ ? _000_[31] : _093_[0];
  assign _094_[1] = _062_ ? _000_[31] : _093_[1];
  assign _094_[2] = _062_ ? _000_[31] : _093_[2];
  assign _094_[3] = _062_ ? _000_[31] : _093_[3];
  assign _094_[4] = _062_ ? _000_[31] : _093_[4];
  assign _094_[5] = _062_ ? _000_[31] : _093_[5];
  assign _094_[6] = _062_ ? _000_[31] : _093_[6];
  assign _094_[7] = _062_ ? _000_[31] : _093_[7];
  assign _094_[8] = _062_ ? _000_[31] : _093_[8];
  assign _094_[9] = _062_ ? _000_[31] : _093_[9];
  assign _093_[0] = _061_ ? _000_[31] : _092_[0];
  assign _093_[1] = _061_ ? _000_[31] : _092_[1];
  assign _093_[2] = _061_ ? _000_[31] : _092_[2];
  assign _093_[3] = _061_ ? _000_[31] : _092_[3];
  assign _093_[4] = _061_ ? _000_[31] : _092_[4];
  assign _093_[5] = _061_ ? _000_[31] : _092_[5];
  assign _093_[6] = _061_ ? _000_[31] : _092_[6];
  assign _093_[7] = _061_ ? _000_[31] : _092_[7];
  assign _093_[8] = _061_ ? _000_[31] : _092_[8];
  assign _093_[9] = _061_ ? _000_[31] : _092_[9];
  assign _092_[0] = _060_ ? _000_[31] : \mem[1] [0];
  assign _092_[1] = _060_ ? _000_[31] : \mem[1] [1];
  assign _092_[2] = _060_ ? _000_[31] : \mem[1] [2];
  assign _092_[3] = _060_ ? _000_[31] : \mem[1] [3];
  assign _092_[4] = _060_ ? _000_[31] : \mem[1] [4];
  assign _092_[5] = _060_ ? _000_[31] : \mem[1] [5];
  assign _092_[6] = _060_ ? _000_[31] : \mem[1] [6];
  assign _092_[7] = _060_ ? _000_[31] : \mem[1] [7];
  assign _092_[8] = _060_ ? _000_[31] : \mem[1] [8];
  assign _092_[9] = _060_ ? _000_[31] : \mem[1] [9];
  assign _091_[0] = _059_ ? _048_[0] : _090_[0];
  assign _091_[1] = _059_ ? _048_[1] : _090_[1];
  assign _091_[2] = _059_ ? _048_[2] : _090_[2];
  assign _091_[3] = _059_ ? _048_[3] : _090_[3];
  assign _091_[4] = _059_ ? _048_[4] : _090_[4];
  assign _091_[5] = _059_ ? _048_[5] : _090_[5];
  assign _091_[6] = _059_ ? _048_[6] : _090_[6];
  assign _091_[7] = _059_ ? _048_[7] : _090_[7];
  assign _091_[8] = _059_ ? _048_[8] : _090_[8];
  assign _091_[9] = _059_ ? _048_[9] : _090_[9];
  assign data_out[0] = read ? (* src = "./src/memory_syn.v:60" *) _131_[0] : ff_mem[0];
  assign data_out[1] = read ? (* src = "./src/memory_syn.v:60" *) _131_[1] : ff_mem[1];
  assign data_out[2] = read ? (* src = "./src/memory_syn.v:60" *) _131_[2] : ff_mem[2];
  assign data_out[3] = read ? (* src = "./src/memory_syn.v:60" *) _131_[3] : ff_mem[3];
  assign data_out[4] = read ? (* src = "./src/memory_syn.v:60" *) _131_[4] : ff_mem[4];
  assign data_out[5] = read ? (* src = "./src/memory_syn.v:60" *) _131_[5] : ff_mem[5];
  assign data_out[6] = read ? (* src = "./src/memory_syn.v:60" *) _131_[6] : ff_mem[6];
  assign data_out[7] = read ? (* src = "./src/memory_syn.v:60" *) _131_[7] : ff_mem[7];
  assign data_out[8] = read ? (* src = "./src/memory_syn.v:60" *) _131_[8] : 1'h0;
  assign data_out[9] = read ? (* src = "./src/memory_syn.v:60" *) _131_[9] : 1'h0;
  assign _087_[0] = _057_ ? _000_[31] : _086_[0];
  assign _087_[1] = _057_ ? _000_[31] : _086_[1];
  assign _087_[2] = _057_ ? _000_[31] : _086_[2];
  assign _087_[3] = _057_ ? _000_[31] : _086_[3];
  assign _087_[4] = _057_ ? _000_[31] : _086_[4];
  assign _087_[5] = _057_ ? _000_[31] : _086_[5];
  assign _087_[6] = _057_ ? _000_[31] : _086_[6];
  assign _087_[7] = _057_ ? _000_[31] : _086_[7];
  assign _087_[8] = _057_ ? _000_[31] : _086_[8];
  assign _087_[9] = _057_ ? _000_[31] : _086_[9];
  assign _006_[0] = reset ? (* src = "./src/memory_syn.v:50" *) data_out[0] : 1'h0;
  assign _006_[1] = reset ? (* src = "./src/memory_syn.v:50" *) data_out[1] : 1'h0;
  assign _006_[2] = reset ? (* src = "./src/memory_syn.v:50" *) data_out[2] : 1'h0;
  assign _006_[3] = reset ? (* src = "./src/memory_syn.v:50" *) data_out[3] : 1'h0;
  assign _006_[4] = reset ? (* src = "./src/memory_syn.v:50" *) data_out[4] : 1'h0;
  assign _006_[5] = reset ? (* src = "./src/memory_syn.v:50" *) data_out[5] : 1'h0;
  assign _006_[6] = reset ? (* src = "./src/memory_syn.v:50" *) data_out[6] : 1'h0;
  assign _006_[7] = reset ? (* src = "./src/memory_syn.v:50" *) data_out[7] : 1'h0;
  assign _086_[0] = _056_ ? _000_[31] : _085_[0];
  assign _086_[1] = _056_ ? _000_[31] : _085_[1];
  assign _086_[2] = _056_ ? _000_[31] : _085_[2];
  assign _086_[3] = _056_ ? _000_[31] : _085_[3];
  assign _086_[4] = _056_ ? _000_[31] : _085_[4];
  assign _086_[5] = _056_ ? _000_[31] : _085_[5];
  assign _086_[6] = _056_ ? _000_[31] : _085_[6];
  assign _086_[7] = _056_ ? _000_[31] : _085_[7];
  assign _086_[8] = _056_ ? _000_[31] : _085_[8];
  assign _086_[9] = _056_ ? _000_[31] : _085_[9];
  assign _107_[0] = _073_ ? _048_[0] : _106_[0];
  assign _107_[1] = _073_ ? _048_[1] : _106_[1];
  assign _107_[2] = _073_ ? _048_[2] : _106_[2];
  assign _107_[3] = _073_ ? _048_[3] : _106_[3];
  assign _107_[4] = _073_ ? _048_[4] : _106_[4];
  assign _107_[5] = _073_ ? _048_[5] : _106_[5];
  assign _107_[6] = _073_ ? _048_[6] : _106_[6];
  assign _107_[7] = _073_ ? _048_[7] : _106_[7];
  assign _107_[8] = _073_ ? _048_[8] : _106_[8];
  assign _107_[9] = _073_ ? _048_[9] : _106_[9];
  assign _085_[0] = _055_ ? _000_[31] : \mem[0] [0];
  assign _085_[1] = _055_ ? _000_[31] : \mem[0] [1];
  assign _085_[2] = _055_ ? _000_[31] : \mem[0] [2];
  assign _085_[3] = _055_ ? _000_[31] : \mem[0] [3];
  assign _085_[4] = _055_ ? _000_[31] : \mem[0] [4];
  assign _085_[5] = _055_ ? _000_[31] : \mem[0] [5];
  assign _085_[6] = _055_ ? _000_[31] : \mem[0] [6];
  assign _085_[7] = _055_ ? _000_[31] : \mem[0] [7];
  assign _085_[8] = _055_ ? _000_[31] : \mem[0] [8];
  assign _085_[9] = _055_ ? _000_[31] : \mem[0] [9];
  assign _054_[0] = rd_ptr[0] ? \mem[7] [0] : \mem[6] [0];
  assign _054_[1] = rd_ptr[0] ? \mem[7] [1] : \mem[6] [1];
  assign _054_[2] = rd_ptr[0] ? \mem[7] [2] : \mem[6] [2];
  assign _054_[3] = rd_ptr[0] ? \mem[7] [3] : \mem[6] [3];
  assign _054_[4] = rd_ptr[0] ? \mem[7] [4] : \mem[6] [4];
  assign _054_[5] = rd_ptr[0] ? \mem[7] [5] : \mem[6] [5];
  assign _054_[6] = rd_ptr[0] ? \mem[7] [6] : \mem[6] [6];
  assign _054_[7] = rd_ptr[0] ? \mem[7] [7] : \mem[6] [7];
  assign _054_[8] = rd_ptr[0] ? \mem[7] [8] : \mem[6] [8];
  assign _054_[9] = rd_ptr[0] ? \mem[7] [9] : \mem[6] [9];
  assign _053_[0] = rd_ptr[0] ? \mem[5] [0] : \mem[4] [0];
  assign _053_[1] = rd_ptr[0] ? \mem[5] [1] : \mem[4] [1];
  assign _053_[2] = rd_ptr[0] ? \mem[5] [2] : \mem[4] [2];
  assign _053_[3] = rd_ptr[0] ? \mem[5] [3] : \mem[4] [3];
  assign _053_[4] = rd_ptr[0] ? \mem[5] [4] : \mem[4] [4];
  assign _053_[5] = rd_ptr[0] ? \mem[5] [5] : \mem[4] [5];
  assign _053_[6] = rd_ptr[0] ? \mem[5] [6] : \mem[4] [6];
  assign _053_[7] = rd_ptr[0] ? \mem[5] [7] : \mem[4] [7];
  assign _053_[8] = rd_ptr[0] ? \mem[5] [8] : \mem[4] [8];
  assign _053_[9] = rd_ptr[0] ? \mem[5] [9] : \mem[4] [9];
  assign _052_[0] = rd_ptr[0] ? \mem[3] [0] : \mem[2] [0];
  assign _052_[1] = rd_ptr[0] ? \mem[3] [1] : \mem[2] [1];
  assign _052_[2] = rd_ptr[0] ? \mem[3] [2] : \mem[2] [2];
  assign _052_[3] = rd_ptr[0] ? \mem[3] [3] : \mem[2] [3];
  assign _052_[4] = rd_ptr[0] ? \mem[3] [4] : \mem[2] [4];
  assign _052_[5] = rd_ptr[0] ? \mem[3] [5] : \mem[2] [5];
  assign _052_[6] = rd_ptr[0] ? \mem[3] [6] : \mem[2] [6];
  assign _052_[7] = rd_ptr[0] ? \mem[3] [7] : \mem[2] [7];
  assign _052_[8] = rd_ptr[0] ? \mem[3] [8] : \mem[2] [8];
  assign _052_[9] = rd_ptr[0] ? \mem[3] [9] : \mem[2] [9];
  assign _051_[0] = rd_ptr[0] ? \mem[1] [0] : \mem[0] [0];
  assign _051_[1] = rd_ptr[0] ? \mem[1] [1] : \mem[0] [1];
  assign _051_[2] = rd_ptr[0] ? \mem[1] [2] : \mem[0] [2];
  assign _051_[3] = rd_ptr[0] ? \mem[1] [3] : \mem[0] [3];
  assign _051_[4] = rd_ptr[0] ? \mem[1] [4] : \mem[0] [4];
  assign _051_[5] = rd_ptr[0] ? \mem[1] [5] : \mem[0] [5];
  assign _051_[6] = rd_ptr[0] ? \mem[1] [6] : \mem[0] [6];
  assign _051_[7] = rd_ptr[0] ? \mem[1] [7] : \mem[0] [7];
  assign _051_[8] = rd_ptr[0] ? \mem[1] [8] : \mem[0] [8];
  assign _051_[9] = rd_ptr[0] ? \mem[1] [9] : \mem[0] [9];
  assign _001_[9] = ~(* src = "./src/memory_syn.v:36" *) reset;
  assign _050_[0] = rd_ptr[1] ? _054_[0] : _053_[0];
  assign _050_[1] = rd_ptr[1] ? _054_[1] : _053_[1];
  assign _050_[2] = rd_ptr[1] ? _054_[2] : _053_[2];
  assign _050_[3] = rd_ptr[1] ? _054_[3] : _053_[3];
  assign _050_[4] = rd_ptr[1] ? _054_[4] : _053_[4];
  assign _050_[5] = rd_ptr[1] ? _054_[5] : _053_[5];
  assign _050_[6] = rd_ptr[1] ? _054_[6] : _053_[6];
  assign _050_[7] = rd_ptr[1] ? _054_[7] : _053_[7];
  assign _050_[8] = rd_ptr[1] ? _054_[8] : _053_[8];
  assign _050_[9] = rd_ptr[1] ? _054_[9] : _053_[9];
  assign _005_[9] = reset ? (* src = "./src/memory_syn.v:36" *) write : 1'h0;
  assign _049_[0] = rd_ptr[1] ? _052_[0] : _051_[0];
  assign _049_[1] = rd_ptr[1] ? _052_[1] : _051_[1];
  assign _049_[2] = rd_ptr[1] ? _052_[2] : _051_[2];
  assign _049_[3] = rd_ptr[1] ? _052_[3] : _051_[3];
  assign _049_[4] = rd_ptr[1] ? _052_[4] : _051_[4];
  assign _049_[5] = rd_ptr[1] ? _052_[5] : _051_[5];
  assign _049_[6] = rd_ptr[1] ? _052_[6] : _051_[6];
  assign _049_[7] = rd_ptr[1] ? _052_[7] : _051_[7];
  assign _049_[8] = rd_ptr[1] ? _052_[8] : _051_[8];
  assign _049_[9] = rd_ptr[1] ? _052_[9] : _051_[9];
  assign _002_[0] = reset ? (* src = "./src/memory_syn.v:36" *) 1'hx : 1'h1;
  assign _000_[31] = reset ? (* src = "./src/memory_syn.v:36" *) 1'hx : 1'h0;
  assign _131_[0] = rd_ptr[2] ? _050_[0] : _049_[0];
  assign _131_[1] = rd_ptr[2] ? _050_[1] : _049_[1];
  assign _131_[2] = rd_ptr[2] ? _050_[2] : _049_[2];
  assign _131_[3] = rd_ptr[2] ? _050_[3] : _049_[3];
  assign _131_[4] = rd_ptr[2] ? _050_[4] : _049_[4];
  assign _131_[5] = rd_ptr[2] ? _050_[5] : _049_[5];
  assign _131_[6] = rd_ptr[2] ? _050_[6] : _049_[6];
  assign _131_[7] = rd_ptr[2] ? _050_[7] : _049_[7];
  assign _131_[8] = rd_ptr[2] ? _050_[8] : _049_[8];
  assign _131_[9] = rd_ptr[2] ? _050_[9] : _049_[9];
  assign _133_[0] = write ? (* src = "./src/memory_syn.v:42" *) wr_ptr[0] : 1'hx;
  assign _133_[1] = write ? (* src = "./src/memory_syn.v:42" *) wr_ptr[1] : 1'hx;
  assign _133_[2] = write ? (* src = "./src/memory_syn.v:42" *) wr_ptr[2] : 1'hx;
  assign _132_[0] = write ? (* src = "./src/memory_syn.v:42" *) data_in[0] : 1'hx;
  assign _132_[1] = write ? (* src = "./src/memory_syn.v:42" *) data_in[1] : 1'hx;
  assign _132_[2] = write ? (* src = "./src/memory_syn.v:42" *) data_in[2] : 1'hx;
  assign _132_[3] = write ? (* src = "./src/memory_syn.v:42" *) data_in[3] : 1'hx;
  assign _132_[4] = write ? (* src = "./src/memory_syn.v:42" *) data_in[4] : 1'hx;
  assign _132_[5] = write ? (* src = "./src/memory_syn.v:42" *) data_in[5] : 1'hx;
  assign _132_[6] = write ? (* src = "./src/memory_syn.v:42" *) data_in[6] : 1'hx;
  assign _132_[7] = write ? (* src = "./src/memory_syn.v:42" *) data_in[7] : 1'hx;
  assign _132_[8] = write ? (* src = "./src/memory_syn.v:42" *) data_in[8] : 1'hx;
  assign _132_[9] = write ? (* src = "./src/memory_syn.v:42" *) data_in[9] : 1'hx;
  assign _004_[0] = reset ? (* src = "./src/memory_syn.v:36" *) _132_[0] : 1'hx;
  assign _004_[1] = reset ? (* src = "./src/memory_syn.v:36" *) _132_[1] : 1'hx;
  assign _004_[2] = reset ? (* src = "./src/memory_syn.v:36" *) _132_[2] : 1'hx;
  assign _004_[3] = reset ? (* src = "./src/memory_syn.v:36" *) _132_[3] : 1'hx;
  assign _004_[4] = reset ? (* src = "./src/memory_syn.v:36" *) _132_[4] : 1'hx;
  assign _004_[5] = reset ? (* src = "./src/memory_syn.v:36" *) _132_[5] : 1'hx;
  assign _004_[6] = reset ? (* src = "./src/memory_syn.v:36" *) _132_[6] : 1'hx;
  assign _004_[7] = reset ? (* src = "./src/memory_syn.v:36" *) _132_[7] : 1'hx;
  assign _004_[8] = reset ? (* src = "./src/memory_syn.v:36" *) _132_[8] : 1'hx;
  assign _004_[9] = reset ? (* src = "./src/memory_syn.v:36" *) _132_[9] : 1'hx;
  assign _003_[0] = reset ? (* src = "./src/memory_syn.v:36" *) _133_[0] : 1'hx;
  assign _003_[1] = reset ? (* src = "./src/memory_syn.v:36" *) _133_[1] : 1'hx;
  assign _003_[2] = reset ? (* src = "./src/memory_syn.v:36" *) _133_[2] : 1'hx;
  assign _105_[0] = _071_ ? _000_[31] : _104_[0];
  assign _105_[1] = _071_ ? _000_[31] : _104_[1];
  assign _105_[2] = _071_ ? _000_[31] : _104_[2];
  assign _105_[3] = _071_ ? _000_[31] : _104_[3];
  assign _105_[4] = _071_ ? _000_[31] : _104_[4];
  assign _105_[5] = _071_ ? _000_[31] : _104_[5];
  assign _105_[6] = _071_ ? _000_[31] : _104_[6];
  assign _105_[7] = _071_ ? _000_[31] : _104_[7];
  assign _105_[8] = _071_ ? _000_[31] : _104_[8];
  assign _105_[9] = _071_ ? _000_[31] : _104_[9];
  assign _106_[0] = _072_ ? _000_[31] : _105_[0];
  assign _106_[1] = _072_ ? _000_[31] : _105_[1];
  assign _106_[2] = _072_ ? _000_[31] : _105_[2];
  assign _106_[3] = _072_ ? _000_[31] : _105_[3];
  assign _106_[4] = _072_ ? _000_[31] : _105_[4];
  assign _106_[5] = _072_ ? _000_[31] : _105_[5];
  assign _106_[6] = _072_ ? _000_[31] : _105_[6];
  assign _106_[7] = _072_ ? _000_[31] : _105_[7];
  assign _106_[8] = _072_ ? _000_[31] : _105_[8];
  assign _106_[9] = _072_ ? _000_[31] : _105_[9];
  assign _007_ = _005_[9] ? 1'h1 : _001_[9];
  assign _110_[0] = _064_ ? _000_[31] : _109_[0];
  assign _110_[1] = _064_ ? _000_[31] : _109_[1];
  assign _110_[2] = _064_ ? _000_[31] : _109_[2];
  assign _110_[3] = _064_ ? _000_[31] : _109_[3];
  assign _110_[4] = _064_ ? _000_[31] : _109_[4];
  assign _110_[5] = _064_ ? _000_[31] : _109_[5];
  assign _110_[6] = _064_ ? _000_[31] : _109_[6];
  assign _110_[7] = _064_ ? _000_[31] : _109_[7];
  assign _110_[8] = _064_ ? _000_[31] : _109_[8];
  assign _110_[9] = _064_ ? _000_[31] : _109_[9];
  assign _111_[0] = _065_ ? _000_[31] : _110_[0];
  assign _111_[1] = _065_ ? _000_[31] : _110_[1];
  assign _111_[2] = _065_ ? _000_[31] : _110_[2];
  assign _111_[3] = _065_ ? _000_[31] : _110_[3];
  assign _111_[4] = _065_ ? _000_[31] : _110_[4];
  assign _111_[5] = _065_ ? _000_[31] : _110_[5];
  assign _111_[6] = _065_ ? _000_[31] : _110_[6];
  assign _111_[7] = _065_ ? _000_[31] : _110_[7];
  assign _111_[8] = _065_ ? _000_[31] : _110_[8];
  assign _111_[9] = _065_ ? _000_[31] : _110_[9];
  assign _112_[0] = _074_ ? _048_[0] : _111_[0];
  assign _112_[1] = _074_ ? _048_[1] : _111_[1];
  assign _112_[2] = _074_ ? _048_[2] : _111_[2];
  assign _112_[3] = _074_ ? _048_[3] : _111_[3];
  assign _112_[4] = _074_ ? _048_[4] : _111_[4];
  assign _112_[5] = _074_ ? _048_[5] : _111_[5];
  assign _112_[6] = _074_ ? _048_[6] : _111_[6];
  assign _112_[7] = _074_ ? _048_[7] : _111_[7];
  assign _112_[8] = _074_ ? _048_[8] : _111_[8];
  assign _112_[9] = _074_ ? _048_[9] : _111_[9];
  assign _113_[0] = _071_ ? _000_[31] : \mem[5] [0];
  assign _113_[1] = _071_ ? _000_[31] : \mem[5] [1];
  assign _113_[2] = _071_ ? _000_[31] : \mem[5] [2];
  assign _113_[3] = _071_ ? _000_[31] : \mem[5] [3];
  assign _113_[4] = _071_ ? _000_[31] : \mem[5] [4];
  assign _113_[5] = _071_ ? _000_[31] : \mem[5] [5];
  assign _113_[6] = _071_ ? _000_[31] : \mem[5] [6];
  assign _113_[7] = _071_ ? _000_[31] : \mem[5] [7];
  assign _113_[8] = _071_ ? _000_[31] : \mem[5] [8];
  assign _113_[9] = _071_ ? _000_[31] : \mem[5] [9];
  assign _114_[0] = _072_ ? _000_[31] : _113_[0];
  assign _114_[1] = _072_ ? _000_[31] : _113_[1];
  assign _114_[2] = _072_ ? _000_[31] : _113_[2];
  assign _114_[3] = _072_ ? _000_[31] : _113_[3];
  assign _114_[4] = _072_ ? _000_[31] : _113_[4];
  assign _114_[5] = _072_ ? _000_[31] : _113_[5];
  assign _114_[6] = _072_ ? _000_[31] : _113_[6];
  assign _114_[7] = _072_ ? _000_[31] : _113_[7];
  assign _114_[8] = _072_ ? _000_[31] : _113_[8];
  assign _114_[9] = _072_ ? _000_[31] : _113_[9];
  assign _115_[0] = _069_ ? _000_[31] : _114_[0];
  assign _115_[1] = _069_ ? _000_[31] : _114_[1];
  assign _115_[2] = _069_ ? _000_[31] : _114_[2];
  assign _115_[3] = _069_ ? _000_[31] : _114_[3];
  assign _115_[4] = _069_ ? _000_[31] : _114_[4];
  assign _115_[5] = _069_ ? _000_[31] : _114_[5];
  assign _115_[6] = _069_ ? _000_[31] : _114_[6];
  assign _115_[7] = _069_ ? _000_[31] : _114_[7];
  assign _115_[8] = _069_ ? _000_[31] : _114_[8];
  assign _115_[9] = _069_ ? _000_[31] : _114_[9];
  assign _116_[0] = _070_ ? _000_[31] : _115_[0];
  assign _116_[1] = _070_ ? _000_[31] : _115_[1];
  assign _116_[2] = _070_ ? _000_[31] : _115_[2];
  assign _116_[3] = _070_ ? _000_[31] : _115_[3];
  assign _116_[4] = _070_ ? _000_[31] : _115_[4];
  assign _116_[5] = _070_ ? _000_[31] : _115_[5];
  assign _116_[6] = _070_ ? _000_[31] : _115_[6];
  assign _116_[7] = _070_ ? _000_[31] : _115_[7];
  assign _116_[8] = _070_ ? _000_[31] : _115_[8];
  assign _116_[9] = _070_ ? _000_[31] : _115_[9];
  assign _117_[0] = _075_ ? _048_[0] : _116_[0];
  assign _117_[1] = _075_ ? _048_[1] : _116_[1];
  assign _117_[2] = _075_ ? _048_[2] : _116_[2];
  assign _117_[3] = _075_ ? _048_[3] : _116_[3];
  assign _117_[4] = _075_ ? _048_[4] : _116_[4];
  assign _117_[5] = _075_ ? _048_[5] : _116_[5];
  assign _117_[6] = _075_ ? _048_[6] : _116_[6];
  assign _117_[7] = _075_ ? _048_[7] : _116_[7];
  assign _117_[8] = _075_ ? _048_[8] : _116_[8];
  assign _117_[9] = _075_ ? _048_[9] : _116_[9];
  assign _118_[0] = _076_ ? _000_[31] : \mem[6] [0];
  assign _118_[1] = _076_ ? _000_[31] : \mem[6] [1];
  assign _118_[2] = _076_ ? _000_[31] : \mem[6] [2];
  assign _118_[3] = _076_ ? _000_[31] : \mem[6] [3];
  assign _118_[4] = _076_ ? _000_[31] : \mem[6] [4];
  assign _118_[5] = _076_ ? _000_[31] : \mem[6] [5];
  assign _118_[6] = _076_ ? _000_[31] : \mem[6] [6];
  assign _118_[7] = _076_ ? _000_[31] : \mem[6] [7];
  assign _118_[8] = _076_ ? _000_[31] : \mem[6] [8];
  assign _118_[9] = _076_ ? _000_[31] : \mem[6] [9];
  assign _119_[0] = _077_ ? _000_[31] : _118_[0];
  assign _119_[1] = _077_ ? _000_[31] : _118_[1];
  assign _119_[2] = _077_ ? _000_[31] : _118_[2];
  assign _119_[3] = _077_ ? _000_[31] : _118_[3];
  assign _119_[4] = _077_ ? _000_[31] : _118_[4];
  assign _119_[5] = _077_ ? _000_[31] : _118_[5];
  assign _119_[6] = _077_ ? _000_[31] : _118_[6];
  assign _119_[7] = _077_ ? _000_[31] : _118_[7];
  assign _119_[8] = _077_ ? _000_[31] : _118_[8];
  assign _119_[9] = _077_ ? _000_[31] : _118_[9];
  assign _120_[0] = _078_ ? _000_[31] : _119_[0];
  assign _120_[1] = _078_ ? _000_[31] : _119_[1];
  assign _120_[2] = _078_ ? _000_[31] : _119_[2];
  assign _120_[3] = _078_ ? _000_[31] : _119_[3];
  assign _120_[4] = _078_ ? _000_[31] : _119_[4];
  assign _120_[5] = _078_ ? _000_[31] : _119_[5];
  assign _120_[6] = _078_ ? _000_[31] : _119_[6];
  assign _120_[7] = _078_ ? _000_[31] : _119_[7];
  assign _120_[8] = _078_ ? _000_[31] : _119_[8];
  assign _120_[9] = _078_ ? _000_[31] : _119_[9];
  assign _121_[0] = _077_ ? _000_[31] : _120_[0];
  assign _121_[1] = _077_ ? _000_[31] : _120_[1];
  assign _121_[2] = _077_ ? _000_[31] : _120_[2];
  assign _121_[3] = _077_ ? _000_[31] : _120_[3];
  assign _121_[4] = _077_ ? _000_[31] : _120_[4];
  assign _121_[5] = _077_ ? _000_[31] : _120_[5];
  assign _121_[6] = _077_ ? _000_[31] : _120_[6];
  assign _121_[7] = _077_ ? _000_[31] : _120_[7];
  assign _121_[8] = _077_ ? _000_[31] : _120_[8];
  assign _121_[9] = _077_ ? _000_[31] : _120_[9];
  assign _122_[0] = _078_ ? _000_[31] : _121_[0];
  assign _122_[1] = _078_ ? _000_[31] : _121_[1];
  assign _122_[2] = _078_ ? _000_[31] : _121_[2];
  assign _122_[3] = _078_ ? _000_[31] : _121_[3];
  assign _122_[4] = _078_ ? _000_[31] : _121_[4];
  assign _122_[5] = _078_ ? _000_[31] : _121_[5];
  assign _122_[6] = _078_ ? _000_[31] : _121_[6];
  assign _122_[7] = _078_ ? _000_[31] : _121_[7];
  assign _122_[8] = _078_ ? _000_[31] : _121_[8];
  assign _122_[9] = _078_ ? _000_[31] : _121_[9];
  assign _123_[0] = _079_ ? _048_[0] : _122_[0];
  assign _123_[1] = _079_ ? _048_[1] : _122_[1];
  assign _123_[2] = _079_ ? _048_[2] : _122_[2];
  assign _123_[3] = _079_ ? _048_[3] : _122_[3];
  assign _123_[4] = _079_ ? _048_[4] : _122_[4];
  assign _123_[5] = _079_ ? _048_[5] : _122_[5];
  assign _123_[6] = _079_ ? _048_[6] : _122_[6];
  assign _123_[7] = _079_ ? _048_[7] : _122_[7];
  assign _123_[8] = _079_ ? _048_[8] : _122_[8];
  assign _123_[9] = _079_ ? _048_[9] : _122_[9];
  assign _124_[0] = _080_ ? _000_[31] : \mem[7] [0];
  assign _124_[1] = _080_ ? _000_[31] : \mem[7] [1];
  assign _124_[2] = _080_ ? _000_[31] : \mem[7] [2];
  assign _124_[3] = _080_ ? _000_[31] : \mem[7] [3];
  assign _124_[4] = _080_ ? _000_[31] : \mem[7] [4];
  assign _124_[5] = _080_ ? _000_[31] : \mem[7] [5];
  assign _124_[6] = _080_ ? _000_[31] : \mem[7] [6];
  assign _124_[7] = _080_ ? _000_[31] : \mem[7] [7];
  assign _124_[8] = _080_ ? _000_[31] : \mem[7] [8];
  assign _124_[9] = _080_ ? _000_[31] : \mem[7] [9];
  assign _125_[0] = _081_ ? _000_[31] : _124_[0];
  assign _125_[1] = _081_ ? _000_[31] : _124_[1];
  assign _125_[2] = _081_ ? _000_[31] : _124_[2];
  assign _125_[3] = _081_ ? _000_[31] : _124_[3];
  assign _125_[4] = _081_ ? _000_[31] : _124_[4];
  assign _125_[5] = _081_ ? _000_[31] : _124_[5];
  assign _125_[6] = _081_ ? _000_[31] : _124_[6];
  assign _125_[7] = _081_ ? _000_[31] : _124_[7];
  assign _125_[8] = _081_ ? _000_[31] : _124_[8];
  assign _125_[9] = _081_ ? _000_[31] : _124_[9];
  assign _126_[0] = _082_ ? _000_[31] : _125_[0];
  assign _126_[1] = _082_ ? _000_[31] : _125_[1];
  assign _126_[2] = _082_ ? _000_[31] : _125_[2];
  assign _126_[3] = _082_ ? _000_[31] : _125_[3];
  assign _126_[4] = _082_ ? _000_[31] : _125_[4];
  assign _126_[5] = _082_ ? _000_[31] : _125_[5];
  assign _126_[6] = _082_ ? _000_[31] : _125_[6];
  assign _126_[7] = _082_ ? _000_[31] : _125_[7];
  assign _126_[8] = _082_ ? _000_[31] : _125_[8];
  assign _126_[9] = _082_ ? _000_[31] : _125_[9];
  assign _127_[0] = _083_ ? _000_[31] : _126_[0];
  assign _127_[1] = _083_ ? _000_[31] : _126_[1];
  assign _127_[2] = _083_ ? _000_[31] : _126_[2];
  assign _127_[3] = _083_ ? _000_[31] : _126_[3];
  assign _127_[4] = _083_ ? _000_[31] : _126_[4];
  assign _127_[5] = _083_ ? _000_[31] : _126_[5];
  assign _127_[6] = _083_ ? _000_[31] : _126_[6];
  assign _127_[7] = _083_ ? _000_[31] : _126_[7];
  assign _127_[8] = _083_ ? _000_[31] : _126_[8];
  assign _127_[9] = _083_ ? _000_[31] : _126_[9];
  assign _128_[0] = _082_ ? _000_[31] : _127_[0];
  assign _128_[1] = _082_ ? _000_[31] : _127_[1];
  assign _128_[2] = _082_ ? _000_[31] : _127_[2];
  assign _128_[3] = _082_ ? _000_[31] : _127_[3];
  assign _128_[4] = _082_ ? _000_[31] : _127_[4];
  assign _128_[5] = _082_ ? _000_[31] : _127_[5];
  assign _128_[6] = _082_ ? _000_[31] : _127_[6];
  assign _128_[7] = _082_ ? _000_[31] : _127_[7];
  assign _128_[8] = _082_ ? _000_[31] : _127_[8];
  assign _128_[9] = _082_ ? _000_[31] : _127_[9];
  assign _129_[0] = _083_ ? _000_[31] : _128_[0];
  assign _129_[1] = _083_ ? _000_[31] : _128_[1];
  assign _129_[2] = _083_ ? _000_[31] : _128_[2];
  assign _129_[3] = _083_ ? _000_[31] : _128_[3];
  assign _129_[4] = _083_ ? _000_[31] : _128_[4];
  assign _129_[5] = _083_ ? _000_[31] : _128_[5];
  assign _129_[6] = _083_ ? _000_[31] : _128_[6];
  assign _129_[7] = _083_ ? _000_[31] : _128_[7];
  assign _129_[8] = _083_ ? _000_[31] : _128_[8];
  assign _129_[9] = _083_ ? _000_[31] : _128_[9];
  assign _130_[0] = _084_ ? _048_[0] : _129_[0];
  assign _130_[1] = _084_ ? _048_[1] : _129_[1];
  assign _130_[2] = _084_ ? _048_[2] : _129_[2];
  assign _130_[3] = _084_ ? _048_[3] : _129_[3];
  assign _130_[4] = _084_ ? _048_[4] : _129_[4];
  assign _130_[5] = _084_ ? _048_[5] : _129_[5];
  assign _130_[6] = _084_ ? _048_[6] : _129_[6];
  assign _130_[7] = _084_ ? _048_[7] : _129_[7];
  assign _130_[8] = _084_ ? _048_[8] : _129_[8];
  assign _130_[9] = _084_ ? _048_[9] : _129_[9];
  assign _044_ = ~_047_;
  assign _043_ = ~_046_;
  assign _042_ = ~_045_;
  assign _041_ = ~_002_[0];
  assign _014_ = ~_000_[31];
  DFF _731_ (
    .C(clk),
    .D(_091_[0]),
    .Q(\mem[0] [0])
  );
  DFF _732_ (
    .C(clk),
    .D(_091_[1]),
    .Q(\mem[0] [1])
  );
  DFF _733_ (
    .C(clk),
    .D(_091_[2]),
    .Q(\mem[0] [2])
  );
  DFF _734_ (
    .C(clk),
    .D(_091_[3]),
    .Q(\mem[0] [3])
  );
  DFF _735_ (
    .C(clk),
    .D(_091_[4]),
    .Q(\mem[0] [4])
  );
  DFF _736_ (
    .C(clk),
    .D(_091_[5]),
    .Q(\mem[0] [5])
  );
  DFF _737_ (
    .C(clk),
    .D(_091_[6]),
    .Q(\mem[0] [6])
  );
  DFF _738_ (
    .C(clk),
    .D(_091_[7]),
    .Q(\mem[0] [7])
  );
  DFF _739_ (
    .C(clk),
    .D(_091_[8]),
    .Q(\mem[0] [8])
  );
  DFF _740_ (
    .C(clk),
    .D(_091_[9]),
    .Q(\mem[0] [9])
  );
  DFF _741_ (
    .C(clk),
    .D(_112_[0]),
    .Q(\mem[4] [0])
  );
  DFF _742_ (
    .C(clk),
    .D(_112_[1]),
    .Q(\mem[4] [1])
  );
  DFF _743_ (
    .C(clk),
    .D(_112_[2]),
    .Q(\mem[4] [2])
  );
  DFF _744_ (
    .C(clk),
    .D(_112_[3]),
    .Q(\mem[4] [3])
  );
  DFF _745_ (
    .C(clk),
    .D(_112_[4]),
    .Q(\mem[4] [4])
  );
  DFF _746_ (
    .C(clk),
    .D(_112_[5]),
    .Q(\mem[4] [5])
  );
  DFF _747_ (
    .C(clk),
    .D(_112_[6]),
    .Q(\mem[4] [6])
  );
  DFF _748_ (
    .C(clk),
    .D(_112_[7]),
    .Q(\mem[4] [7])
  );
  DFF _749_ (
    .C(clk),
    .D(_112_[8]),
    .Q(\mem[4] [8])
  );
  DFF _750_ (
    .C(clk),
    .D(_112_[9]),
    .Q(\mem[4] [9])
  );
  DFF _751_ (
    .C(clk),
    .D(_130_[0]),
    .Q(\mem[7] [0])
  );
  DFF _752_ (
    .C(clk),
    .D(_130_[1]),
    .Q(\mem[7] [1])
  );
  DFF _753_ (
    .C(clk),
    .D(_130_[2]),
    .Q(\mem[7] [2])
  );
  DFF _754_ (
    .C(clk),
    .D(_130_[3]),
    .Q(\mem[7] [3])
  );
  DFF _755_ (
    .C(clk),
    .D(_130_[4]),
    .Q(\mem[7] [4])
  );
  DFF _756_ (
    .C(clk),
    .D(_130_[5]),
    .Q(\mem[7] [5])
  );
  DFF _757_ (
    .C(clk),
    .D(_130_[6]),
    .Q(\mem[7] [6])
  );
  DFF _758_ (
    .C(clk),
    .D(_130_[7]),
    .Q(\mem[7] [7])
  );
  DFF _759_ (
    .C(clk),
    .D(_130_[8]),
    .Q(\mem[7] [8])
  );
  DFF _760_ (
    .C(clk),
    .D(_130_[9]),
    .Q(\mem[7] [9])
  );
  DFF _761_ (
    .C(clk),
    .D(_123_[0]),
    .Q(\mem[6] [0])
  );
  DFF _762_ (
    .C(clk),
    .D(_123_[1]),
    .Q(\mem[6] [1])
  );
  DFF _763_ (
    .C(clk),
    .D(_123_[2]),
    .Q(\mem[6] [2])
  );
  DFF _764_ (
    .C(clk),
    .D(_123_[3]),
    .Q(\mem[6] [3])
  );
  DFF _765_ (
    .C(clk),
    .D(_123_[4]),
    .Q(\mem[6] [4])
  );
  DFF _766_ (
    .C(clk),
    .D(_123_[5]),
    .Q(\mem[6] [5])
  );
  DFF _767_ (
    .C(clk),
    .D(_123_[6]),
    .Q(\mem[6] [6])
  );
  DFF _768_ (
    .C(clk),
    .D(_123_[7]),
    .Q(\mem[6] [7])
  );
  DFF _769_ (
    .C(clk),
    .D(_123_[8]),
    .Q(\mem[6] [8])
  );
  DFF _770_ (
    .C(clk),
    .D(_123_[9]),
    .Q(\mem[6] [9])
  );
  (* src = "./src/memory_syn.v:49" *)
  DFF _771_ (
    .C(clk),
    .D(_006_[0]),
    .Q(ff_mem[0])
  );
  (* src = "./src/memory_syn.v:49" *)
  DFF _772_ (
    .C(clk),
    .D(_006_[1]),
    .Q(ff_mem[1])
  );
  (* src = "./src/memory_syn.v:49" *)
  DFF _773_ (
    .C(clk),
    .D(_006_[2]),
    .Q(ff_mem[2])
  );
  (* src = "./src/memory_syn.v:49" *)
  DFF _774_ (
    .C(clk),
    .D(_006_[3]),
    .Q(ff_mem[3])
  );
  (* src = "./src/memory_syn.v:49" *)
  DFF _775_ (
    .C(clk),
    .D(_006_[4]),
    .Q(ff_mem[4])
  );
  (* src = "./src/memory_syn.v:49" *)
  DFF _776_ (
    .C(clk),
    .D(_006_[5]),
    .Q(ff_mem[5])
  );
  (* src = "./src/memory_syn.v:49" *)
  DFF _777_ (
    .C(clk),
    .D(_006_[6]),
    .Q(ff_mem[6])
  );
  (* src = "./src/memory_syn.v:49" *)
  DFF _778_ (
    .C(clk),
    .D(_006_[7]),
    .Q(ff_mem[7])
  );
  DFF _779_ (
    .C(clk),
    .D(_117_[0]),
    .Q(\mem[5] [0])
  );
  DFF _780_ (
    .C(clk),
    .D(_117_[1]),
    .Q(\mem[5] [1])
  );
  DFF _781_ (
    .C(clk),
    .D(_117_[2]),
    .Q(\mem[5] [2])
  );
  DFF _782_ (
    .C(clk),
    .D(_117_[3]),
    .Q(\mem[5] [3])
  );
  DFF _783_ (
    .C(clk),
    .D(_117_[4]),
    .Q(\mem[5] [4])
  );
  DFF _784_ (
    .C(clk),
    .D(_117_[5]),
    .Q(\mem[5] [5])
  );
  DFF _785_ (
    .C(clk),
    .D(_117_[6]),
    .Q(\mem[5] [6])
  );
  DFF _786_ (
    .C(clk),
    .D(_117_[7]),
    .Q(\mem[5] [7])
  );
  DFF _787_ (
    .C(clk),
    .D(_117_[8]),
    .Q(\mem[5] [8])
  );
  DFF _788_ (
    .C(clk),
    .D(_117_[9]),
    .Q(\mem[5] [9])
  );
  DFF _789_ (
    .C(clk),
    .D(_107_[0]),
    .Q(\mem[3] [0])
  );
  DFF _790_ (
    .C(clk),
    .D(_107_[1]),
    .Q(\mem[3] [1])
  );
  DFF _791_ (
    .C(clk),
    .D(_107_[2]),
    .Q(\mem[3] [2])
  );
  DFF _792_ (
    .C(clk),
    .D(_107_[3]),
    .Q(\mem[3] [3])
  );
  DFF _793_ (
    .C(clk),
    .D(_107_[4]),
    .Q(\mem[3] [4])
  );
  DFF _794_ (
    .C(clk),
    .D(_107_[5]),
    .Q(\mem[3] [5])
  );
  DFF _795_ (
    .C(clk),
    .D(_107_[6]),
    .Q(\mem[3] [6])
  );
  DFF _796_ (
    .C(clk),
    .D(_107_[7]),
    .Q(\mem[3] [7])
  );
  DFF _797_ (
    .C(clk),
    .D(_107_[8]),
    .Q(\mem[3] [8])
  );
  DFF _798_ (
    .C(clk),
    .D(_107_[9]),
    .Q(\mem[3] [9])
  );
  DFF _799_ (
    .C(clk),
    .D(_102_[0]),
    .Q(\mem[2] [0])
  );
  DFF _800_ (
    .C(clk),
    .D(_102_[1]),
    .Q(\mem[2] [1])
  );
  DFF _801_ (
    .C(clk),
    .D(_102_[2]),
    .Q(\mem[2] [2])
  );
  DFF _802_ (
    .C(clk),
    .D(_102_[3]),
    .Q(\mem[2] [3])
  );
  DFF _803_ (
    .C(clk),
    .D(_102_[4]),
    .Q(\mem[2] [4])
  );
  DFF _804_ (
    .C(clk),
    .D(_102_[5]),
    .Q(\mem[2] [5])
  );
  DFF _805_ (
    .C(clk),
    .D(_102_[6]),
    .Q(\mem[2] [6])
  );
  DFF _806_ (
    .C(clk),
    .D(_102_[7]),
    .Q(\mem[2] [7])
  );
  DFF _807_ (
    .C(clk),
    .D(_102_[8]),
    .Q(\mem[2] [8])
  );
  DFF _808_ (
    .C(clk),
    .D(_102_[9]),
    .Q(\mem[2] [9])
  );
  DFF _809_ (
    .C(clk),
    .D(_097_[0]),
    .Q(\mem[1] [0])
  );
  DFF _810_ (
    .C(clk),
    .D(_097_[1]),
    .Q(\mem[1] [1])
  );
  DFF _811_ (
    .C(clk),
    .D(_097_[2]),
    .Q(\mem[1] [2])
  );
  DFF _812_ (
    .C(clk),
    .D(_097_[3]),
    .Q(\mem[1] [3])
  );
  DFF _813_ (
    .C(clk),
    .D(_097_[4]),
    .Q(\mem[1] [4])
  );
  DFF _814_ (
    .C(clk),
    .D(_097_[5]),
    .Q(\mem[1] [5])
  );
  DFF _815_ (
    .C(clk),
    .D(_097_[6]),
    .Q(\mem[1] [6])
  );
  DFF _816_ (
    .C(clk),
    .D(_097_[7]),
    .Q(\mem[1] [7])
  );
  DFF _817_ (
    .C(clk),
    .D(_097_[8]),
    .Q(\mem[1] [8])
  );
  DFF _818_ (
    .C(clk),
    .D(_097_[9]),
    .Q(\mem[1] [9])
  );
  assign _025_ = _041_ & _020_;
  assign _065_ = _025_ & _001_[9];
  assign _026_ = _000_[31] & _041_;
  assign _027_ = _014_ & _026_;
  assign _028_ = _041_ & _026_;
  assign _067_ = _028_ & _001_[9];
  assign _029_ = _046_ & _044_;
  assign _030_ = _042_ & _029_;
  assign _068_ = _030_ & _007_;
  assign _064_ = _024_ & _001_[9];
  assign _024_ = _014_ & _020_;
  assign _020_ = _002_[0] & _014_;
  assign _066_ = _027_ & _001_[9];
  assign _069_ = _031_ & _001_[9];
  assign _031_ = _000_[31] & _020_;
  assign _071_ = _033_ & _001_[9];
  assign _033_ = _000_[31] & _026_;
  assign _070_ = _032_ & _001_[9];
  assign _032_ = _002_[0] & _020_;
  assign _059_ = _019_ & _007_;
  assign _018_ = _043_ & _044_;
  assign _019_ = _042_ & _018_;
  assign _058_ = _017_ & _001_[9];
  assign _017_ = _041_ & _015_;
  assign _063_ = _023_ & _007_;
  assign _023_ = _045_ & _018_;
  assign _062_ = _022_ & _001_[9];
  assign _022_ = _002_[0] & _015_;
  assign _061_ = _021_ & _001_[9];
  assign _021_ = _000_[31] & _015_;
  assign _060_ = _020_ & _001_[9];
  assign _057_ = _016_ & _001_[9];
  assign _016_ = _014_ & _015_;
  assign _015_ = _041_ & _014_;
  assign _056_ = _015_ & _001_[9];
  assign _073_ = _035_ & _007_;
  assign _055_ = _014_ & _001_[9];
  assign _034_ = _002_[0] & _026_;
  assign _072_ = _034_ & _001_[9];
  assign _035_ = _045_ & _029_;
  assign _036_ = _043_ & _047_;
  assign _037_ = _042_ & _036_;
  assign _074_ = _037_ & _007_;
  assign _038_ = _045_ & _036_;
  assign _075_ = _038_ & _007_;
  assign _076_ = _026_ & _001_[9];
  assign _010_ = _002_[0] & _000_[31];
  assign _039_ = _014_ & _010_;
  assign _077_ = _039_ & _001_[9];
  assign _040_ = _041_ & _010_;
  assign _078_ = _040_ & _001_[9];
  assign _008_ = _046_ & _047_;
  assign _009_ = _042_ & _008_;
  assign _079_ = _009_ & _007_;
  assign _080_ = _000_[31] & _001_[9];
  assign _081_ = _010_ & _001_[9];
  assign _011_ = _000_[31] & _010_;
  assign _082_ = _011_ & _001_[9];
  assign _012_ = _002_[0] & _010_;
  assign _083_ = _012_ & _001_[9];
  assign _013_ = _045_ & _008_;
  assign _084_ = _013_ & _007_;
  assign _000_[30:0] = { _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31] };
  assign _001_[8:0] = { _001_[9], _001_[9], _001_[9], _001_[9], _001_[9], _001_[9], _001_[9], _001_[9], _001_[9] };
  assign _002_[31:1] = { _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31], _000_[31] };
  assign _005_[8:0] = { _005_[9], _005_[9], _005_[9], _005_[9], _005_[9], _005_[9], _005_[9], _005_[9], _005_[9] };
  assign i = 32'd7;
endmodule

(* dynports =  1  *)
(* top =  1  *)
(* src = "./src/class.v:18" *)
module classswitching_syn(reset, clk, in, out0, out1, almost_full0, almost_empty0, fifo0_empty, fifo0_error, fifo0_pause, fifo_full0, fifo_full1, almost_full1, almost_empty1, fifo1_empty, fifo1_error, fifo1_pause, Error);
  (* src = "./src/class.v:40" *)
  output Error;
  (* src = "./src/class.v:144" *)
  wire Error_F;
  (* src = "./src/class.v:44" *)
  wire PP0;
  (* src = "./src/class.v:44" *)
  wire PP1;
  (* src = "./src/class.v:29" *)
  output almost_empty0;
  (* src = "./src/class.v:36" *)
  output almost_empty1;
  (* src = "./src/class.v:28" *)
  output almost_full0;
  (* src = "./src/class.v:35" *)
  output almost_full1;
  (* src = "./src/class.v:24" *)
  input clk;
  (* src = "./src/class.v:30" *)
  output fifo0_empty;
  (* src = "./src/class.v:31" *)
  output fifo0_error;
  (* src = "./src/class.v:32" *)
  output fifo0_pause;
  (* src = "./src/class.v:37" *)
  output fifo1_empty;
  (* src = "./src/class.v:38" *)
  output fifo1_error;
  (* src = "./src/class.v:39" *)
  output fifo1_pause;
  (* src = "./src/class.v:33" *)
  output fifo_full0;
  (* src = "./src/class.v:34" *)
  output fifo_full1;
  (* src = "./src/class.v:25" *)
  input [9:0] in;
  (* src = "./src/class.v:57" *)
  wire [9:0] n0;
  (* src = "./src/class.v:58" *)
  wire [9:0] n1;
  (* src = "./src/class.v:59" *)
  wire [9:0] n2;
  (* src = "./src/class.v:60" *)
  wire [9:0] n3;
  (* src = "./src/class.v:56" *)
  wire n_Fifo_full0;
  (* src = "./src/class.v:68" *)
  wire n_Fifo_full1;
  (* src = "./src/class.v:52" *)
  wire n_almost_empty0;
  (* src = "./src/class.v:64" *)
  wire n_almost_empty1;
  (* src = "./src/class.v:51" *)
  wire n_almost_full0;
  (* src = "./src/class.v:63" *)
  wire n_almost_full1;
  (* src = "./src/class.v:53" *)
  wire n_fifo0_empty;
  (* src = "./src/class.v:54" *)
  wire n_fifo0_error;
  (* src = "./src/class.v:55" *)
  wire n_fifo0_pause;
  (* src = "./src/class.v:65" *)
  wire n_fifo1_empty;
  (* src = "./src/class.v:66" *)
  wire n_fifo1_error;
  (* src = "./src/class.v:67" *)
  wire n_fifo1_pause;
  (* src = "./src/class.v:26" *)
  output [9:0] out0;
  (* src = "./src/class.v:27" *)
  output [9:0] out1;
  (* src = "./src/class.v:46" *)
  wire read0;
  (* src = "./src/class.v:47" *)
  wire read1;
  (* src = "./src/class.v:23" *)
  input reset;
  (* src = "./src/class.v:48" *)
  wire write0;
  (* src = "./src/class.v:49" *)
  wire write1;
  (* module_not_derived = 32'd1 *)
  (* src = "./src/class.v:123" *)
  dfcontrol_syn datacontrol (
    .Error(Error_F),
    .Fifo_full1(n_Fifo_full0),
    .Fifo_full2(n_Fifo_full1),
    .almost_empty1(n_almost_empty0),
    .almost_empty2(n_almost_empty1),
    .almost_full1(n_almost_full0),
    .almost_full2(n_almost_full1),
    .clk(clk),
    .fifo_empty1(n_fifo0_empty),
    .fifo_empty2(n_fifo1_empty),
    .fifo_error1(n_fifo0_error),
    .fifo_error2(n_fifo1_error),
    .fifo_pause1(n_fifo0_pause),
    .fifo_pause2(n_fifo1_pause),
    .push_0(PP0),
    .push_1(PP1),
    .read1(read0),
    .read2(read1),
    .reset(reset),
    .write1(write0),
    .write2(write1)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "./src/class.v:71" *)
  demux12_syn demux12_synA (
    .classif(in[9]),
    .clk(clk),
    .in(in),
    .out0(n0),
    .out1(n1),
    .push_0(PP0),
    .push_1(PP1),
    .reset(reset)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "./src/class.v:84" *)
  fifo_8x10_syn fifo1 (
    .Fifo_full(n_Fifo_full0),
    .almost_empty(n_almost_empty0),
    .almost_full(n_almost_full0),
    .clk(clk),
    .data_in_push(n0),
    .data_out_pop(n2),
    .fifo_empty(n_fifo0_empty),
    .fifo_error(n_fifo0_error),
    .fifo_pause(n_fifo0_pause),
    .read(read0),
    .reset(reset),
    .write(write0)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "./src/class.v:101" *)
  fifo_8x10_syn fifo2 (
    .Fifo_full(n_Fifo_full1),
    .almost_empty(n_almost_empty1),
    .almost_full(n_almost_full1),
    .clk(clk),
    .data_in_push(n1),
    .data_out_pop(n3),
    .fifo_empty(n_fifo1_empty),
    .fifo_error(n_fifo1_error),
    .fifo_pause(n_fifo1_pause),
    .read(read1),
    .reset(reset),
    .write(write1)
  );
  assign Error = Error_F;
  assign almost_empty0 = n_almost_empty0;
  assign almost_empty1 = n_almost_empty1;
  assign almost_full0 = n_almost_full0;
  assign almost_full1 = n_almost_full1;
  assign fifo0_empty = n_fifo0_empty;
  assign fifo0_error = n_fifo0_error;
  assign fifo0_pause = n_fifo0_pause;
  assign fifo1_empty = n_fifo1_empty;
  assign fifo1_error = n_fifo1_error;
  assign fifo1_pause = n_fifo1_pause;
  assign fifo_full0 = n_Fifo_full0;
  assign fifo_full1 = n_Fifo_full1;
  assign out0 = n2;
  assign out1 = n3;
endmodule

(* src = "./src/demux1x2_behav.v:12" *)
module demux12_syn(reset, clk, in, classif, push_0, push_1, out0, out1);
  (* src = "./src/demux1x2_behav.v:24" *)
  wire [9:0] _00_;
  (* src = "./src/demux1x2_behav.v:24" *)
  wire [9:0] _01_;
  (* src = "./src/demux1x2_behav.v:24" *)
  wire _02_;
  (* src = "./src/demux1x2_behav.v:24" *)
  wire _03_;
  wire _04_;
  wire [9:0] _05_;
  wire [9:0] _06_;
  (* src = "./src/demux1x2_behav.v:16" *)
  input classif;
  (* src = "./src/demux1x2_behav.v:14" *)
  input clk;
  (* src = "./src/demux1x2_behav.v:15" *)
  input [9:0] in;
  (* src = "./src/demux1x2_behav.v:19" *)
  output [9:0] out0;
  (* src = "./src/demux1x2_behav.v:20" *)
  output [9:0] out1;
  (* src = "./src/demux1x2_behav.v:17" *)
  output push_0;
  (* src = "./src/demux1x2_behav.v:18" *)
  output push_1;
  (* src = "./src/demux1x2_behav.v:13" *)
  input reset;
  assign _02_ = reset ? (* src = "./src/demux1x2_behav.v:25" *) _04_ : 1'h0;
  assign _00_[0] = reset ? (* src = "./src/demux1x2_behav.v:25" *) _06_[0] : 1'h0;
  assign _00_[1] = reset ? (* src = "./src/demux1x2_behav.v:25" *) _06_[1] : 1'h0;
  assign _00_[2] = reset ? (* src = "./src/demux1x2_behav.v:25" *) _06_[2] : 1'h0;
  assign _00_[3] = reset ? (* src = "./src/demux1x2_behav.v:25" *) _06_[3] : 1'h0;
  assign _00_[4] = reset ? (* src = "./src/demux1x2_behav.v:25" *) _06_[4] : 1'h0;
  assign _00_[5] = reset ? (* src = "./src/demux1x2_behav.v:25" *) _06_[5] : 1'h0;
  assign _00_[6] = reset ? (* src = "./src/demux1x2_behav.v:25" *) _06_[6] : 1'h0;
  assign _00_[7] = reset ? (* src = "./src/demux1x2_behav.v:25" *) _06_[7] : 1'h0;
  assign _00_[8] = reset ? (* src = "./src/demux1x2_behav.v:25" *) _06_[8] : 1'h0;
  assign _00_[9] = reset ? (* src = "./src/demux1x2_behav.v:25" *) _06_[9] : 1'h0;
  assign _06_[0] = classif ? (* src = "./src/demux1x2_behav.v:34|./src/demux1x2_behav.v:33" *) out0[0] : in[0];
  assign _06_[1] = classif ? (* src = "./src/demux1x2_behav.v:34|./src/demux1x2_behav.v:33" *) out0[1] : in[1];
  assign _06_[2] = classif ? (* src = "./src/demux1x2_behav.v:34|./src/demux1x2_behav.v:33" *) out0[2] : in[2];
  assign _06_[3] = classif ? (* src = "./src/demux1x2_behav.v:34|./src/demux1x2_behav.v:33" *) out0[3] : in[3];
  assign _06_[4] = classif ? (* src = "./src/demux1x2_behav.v:34|./src/demux1x2_behav.v:33" *) out0[4] : in[4];
  assign _06_[5] = classif ? (* src = "./src/demux1x2_behav.v:34|./src/demux1x2_behav.v:33" *) out0[5] : in[5];
  assign _06_[6] = classif ? (* src = "./src/demux1x2_behav.v:34|./src/demux1x2_behav.v:33" *) out0[6] : in[6];
  assign _06_[7] = classif ? (* src = "./src/demux1x2_behav.v:34|./src/demux1x2_behav.v:33" *) out0[7] : in[7];
  assign _06_[8] = classif ? (* src = "./src/demux1x2_behav.v:34|./src/demux1x2_behav.v:33" *) out0[8] : in[8];
  assign _06_[9] = classif ? (* src = "./src/demux1x2_behav.v:34|./src/demux1x2_behav.v:33" *) out0[9] : in[9];
  assign _01_[0] = reset ? (* src = "./src/demux1x2_behav.v:25" *) _05_[0] : 1'h0;
  assign _01_[1] = reset ? (* src = "./src/demux1x2_behav.v:25" *) _05_[1] : 1'h0;
  assign _01_[2] = reset ? (* src = "./src/demux1x2_behav.v:25" *) _05_[2] : 1'h0;
  assign _01_[3] = reset ? (* src = "./src/demux1x2_behav.v:25" *) _05_[3] : 1'h0;
  assign _01_[4] = reset ? (* src = "./src/demux1x2_behav.v:25" *) _05_[4] : 1'h0;
  assign _01_[5] = reset ? (* src = "./src/demux1x2_behav.v:25" *) _05_[5] : 1'h0;
  assign _01_[6] = reset ? (* src = "./src/demux1x2_behav.v:25" *) _05_[6] : 1'h0;
  assign _01_[7] = reset ? (* src = "./src/demux1x2_behav.v:25" *) _05_[7] : 1'h0;
  assign _01_[8] = reset ? (* src = "./src/demux1x2_behav.v:25" *) _05_[8] : 1'h0;
  assign _01_[9] = reset ? (* src = "./src/demux1x2_behav.v:25" *) _05_[9] : 1'h0;
  assign _05_[0] = classif ? (* src = "./src/demux1x2_behav.v:39|./src/demux1x2_behav.v:33" *) in[0] : out1[0];
  assign _05_[1] = classif ? (* src = "./src/demux1x2_behav.v:39|./src/demux1x2_behav.v:33" *) in[1] : out1[1];
  assign _05_[2] = classif ? (* src = "./src/demux1x2_behav.v:39|./src/demux1x2_behav.v:33" *) in[2] : out1[2];
  assign _05_[3] = classif ? (* src = "./src/demux1x2_behav.v:39|./src/demux1x2_behav.v:33" *) in[3] : out1[3];
  assign _05_[4] = classif ? (* src = "./src/demux1x2_behav.v:39|./src/demux1x2_behav.v:33" *) in[4] : out1[4];
  assign _05_[5] = classif ? (* src = "./src/demux1x2_behav.v:39|./src/demux1x2_behav.v:33" *) in[5] : out1[5];
  assign _05_[6] = classif ? (* src = "./src/demux1x2_behav.v:39|./src/demux1x2_behav.v:33" *) in[6] : out1[6];
  assign _05_[7] = classif ? (* src = "./src/demux1x2_behav.v:39|./src/demux1x2_behav.v:33" *) in[7] : out1[7];
  assign _05_[8] = classif ? (* src = "./src/demux1x2_behav.v:39|./src/demux1x2_behav.v:33" *) in[8] : out1[8];
  assign _05_[9] = classif ? (* src = "./src/demux1x2_behav.v:39|./src/demux1x2_behav.v:33" *) in[9] : out1[9];
  assign _03_ = reset ? (* src = "./src/demux1x2_behav.v:25" *) classif : 1'h0;
  assign _04_ = ~(* src = "./src/demux1x2_behav.v:34|./src/demux1x2_behav.v:33" *) classif;
  (* src = "./src/demux1x2_behav.v:24" *)
  DFF _50_ (
    .C(clk),
    .D(_02_),
    .Q(push_0)
  );
  (* src = "./src/demux1x2_behav.v:24" *)
  DFF _51_ (
    .C(clk),
    .D(_00_[0]),
    .Q(out0[0])
  );
  (* src = "./src/demux1x2_behav.v:24" *)
  DFF _52_ (
    .C(clk),
    .D(_00_[1]),
    .Q(out0[1])
  );
  (* src = "./src/demux1x2_behav.v:24" *)
  DFF _53_ (
    .C(clk),
    .D(_00_[2]),
    .Q(out0[2])
  );
  (* src = "./src/demux1x2_behav.v:24" *)
  DFF _54_ (
    .C(clk),
    .D(_00_[3]),
    .Q(out0[3])
  );
  (* src = "./src/demux1x2_behav.v:24" *)
  DFF _55_ (
    .C(clk),
    .D(_00_[4]),
    .Q(out0[4])
  );
  (* src = "./src/demux1x2_behav.v:24" *)
  DFF _56_ (
    .C(clk),
    .D(_00_[5]),
    .Q(out0[5])
  );
  (* src = "./src/demux1x2_behav.v:24" *)
  DFF _57_ (
    .C(clk),
    .D(_00_[6]),
    .Q(out0[6])
  );
  (* src = "./src/demux1x2_behav.v:24" *)
  DFF _58_ (
    .C(clk),
    .D(_00_[7]),
    .Q(out0[7])
  );
  (* src = "./src/demux1x2_behav.v:24" *)
  DFF _59_ (
    .C(clk),
    .D(_00_[8]),
    .Q(out0[8])
  );
  (* src = "./src/demux1x2_behav.v:24" *)
  DFF _60_ (
    .C(clk),
    .D(_00_[9]),
    .Q(out0[9])
  );
  (* src = "./src/demux1x2_behav.v:24" *)
  DFF _61_ (
    .C(clk),
    .D(_01_[0]),
    .Q(out1[0])
  );
  (* src = "./src/demux1x2_behav.v:24" *)
  DFF _62_ (
    .C(clk),
    .D(_01_[1]),
    .Q(out1[1])
  );
  (* src = "./src/demux1x2_behav.v:24" *)
  DFF _63_ (
    .C(clk),
    .D(_01_[2]),
    .Q(out1[2])
  );
  (* src = "./src/demux1x2_behav.v:24" *)
  DFF _64_ (
    .C(clk),
    .D(_01_[3]),
    .Q(out1[3])
  );
  (* src = "./src/demux1x2_behav.v:24" *)
  DFF _65_ (
    .C(clk),
    .D(_01_[4]),
    .Q(out1[4])
  );
  (* src = "./src/demux1x2_behav.v:24" *)
  DFF _66_ (
    .C(clk),
    .D(_01_[5]),
    .Q(out1[5])
  );
  (* src = "./src/demux1x2_behav.v:24" *)
  DFF _67_ (
    .C(clk),
    .D(_01_[6]),
    .Q(out1[6])
  );
  (* src = "./src/demux1x2_behav.v:24" *)
  DFF _68_ (
    .C(clk),
    .D(_01_[7]),
    .Q(out1[7])
  );
  (* src = "./src/demux1x2_behav.v:24" *)
  DFF _69_ (
    .C(clk),
    .D(_01_[8]),
    .Q(out1[8])
  );
  (* src = "./src/demux1x2_behav.v:24" *)
  DFF _70_ (
    .C(clk),
    .D(_01_[9]),
    .Q(out1[9])
  );
  (* src = "./src/demux1x2_behav.v:24" *)
  DFF _71_ (
    .C(clk),
    .D(_03_),
    .Q(push_1)
  );
endmodule

(* src = "./src/df_control.v:13" *)
module dfcontrol_syn(clk, reset, push_0, push_1, almost_full1, almost_empty1, fifo_empty1, Fifo_full1, fifo_error1, fifo_pause1, almost_full2, almost_empty2, fifo_empty2, Fifo_full2, fifo_error2, fifo_pause2, read1, write1, read2, write2, Error);
  (* src = "./src/df_control.v:45" *)
  wire _00_;
  (* src = "./src/df_control.v:45" *)
  wire _01_;
  (* src = "./src/df_control.v:45" *)
  wire _02_;
  (* src = "./src/df_control.v:45" *)
  wire _03_;
  (* src = "./src/df_control.v:45" *)
  wire _04_;
  (* src = "./src/df_control.v:45" *)
  wire _05_;
  (* src = "./src/df_control.v:45" *)
  wire _06_;
  (* src = "./src/df_control.v:45" *)
  wire _07_;
  (* src = "./src/df_control.v:45" *)
  wire _08_;
  (* src = "./src/df_control.v:45" *)
  wire _09_;
  (* src = "./src/df_control.v:60" *)
  wire _10_;
  (* src = "./src/df_control.v:60" *)
  wire _11_;
  (* src = "./src/df_control.v:60" *)
  wire _12_;
  (* src = "./src/df_control.v:68" *)
  wire _13_;
  (* src = "./src/df_control.v:68" *)
  wire _14_;
  (* src = "./src/df_control.v:68" *)
  wire _15_;
  (* src = "./src/df_control.v:60" *)
  wire _16_;
  (* src = "./src/df_control.v:60" *)
  wire _17_;
  (* src = "./src/df_control.v:68" *)
  wire _18_;
  (* src = "./src/df_control.v:68" *)
  wire _19_;
  (* src = "./src/df_control.v:76" *)
  wire _20_;
  (* src = "./src/df_control.v:84" *)
  wire _21_;
  (* src = "./src/df_control.v:40" *)
  output Error;
  (* src = "./src/df_control.v:23" *)
  input Fifo_full1;
  (* src = "./src/df_control.v:30" *)
  input Fifo_full2;
  (* src = "./src/df_control.v:21" *)
  input almost_empty1;
  (* src = "./src/df_control.v:28" *)
  input almost_empty2;
  (* src = "./src/df_control.v:20" *)
  input almost_full1;
  (* src = "./src/df_control.v:27" *)
  input almost_full2;
  (* src = "./src/df_control.v:14" *)
  input clk;
  (* src = "./src/df_control.v:22" *)
  input fifo_empty1;
  (* src = "./src/df_control.v:29" *)
  input fifo_empty2;
  (* src = "./src/df_control.v:24" *)
  input fifo_error1;
  (* src = "./src/df_control.v:31" *)
  input fifo_error2;
  (* src = "./src/df_control.v:25" *)
  input fifo_pause1;
  (* src = "./src/df_control.v:32" *)
  input fifo_pause2;
  (* src = "./src/df_control.v:16" *)
  input push_0;
  (* src = "./src/df_control.v:17" *)
  input push_1;
  (* src = "./src/df_control.v:35" *)
  output read1;
  (* src = "./src/df_control.v:37" *)
  output read2;
  (* src = "./src/df_control.v:15" *)
  input reset;
  (* src = "./src/df_control.v:36" *)
  output write1;
  (* src = "./src/df_control.v:38" *)
  output write2;
  assign _00_ = reset ? (* src = "./src/df_control.v:51" *) _05_ : 1'h0;
  assign _02_ = reset ? (* src = "./src/df_control.v:51" *) _07_ : 1'h0;
  assign _03_ = reset ? (* src = "./src/df_control.v:51" *) _08_ : 1'h0;
  assign _01_ = reset ? (* src = "./src/df_control.v:51" *) _06_ : 1'h0;
  assign _04_ = reset ? (* src = "./src/df_control.v:51" *) _09_ : 1'h0;
  assign _06_ = ~(* src = "./src/df_control.v:76" *) _20_;
  assign _07_ = ~(* src = "./src/df_control.v:84" *) _21_;
  assign _10_ = ~(* src = "./src/df_control.v:60" *) Fifo_full1;
  assign _11_ = ~(* src = "./src/df_control.v:60" *) almost_full1;
  assign _12_ = ~(* src = "./src/df_control.v:60" *) fifo_pause1;
  assign _13_ = ~(* src = "./src/df_control.v:68" *) Fifo_full2;
  assign _14_ = ~(* src = "./src/df_control.v:68" *) almost_full2;
  assign _15_ = ~(* src = "./src/df_control.v:68" *) fifo_pause2;
  (* src = "./src/df_control.v:45" *)
  DFF _35_ (
    .C(clk),
    .D(_01_),
    .Q(read1)
  );
  (* src = "./src/df_control.v:45" *)
  DFF _36_ (
    .C(clk),
    .D(_03_),
    .Q(write1)
  );
  (* src = "./src/df_control.v:45" *)
  DFF _37_ (
    .C(clk),
    .D(_02_),
    .Q(read2)
  );
  (* src = "./src/df_control.v:45" *)
  DFF _38_ (
    .C(clk),
    .D(_04_),
    .Q(write2)
  );
  (* src = "./src/df_control.v:45" *)
  DFF _39_ (
    .C(clk),
    .D(_00_),
    .Q(Error)
  );
  assign _16_ = _10_ |(* src = "./src/df_control.v:60" *)  _11_;
  assign _19_ = _18_ |(* src = "./src/df_control.v:68" *)  _15_;
  assign _17_ = _16_ |(* src = "./src/df_control.v:60" *)  _12_;
  assign _08_ = push_0 &(* src = "./src/df_control.v:60" *)  _17_;
  assign _18_ = _13_ |(* src = "./src/df_control.v:68" *)  _14_;
  assign _09_ = push_1 &(* src = "./src/df_control.v:68" *)  _19_;
  assign _20_ = almost_empty1 |(* src = "./src/df_control.v:76" *)  fifo_empty1;
  assign _21_ = almost_empty2 |(* src = "./src/df_control.v:84" *)  fifo_empty2;
  assign _05_ = fifo_error1 |(* src = "./src/df_control.v:90" *)  fifo_error2;
endmodule

(* dynports =  1  *)
(* src = "./src/fifo.v:12" *)
module fifo_8x10_syn(clk, reset, read, write, data_in_push, almost_full, almost_empty, fifo_empty, Fifo_full, data_out_pop, fifo_error, fifo_pause);
  (* src = "./src/fifo.v:105" *)
  wire [9:0] _000_;
  (* src = "./src/fifo.v:105" *)
  wire [9:0] _001_;
  (* src = "./src/fifo.v:105" *)
  wire [7:0] _002_;
  (* src = "./src/fifo.v:105" *)
  wire [7:0] _003_;
  (* src = "./src/fifo.v:53" *)
  wire _004_;
  (* src = "./src/fifo.v:53" *)
  wire _005_;
  (* src = "./src/fifo.v:53" *)
  wire _006_;
  (* src = "./src/fifo.v:53" *)
  wire _007_;
  (* src = "./src/fifo.v:53" *)
  wire _008_;
  (* src = "./src/fifo.v:53" *)
  wire _009_;
  (* src = "./src/fifo.v:53" *)
  wire _010_;
  (* src = "./src/fifo.v:115" *)
  (* unused_bits = "8" *)
  wire [31:0] _011_;
  (* src = "./src/fifo.v:118" *)
  (* unused_bits = "8" *)
  wire [31:0] _012_;
  (* src = "./src/fifo.v:122" *)
  (* unused_bits = "10" *)
  wire [31:0] _013_;
  wire [4:0] _014_;
  wire [1:0] _015_;
  wire _016_;
  wire [4:0] _017_;
  wire [1:0] _018_;
  wire _019_;
  wire [15:0] _020_;
  wire [7:0] _021_;
  wire [3:0] _022_;
  wire [1:0] _023_;
  wire [15:0] _024_;
  wire [7:0] _025_;
  wire [3:0] _026_;
  wire [1:0] _027_;
  wire _028_;
  wire [9:0] _029_;
  wire _030_;
  (* src = "./src/fifo.v:74" *)
  wire _031_;
  (* src = "./src/fifo.v:79" *)
  wire _032_;
  (* src = "./src/fifo.v:88" *)
  wire _033_;
  (* src = "./src/fifo.v:114" *)
  wire _034_;
  (* src = "./src/fifo.v:117" *)
  wire _035_;
  (* src = "./src/fifo.v:97" *)
  wire _036_;
  (* src = "./src/fifo.v:114" *)
  wire _037_;
  (* src = "./src/fifo.v:117" *)
  wire _038_;
  wire [9:0] _039_;
  wire [9:0] _040_;
  wire [9:0] _041_;
  wire [9:0] _042_;
  wire [9:0] _043_;
  wire [7:0] _044_;
  wire [7:0] _045_;
  (* src = "./src/fifo.v:127" *)
  (* unused_bits = "10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _046_;
  (* src = "./src/fifo.v:115|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "7" *)
  wire [31:0] _047_;
  (* src = "./src/fifo.v:122|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "9" *)
  wire [31:0] _048_;
  (* src = "./src/fifo.v:125|./src/fifo.v:115|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "7" *)
  wire [31:0] _049_;
  (* src = "./src/fifo.v:83|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "2 4 5 6 8" *)
  wire [31:0] _050_;
  wire [31:0] _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  (* src = "./src/fifo.v:88|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "2 4 5 6 8" *)
  wire [31:0] _055_;
  wire [31:0] _056_;
  wire _057_;
  (* src = "./src/fifo.v:127|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _058_;
  wire [31:0] _059_;
  (* src = "./src/fifo.v:115|<techmap.v>:260|<techmap.v>:222" *)
  wire _060_;
  (* src = "./src/fifo.v:115|<techmap.v>:260|<techmap.v>:222" *)
  wire _061_;
  (* src = "./src/fifo.v:122|<techmap.v>:260|<techmap.v>:222" *)
  wire _062_;
  (* src = "./src/fifo.v:122|<techmap.v>:260|<techmap.v>:222" *)
  wire _063_;
  (* src = "./src/fifo.v:122|<techmap.v>:260|<techmap.v>:222" *)
  wire _064_;
  (* src = "./src/fifo.v:122|<techmap.v>:260|<techmap.v>:222" *)
  wire _065_;
  (* src = "./src/fifo.v:125|./src/fifo.v:115|<techmap.v>:260|<techmap.v>:222" *)
  wire _066_;
  (* src = "./src/fifo.v:125|./src/fifo.v:115|<techmap.v>:260|<techmap.v>:222" *)
  wire _067_;
  (* src = "./src/fifo.v:83|<techmap.v>:260|<techmap.v>:221" *)
  wire _068_;
  (* src = "./src/fifo.v:83|<techmap.v>:260|<techmap.v>:221" *)
  wire _069_;
  (* src = "./src/fifo.v:83|<techmap.v>:260|<techmap.v>:221" *)
  wire _070_;
  (* src = "./src/fifo.v:83|<techmap.v>:260|<techmap.v>:221" *)
  wire _071_;
  (* src = "./src/fifo.v:83|<techmap.v>:260|<techmap.v>:221" *)
  wire _072_;
  (* src = "./src/fifo.v:83|<techmap.v>:260|<techmap.v>:221" *)
  wire _073_;
  (* src = "./src/fifo.v:83|<techmap.v>:260|<techmap.v>:221" *)
  wire _074_;
  (* src = "./src/fifo.v:83|<techmap.v>:260|<techmap.v>:221" *)
  wire _075_;
  (* src = "./src/fifo.v:83|<techmap.v>:260|<techmap.v>:221" *)
  wire _076_;
  (* src = "./src/fifo.v:83|<techmap.v>:260|<techmap.v>:221" *)
  wire _077_;
  (* src = "./src/fifo.v:83|<techmap.v>:260|<techmap.v>:221" *)
  wire _078_;
  (* src = "./src/fifo.v:88|<techmap.v>:260|<techmap.v>:221" *)
  wire _079_;
  (* src = "./src/fifo.v:88|<techmap.v>:260|<techmap.v>:221" *)
  wire _080_;
  (* src = "./src/fifo.v:88|<techmap.v>:260|<techmap.v>:221" *)
  wire _081_;
  (* src = "./src/fifo.v:127|<techmap.v>:260|<techmap.v>:221" *)
  wire _082_;
  (* src = "./src/fifo.v:127|<techmap.v>:260|<techmap.v>:221" *)
  wire _083_;
  (* src = "./src/fifo.v:127|<techmap.v>:260|<techmap.v>:221" *)
  wire _084_;
  (* src = "./src/fifo.v:127|<techmap.v>:260|<techmap.v>:229" *)
  wire _085_;
  (* src = "./src/fifo.v:127|<techmap.v>:260|<techmap.v>:229" *)
  wire _086_;
  (* src = "./src/fifo.v:127|<techmap.v>:260|<techmap.v>:229" *)
  wire _087_;
  (* src = "./src/fifo.v:127|<techmap.v>:260|<techmap.v>:229" *)
  wire _088_;
  (* src = "./src/fifo.v:127|<techmap.v>:260|<techmap.v>:229" *)
  wire _089_;
  (* src = "./src/fifo.v:21" *)
  output Fifo_full;
  (* src = "./src/fifo.v:19" *)
  output almost_empty;
  (* src = "./src/fifo.v:18" *)
  output almost_full;
  (* src = "./src/fifo.v:13" *)
  input clk;
  (* src = "./src/fifo.v:33" *)
  wire [9:0] data_count;
  (* src = "./src/fifo.v:17" *)
  input [9:0] data_in_push;
  (* src = "./src/fifo.v:30" *)
  wire [9:0] data_out;
  (* src = "./src/fifo.v:22" *)
  output [9:0] data_out_pop;
  (* src = "./src/fifo.v:36" *)
  wire datamod;
  (* src = "./src/fifo.v:20" *)
  output fifo_empty;
  (* src = "./src/fifo.v:23" *)
  output fifo_error;
  (* src = "./src/fifo.v:24" *)
  output fifo_pause;
  (* src = "./src/fifo.v:34" *)
  wire [7:0] rd_ptr;
  (* src = "./src/fifo.v:15" *)
  input read;
  (* src = "./src/fifo.v:14" *)
  input reset;
  (* src = "./src/fifo.v:35" *)
  wire [7:0] wr_ptr;
  (* src = "./src/fifo.v:16" *)
  input write;
  assign _014_[1] = data_count[2] |(* src = "./src/fifo.v:79" *)  _029_[3];
  assign _015_[0] = _014_[0] |(* src = "./src/fifo.v:79" *)  _014_[1];
  assign _016_ = _015_[0] |(* src = "./src/fifo.v:79" *)  _015_[1];
  assign _030_ = _016_ |(* src = "./src/fifo.v:79" *)  _014_[4];
  assign _014_[0] = data_count[0] |(* src = "./src/fifo.v:88" *)  data_count[1];
  assign _017_[1] = data_count[2] |(* src = "./src/fifo.v:88" *)  data_count[3];
  assign _014_[2] = data_count[4] |(* src = "./src/fifo.v:88" *)  data_count[5];
  assign _014_[3] = data_count[6] |(* src = "./src/fifo.v:88" *)  data_count[7];
  assign _014_[4] = data_count[8] |(* src = "./src/fifo.v:88" *)  data_count[9];
  assign _018_[0] = _014_[0] |(* src = "./src/fifo.v:88" *)  _017_[1];
  assign _015_[1] = _014_[2] |(* src = "./src/fifo.v:88" *)  _014_[3];
  assign _019_ = _018_[0] |(* src = "./src/fifo.v:88" *)  _015_[1];
  assign _020_[0] = _013_[0] &(* src = "./src/fifo.v:83" *)  data_count[1];
  assign _021_[0] = _020_[0] &(* src = "./src/fifo.v:83" *)  _020_[1];
  assign _022_[0] = _021_[0] &(* src = "./src/fifo.v:83" *)  _021_[1];
  assign _023_[0] = _022_[0] &(* src = "./src/fifo.v:83" *)  _020_[4];
  assign _006_ = _053_ | _023_[0];
  assign _026_[0] = _025_[0] &(* src = "./src/fifo.v:88" *)  _021_[1];
  assign _027_[0] = _026_[0] &(* src = "./src/fifo.v:88" *)  _020_[4];
  assign _033_ = _057_ | _027_[0];
  assign _028_ = _019_ |(* src = "./src/fifo.v:74" *)  _014_[4];
  assign _031_ = ~(* src = "./src/fifo.v:74" *) _028_;
  assign _032_ = ~(* src = "./src/fifo.v:79" *) _030_;
  assign _037_ = ~(* src = "./src/fifo.v:114" *) Fifo_full;
  assign _038_ = ~(* src = "./src/fifo.v:124" *) fifo_empty;
  assign _005_ = _033_ &(* src = "./src/fifo.v:88" *)  _028_;
  assign _008_ = write &(* src = "./src/fifo.v:93" *)  _004_;
  assign _036_ = read &(* src = "./src/fifo.v:97" *)  _007_;
  assign _034_ = _037_ &(* src = "./src/fifo.v:114" *)  write;
  assign _035_ = _038_ &(* src = "./src/fifo.v:124" *)  read;
  assign _001_[0] = reset ? (* src = "./src/fifo.v:106" *) _043_[0] : 1'h0;
  assign _001_[1] = reset ? (* src = "./src/fifo.v:106" *) _043_[1] : 1'h0;
  assign _001_[2] = reset ? (* src = "./src/fifo.v:106" *) _043_[2] : 1'h0;
  assign _001_[3] = reset ? (* src = "./src/fifo.v:106" *) _043_[3] : 1'h0;
  assign _001_[4] = reset ? (* src = "./src/fifo.v:106" *) _043_[4] : 1'h0;
  assign _001_[5] = reset ? (* src = "./src/fifo.v:106" *) _043_[5] : 1'h0;
  assign _001_[6] = reset ? (* src = "./src/fifo.v:106" *) _043_[6] : 1'h0;
  assign _001_[7] = reset ? (* src = "./src/fifo.v:106" *) _043_[7] : 1'h0;
  assign _001_[8] = reset ? (* src = "./src/fifo.v:106" *) _043_[8] : 1'h0;
  assign _001_[9] = reset ? (* src = "./src/fifo.v:106" *) _043_[9] : 1'h0;
  assign _040_[0] = _035_ ? (* src = "./src/fifo.v:117" *) data_count[0] : _013_[0];
  assign _040_[1] = _035_ ? (* src = "./src/fifo.v:117" *) data_count[1] : _013_[1];
  assign _040_[2] = _035_ ? (* src = "./src/fifo.v:117" *) data_count[2] : _013_[2];
  assign _040_[3] = _035_ ? (* src = "./src/fifo.v:117" *) data_count[3] : _013_[3];
  assign _040_[4] = _035_ ? (* src = "./src/fifo.v:117" *) data_count[4] : _013_[4];
  assign _040_[5] = _035_ ? (* src = "./src/fifo.v:117" *) data_count[5] : _013_[5];
  assign _040_[6] = _035_ ? (* src = "./src/fifo.v:117" *) data_count[6] : _013_[6];
  assign _040_[7] = _035_ ? (* src = "./src/fifo.v:117" *) data_count[7] : _013_[7];
  assign _040_[8] = _035_ ? (* src = "./src/fifo.v:117" *) data_count[8] : _013_[8];
  assign _040_[9] = _035_ ? (* src = "./src/fifo.v:117" *) data_count[9] : _013_[9];
  assign _042_[0] = _035_ ? (* src = "./src/fifo.v:124" *) data_out[0] : data_out_pop[0];
  assign _042_[1] = _035_ ? (* src = "./src/fifo.v:124" *) data_out[1] : data_out_pop[1];
  assign _042_[2] = _035_ ? (* src = "./src/fifo.v:124" *) data_out[2] : data_out_pop[2];
  assign _042_[3] = _035_ ? (* src = "./src/fifo.v:124" *) data_out[3] : data_out_pop[3];
  assign _042_[4] = _035_ ? (* src = "./src/fifo.v:124" *) data_out[4] : data_out_pop[4];
  assign _042_[5] = _035_ ? (* src = "./src/fifo.v:124" *) data_out[5] : data_out_pop[5];
  assign _042_[6] = _035_ ? (* src = "./src/fifo.v:124" *) data_out[6] : data_out_pop[6];
  assign _042_[7] = _035_ ? (* src = "./src/fifo.v:124" *) data_out[7] : data_out_pop[7];
  assign _042_[8] = _035_ ? (* src = "./src/fifo.v:124" *) data_out[8] : data_out_pop[8];
  assign _042_[9] = _035_ ? (* src = "./src/fifo.v:124" *) data_out[9] : data_out_pop[9];
  assign _000_[0] = reset ? (* src = "./src/fifo.v:106" *) _041_[0] : 1'h0;
  assign _000_[1] = reset ? (* src = "./src/fifo.v:106" *) _041_[1] : 1'h0;
  assign _000_[2] = reset ? (* src = "./src/fifo.v:106" *) _041_[2] : 1'h0;
  assign _000_[3] = reset ? (* src = "./src/fifo.v:106" *) _041_[3] : 1'h0;
  assign _000_[4] = reset ? (* src = "./src/fifo.v:106" *) _041_[4] : 1'h0;
  assign _000_[5] = reset ? (* src = "./src/fifo.v:106" *) _041_[5] : 1'h0;
  assign _000_[6] = reset ? (* src = "./src/fifo.v:106" *) _041_[6] : 1'h0;
  assign _000_[7] = reset ? (* src = "./src/fifo.v:106" *) _041_[7] : 1'h0;
  assign _000_[8] = reset ? (* src = "./src/fifo.v:106" *) _041_[8] : 1'h0;
  assign _000_[9] = reset ? (* src = "./src/fifo.v:106" *) _041_[9] : 1'h0;
  assign _041_[0] = _034_ ? (* src = "./src/fifo.v:114" *) _040_[0] : _039_[0];
  assign _041_[1] = _034_ ? (* src = "./src/fifo.v:114" *) _040_[1] : _039_[1];
  assign _041_[2] = _034_ ? (* src = "./src/fifo.v:114" *) _040_[2] : _039_[2];
  assign _041_[3] = _034_ ? (* src = "./src/fifo.v:114" *) _040_[3] : _039_[3];
  assign _041_[4] = _034_ ? (* src = "./src/fifo.v:114" *) _040_[4] : _039_[4];
  assign _041_[5] = _034_ ? (* src = "./src/fifo.v:114" *) _040_[5] : _039_[5];
  assign _041_[6] = _034_ ? (* src = "./src/fifo.v:114" *) _040_[6] : _039_[6];
  assign _041_[7] = _034_ ? (* src = "./src/fifo.v:114" *) _040_[7] : _039_[7];
  assign _041_[8] = _034_ ? (* src = "./src/fifo.v:114" *) _040_[8] : _039_[8];
  assign _041_[9] = _034_ ? (* src = "./src/fifo.v:114" *) _040_[9] : _039_[9];
  assign _039_[0] = _035_ ? (* src = "./src/fifo.v:124" *) _013_[0] : data_count[0];
  assign _039_[1] = _035_ ? (* src = "./src/fifo.v:124" *) _046_[1] : data_count[1];
  assign _039_[2] = _035_ ? (* src = "./src/fifo.v:124" *) _046_[2] : data_count[2];
  assign _039_[3] = _035_ ? (* src = "./src/fifo.v:124" *) _046_[3] : data_count[3];
  assign _039_[4] = _035_ ? (* src = "./src/fifo.v:124" *) _046_[4] : data_count[4];
  assign _039_[5] = _035_ ? (* src = "./src/fifo.v:124" *) _046_[5] : data_count[5];
  assign _039_[6] = _035_ ? (* src = "./src/fifo.v:124" *) _046_[6] : data_count[6];
  assign _039_[7] = _035_ ? (* src = "./src/fifo.v:124" *) _046_[7] : data_count[7];
  assign _039_[8] = _035_ ? (* src = "./src/fifo.v:124" *) _046_[8] : data_count[8];
  assign _039_[9] = _035_ ? (* src = "./src/fifo.v:124" *) _046_[9] : data_count[9];
  assign _043_[0] = _034_ ? (* src = "./src/fifo.v:114" *) data_out_pop[0] : _042_[0];
  assign _043_[1] = _034_ ? (* src = "./src/fifo.v:114" *) data_out_pop[1] : _042_[1];
  assign _043_[2] = _034_ ? (* src = "./src/fifo.v:114" *) data_out_pop[2] : _042_[2];
  assign _043_[3] = _034_ ? (* src = "./src/fifo.v:114" *) data_out_pop[3] : _042_[3];
  assign _043_[4] = _034_ ? (* src = "./src/fifo.v:114" *) data_out_pop[4] : _042_[4];
  assign _043_[5] = _034_ ? (* src = "./src/fifo.v:114" *) data_out_pop[5] : _042_[5];
  assign _043_[6] = _034_ ? (* src = "./src/fifo.v:114" *) data_out_pop[6] : _042_[6];
  assign _043_[7] = _034_ ? (* src = "./src/fifo.v:114" *) data_out_pop[7] : _042_[7];
  assign _043_[8] = _034_ ? (* src = "./src/fifo.v:114" *) data_out_pop[8] : _042_[8];
  assign _043_[9] = _034_ ? (* src = "./src/fifo.v:114" *) data_out_pop[9] : _042_[9];
  assign _044_[0] = _035_ ? (* src = "./src/fifo.v:117" *) _012_[0] : rd_ptr[0];
  assign _044_[1] = _035_ ? (* src = "./src/fifo.v:117" *) _012_[1] : rd_ptr[1];
  assign _044_[2] = _035_ ? (* src = "./src/fifo.v:117" *) _012_[2] : rd_ptr[2];
  assign _044_[3] = _035_ ? (* src = "./src/fifo.v:117" *) _012_[3] : rd_ptr[3];
  assign _044_[4] = _035_ ? (* src = "./src/fifo.v:117" *) _012_[4] : rd_ptr[4];
  assign _044_[5] = _035_ ? (* src = "./src/fifo.v:117" *) _012_[5] : rd_ptr[5];
  assign _044_[6] = _035_ ? (* src = "./src/fifo.v:117" *) _012_[6] : rd_ptr[6];
  assign _044_[7] = _035_ ? (* src = "./src/fifo.v:117" *) _012_[7] : rd_ptr[7];
  assign _002_[0] = reset ? (* src = "./src/fifo.v:106" *) _044_[0] : 1'h0;
  assign _002_[1] = reset ? (* src = "./src/fifo.v:106" *) _044_[1] : 1'h0;
  assign _002_[2] = reset ? (* src = "./src/fifo.v:106" *) _044_[2] : 1'h0;
  assign _002_[3] = reset ? (* src = "./src/fifo.v:106" *) _044_[3] : 1'h0;
  assign _002_[4] = reset ? (* src = "./src/fifo.v:106" *) _044_[4] : 1'h0;
  assign _002_[5] = reset ? (* src = "./src/fifo.v:106" *) _044_[5] : 1'h0;
  assign _002_[6] = reset ? (* src = "./src/fifo.v:106" *) _044_[6] : 1'h0;
  assign _002_[7] = reset ? (* src = "./src/fifo.v:106" *) _044_[7] : 1'h0;
  assign _009_ = _036_ ? (* src = "./src/fifo.v:97" *) 1'h1 : _008_;
  assign _045_[0] = _034_ ? (* src = "./src/fifo.v:114" *) _011_[0] : wr_ptr[0];
  assign _045_[1] = _034_ ? (* src = "./src/fifo.v:114" *) _011_[1] : wr_ptr[1];
  assign _045_[2] = _034_ ? (* src = "./src/fifo.v:114" *) _011_[2] : wr_ptr[2];
  assign _045_[3] = _034_ ? (* src = "./src/fifo.v:114" *) _011_[3] : wr_ptr[3];
  assign _045_[4] = _034_ ? (* src = "./src/fifo.v:114" *) _011_[4] : wr_ptr[4];
  assign _045_[5] = _034_ ? (* src = "./src/fifo.v:114" *) _011_[5] : wr_ptr[5];
  assign _045_[6] = _034_ ? (* src = "./src/fifo.v:114" *) _011_[6] : wr_ptr[6];
  assign _045_[7] = _034_ ? (* src = "./src/fifo.v:114" *) _011_[7] : wr_ptr[7];
  assign _003_[0] = reset ? (* src = "./src/fifo.v:106" *) _045_[0] : 1'h0;
  assign _003_[1] = reset ? (* src = "./src/fifo.v:106" *) _045_[1] : 1'h0;
  assign _003_[2] = reset ? (* src = "./src/fifo.v:106" *) _045_[2] : 1'h0;
  assign _003_[3] = reset ? (* src = "./src/fifo.v:106" *) _045_[3] : 1'h0;
  assign _003_[4] = reset ? (* src = "./src/fifo.v:106" *) _045_[4] : 1'h0;
  assign _003_[5] = reset ? (* src = "./src/fifo.v:106" *) _045_[5] : 1'h0;
  assign _003_[6] = reset ? (* src = "./src/fifo.v:106" *) _045_[6] : 1'h0;
  assign _003_[7] = reset ? (* src = "./src/fifo.v:106" *) _045_[7] : 1'h0;
  assign _010_ = _005_ ? (* src = "./src/fifo.v:88" *) 1'h0 : _006_;
  assign _004_ = reset ? (* src = "./src/fifo.v:61" *) _032_ : 1'hx;
  assign _007_ = reset ? (* src = "./src/fifo.v:61" *) _031_ : 1'hx;
  assign almost_empty = reset ? (* src = "./src/fifo.v:61" *) _005_ : 1'h0;
  assign fifo_error = reset ? (* src = "./src/fifo.v:61" *) _009_ : 1'h0;
  assign fifo_pause = reset ? (* src = "./src/fifo.v:61" *) _010_ : 1'h0;
  assign fifo_empty = reset ? (* src = "./src/fifo.v:61" *) _007_ : 1'h1;
  assign almost_full = reset ? (* src = "./src/fifo.v:61" *) _006_ : 1'h0;
  assign Fifo_full = reset ? (* src = "./src/fifo.v:61" *) _004_ : 1'h0;
  assign _053_ = ~(* src = "./src/fifo.v:83" *) _054_;
  assign _052_ = ~(* src = "./src/fifo.v:83" *) _050_[31];
  assign _057_ = ~(* src = "./src/fifo.v:88" *) _055_[31];
  (* src = "./src/fifo.v:105" *)
  DFF _235_ (
    .C(clk),
    .D(_003_[0]),
    .Q(wr_ptr[0])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _236_ (
    .C(clk),
    .D(_003_[1]),
    .Q(wr_ptr[1])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _237_ (
    .C(clk),
    .D(_003_[2]),
    .Q(wr_ptr[2])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _238_ (
    .C(clk),
    .D(_003_[3]),
    .Q(wr_ptr[3])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _239_ (
    .C(clk),
    .D(_003_[4]),
    .Q(wr_ptr[4])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _240_ (
    .C(clk),
    .D(_003_[5]),
    .Q(wr_ptr[5])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _241_ (
    .C(clk),
    .D(_003_[6]),
    .Q(wr_ptr[6])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _242_ (
    .C(clk),
    .D(_003_[7]),
    .Q(wr_ptr[7])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _243_ (
    .C(clk),
    .D(_002_[0]),
    .Q(rd_ptr[0])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _244_ (
    .C(clk),
    .D(_002_[1]),
    .Q(rd_ptr[1])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _245_ (
    .C(clk),
    .D(_002_[2]),
    .Q(rd_ptr[2])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _246_ (
    .C(clk),
    .D(_002_[3]),
    .Q(rd_ptr[3])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _247_ (
    .C(clk),
    .D(_002_[4]),
    .Q(rd_ptr[4])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _248_ (
    .C(clk),
    .D(_002_[5]),
    .Q(rd_ptr[5])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _249_ (
    .C(clk),
    .D(_002_[6]),
    .Q(rd_ptr[6])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _250_ (
    .C(clk),
    .D(_002_[7]),
    .Q(rd_ptr[7])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _251_ (
    .C(clk),
    .D(_001_[0]),
    .Q(data_out_pop[0])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _252_ (
    .C(clk),
    .D(_001_[1]),
    .Q(data_out_pop[1])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _253_ (
    .C(clk),
    .D(_001_[2]),
    .Q(data_out_pop[2])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _254_ (
    .C(clk),
    .D(_001_[3]),
    .Q(data_out_pop[3])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _255_ (
    .C(clk),
    .D(_001_[4]),
    .Q(data_out_pop[4])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _256_ (
    .C(clk),
    .D(_001_[5]),
    .Q(data_out_pop[5])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _257_ (
    .C(clk),
    .D(_001_[6]),
    .Q(data_out_pop[6])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _258_ (
    .C(clk),
    .D(_001_[7]),
    .Q(data_out_pop[7])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _259_ (
    .C(clk),
    .D(_001_[8]),
    .Q(data_out_pop[8])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _260_ (
    .C(clk),
    .D(_001_[9]),
    .Q(data_out_pop[9])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _261_ (
    .C(clk),
    .D(_000_[0]),
    .Q(data_count[0])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _262_ (
    .C(clk),
    .D(_000_[1]),
    .Q(data_count[1])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _263_ (
    .C(clk),
    .D(_000_[2]),
    .Q(data_count[2])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _264_ (
    .C(clk),
    .D(_000_[3]),
    .Q(data_count[3])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _265_ (
    .C(clk),
    .D(_000_[4]),
    .Q(data_count[4])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _266_ (
    .C(clk),
    .D(_000_[5]),
    .Q(data_count[5])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _267_ (
    .C(clk),
    .D(_000_[6]),
    .Q(data_count[6])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _268_ (
    .C(clk),
    .D(_000_[7]),
    .Q(data_count[7])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _269_ (
    .C(clk),
    .D(_000_[8]),
    .Q(data_count[8])
  );
  (* src = "./src/fifo.v:105" *)
  DFF _270_ (
    .C(clk),
    .D(_000_[9]),
    .Q(data_count[9])
  );
  assign _054_ = _052_ | _023_[0];
  assign _029_[3] = data_count[3] ^(* src = "./src/fifo.v:83|<techmap.v>:262" *)  1'h1;
  assign _051_[4] = data_count[4] ^(* src = "./src/fifo.v:83|<techmap.v>:262" *)  1'h1;
  assign _051_[5] = data_count[5] ^(* src = "./src/fifo.v:83|<techmap.v>:262" *)  1'h1;
  assign _051_[6] = data_count[6] ^(* src = "./src/fifo.v:83|<techmap.v>:262" *)  1'h1;
  assign _051_[7] = data_count[7] ^(* src = "./src/fifo.v:83|<techmap.v>:262" *)  1'h1;
  assign _051_[8] = data_count[8] ^(* src = "./src/fifo.v:83|<techmap.v>:262" *)  1'h1;
  assign _051_[9] = data_count[9] ^(* src = "./src/fifo.v:83|<techmap.v>:262" *)  1'h1;
  assign _056_[2] = data_count[2] ^(* src = "./src/fifo.v:88|<techmap.v>:262" *)  1'h1;
  assign _011_[1] = wr_ptr[1] ^(* src = "./src/fifo.v:115|<techmap.v>:263" *)  wr_ptr[0];
  assign _011_[2] = wr_ptr[2] ^(* src = "./src/fifo.v:115|<techmap.v>:263" *)  _047_[1];
  assign _011_[3] = wr_ptr[3] ^(* src = "./src/fifo.v:115|<techmap.v>:263" *)  _047_[2];
  assign _011_[4] = wr_ptr[4] ^(* src = "./src/fifo.v:115|<techmap.v>:263" *)  _047_[3];
  assign _011_[5] = wr_ptr[5] ^(* src = "./src/fifo.v:115|<techmap.v>:263" *)  _047_[4];
  assign _011_[6] = wr_ptr[6] ^(* src = "./src/fifo.v:115|<techmap.v>:263" *)  _047_[5];
  assign _011_[7] = wr_ptr[7] ^(* src = "./src/fifo.v:115|<techmap.v>:263" *)  _047_[6];
  assign _011_[0] = wr_ptr[0] ^(* src = "./src/fifo.v:115|<techmap.v>:262" *)  1'h1;
  assign _013_[1] = data_count[1] ^(* src = "./src/fifo.v:122|<techmap.v>:263" *)  data_count[0];
  assign _013_[2] = data_count[2] ^(* src = "./src/fifo.v:122|<techmap.v>:263" *)  _024_[0];
  assign _013_[3] = data_count[3] ^(* src = "./src/fifo.v:122|<techmap.v>:263" *)  _048_[2];
  assign _013_[4] = data_count[4] ^(* src = "./src/fifo.v:122|<techmap.v>:263" *)  _048_[3];
  assign _013_[5] = data_count[5] ^(* src = "./src/fifo.v:122|<techmap.v>:263" *)  _048_[4];
  assign _013_[6] = data_count[6] ^(* src = "./src/fifo.v:122|<techmap.v>:263" *)  _048_[5];
  assign _013_[7] = data_count[7] ^(* src = "./src/fifo.v:122|<techmap.v>:263" *)  _048_[6];
  assign _013_[8] = data_count[8] ^(* src = "./src/fifo.v:122|<techmap.v>:263" *)  _048_[7];
  assign _013_[9] = data_count[9] ^(* src = "./src/fifo.v:122|<techmap.v>:263" *)  _048_[8];
  assign _012_[1] = rd_ptr[1] ^(* src = "./src/fifo.v:125|./src/fifo.v:115|<techmap.v>:263" *)  rd_ptr[0];
  assign _012_[2] = rd_ptr[2] ^(* src = "./src/fifo.v:125|./src/fifo.v:115|<techmap.v>:263" *)  _049_[1];
  assign _012_[3] = rd_ptr[3] ^(* src = "./src/fifo.v:125|./src/fifo.v:115|<techmap.v>:263" *)  _049_[2];
  assign _012_[4] = rd_ptr[4] ^(* src = "./src/fifo.v:125|./src/fifo.v:115|<techmap.v>:263" *)  _049_[3];
  assign _012_[5] = rd_ptr[5] ^(* src = "./src/fifo.v:125|./src/fifo.v:115|<techmap.v>:263" *)  _049_[4];
  assign _012_[6] = rd_ptr[6] ^(* src = "./src/fifo.v:125|./src/fifo.v:115|<techmap.v>:263" *)  _049_[5];
  assign _012_[7] = rd_ptr[7] ^(* src = "./src/fifo.v:125|./src/fifo.v:115|<techmap.v>:263" *)  _049_[6];
  assign _012_[0] = rd_ptr[0] ^(* src = "./src/fifo.v:125|./src/fifo.v:115|<techmap.v>:262" *)  1'h1;
  assign _013_[0] = data_count[0] ^(* src = "./src/fifo.v:127|<techmap.v>:263" *)  1'h1;
  assign _046_[1] = _059_[1] ^(* src = "./src/fifo.v:127|<techmap.v>:263" *)  data_count[0];
  assign _046_[2] = _056_[2] ^(* src = "./src/fifo.v:127|<techmap.v>:263" *)  _058_[1];
  assign _046_[3] = _029_[3] ^(* src = "./src/fifo.v:127|<techmap.v>:263" *)  _058_[2];
  assign _046_[4] = _051_[4] ^(* src = "./src/fifo.v:127|<techmap.v>:263" *)  _058_[3];
  assign _046_[5] = _051_[5] ^(* src = "./src/fifo.v:127|<techmap.v>:263" *)  _058_[4];
  assign _046_[6] = _051_[6] ^(* src = "./src/fifo.v:127|<techmap.v>:263" *)  _058_[5];
  assign _046_[7] = _051_[7] ^(* src = "./src/fifo.v:127|<techmap.v>:263" *)  _058_[6];
  assign _046_[8] = _051_[8] ^(* src = "./src/fifo.v:127|<techmap.v>:263" *)  _058_[7];
  assign _046_[9] = _051_[9] ^(* src = "./src/fifo.v:127|<techmap.v>:263" *)  _058_[8];
  assign _059_[1] = data_count[1] ^(* src = "./src/fifo.v:127|<techmap.v>:262" *)  1'h1;
  assign _050_[1] = data_count[1] &(* src = "./src/fifo.v:83|<techmap.v>:260|<techmap.v>:221" *)  _050_[0];
  assign _071_ = _020_[1] &(* src = "./src/fifo.v:83|<techmap.v>:260|<techmap.v>:221" *)  _050_[1];
  assign _074_ = _021_[1] &(* src = "./src/fifo.v:83|<techmap.v>:260|<techmap.v>:221" *)  _050_[3];
  assign _020_[4] = _051_[9] &(* src = "./src/fifo.v:83|<techmap.v>:260|<techmap.v>:222" *)  _051_[8];
  assign _075_ = _020_[4] &(* src = "./src/fifo.v:83|<techmap.v>:260|<techmap.v>:229" *)  _050_[7];
  assign _050_[0] = data_count[0] |(* src = "./src/fifo.v:83|<techmap.v>:260|<techmap.v>:212" *)  _013_[0];
  assign _076_ = data_count[5] |(* src = "./src/fifo.v:83|<techmap.v>:260|<techmap.v>:221" *)  _068_;
  assign _077_ = data_count[7] |(* src = "./src/fifo.v:83|<techmap.v>:260|<techmap.v>:221" *)  _069_;
  assign _073_ = data_count[9] |(* src = "./src/fifo.v:83|<techmap.v>:260|<techmap.v>:221" *)  _070_;
  assign _050_[3] = data_count[3] |(* src = "./src/fifo.v:83|<techmap.v>:260|<techmap.v>:221" *)  _071_;
  assign _050_[7] = _078_ |(* src = "./src/fifo.v:83|<techmap.v>:260|<techmap.v>:221" *)  _074_;
  assign _050_[31] = _073_ |(* src = "./src/fifo.v:83|<techmap.v>:260|<techmap.v>:221" *)  _075_;
  assign _024_[0] = data_count[1] &(* src = "./src/fifo.v:88|<techmap.v>:260|<techmap.v>:221" *)  data_count[0];
  assign _020_[1] = _029_[3] &(* src = "./src/fifo.v:88|<techmap.v>:260|<techmap.v>:221" *)  data_count[2];
  assign _069_ = _051_[7] &(* src = "./src/fifo.v:88|<techmap.v>:260|<techmap.v>:221" *)  data_count[6];
  assign _070_ = _051_[9] &(* src = "./src/fifo.v:88|<techmap.v>:260|<techmap.v>:221" *)  data_count[8];
  assign _025_[0] = _024_[1] &(* src = "./src/fifo.v:88|<techmap.v>:260|<techmap.v>:221" *)  _024_[0];
  assign _072_ = _020_[3] &(* src = "./src/fifo.v:88|<techmap.v>:260|<techmap.v>:221" *)  _076_;
  assign _079_ = _021_[1] &(* src = "./src/fifo.v:88|<techmap.v>:260|<techmap.v>:221" *)  _055_[3];
  assign _024_[1] = _029_[3] &(* src = "./src/fifo.v:88|<techmap.v>:260|<techmap.v>:222" *)  _056_[2];
  assign _020_[2] = _051_[5] &(* src = "./src/fifo.v:88|<techmap.v>:260|<techmap.v>:222" *)  _051_[4];
  assign _080_ = _020_[4] &(* src = "./src/fifo.v:88|<techmap.v>:260|<techmap.v>:229" *)  _055_[7];
  assign _081_ = data_count[3] |(* src = "./src/fifo.v:88|<techmap.v>:260|<techmap.v>:221" *)  _020_[1];
  assign _055_[3] = _081_ |(* src = "./src/fifo.v:88|<techmap.v>:260|<techmap.v>:221" *)  _025_[0];
  assign _078_ = _077_ |(* src = "./src/fifo.v:88|<techmap.v>:260|<techmap.v>:221" *)  _072_;
  assign _055_[7] = _078_ |(* src = "./src/fifo.v:88|<techmap.v>:260|<techmap.v>:221" *)  _079_;
  assign _055_[31] = _073_ |(* src = "./src/fifo.v:88|<techmap.v>:260|<techmap.v>:221" *)  _080_;
  assign _047_[1] = wr_ptr[1] &(* src = "./src/fifo.v:115|<techmap.v>:260|<techmap.v>:221" *)  wr_ptr[0];
  assign _047_[3] = _060_ &(* src = "./src/fifo.v:115|<techmap.v>:260|<techmap.v>:221" *)  _047_[1];
  assign _060_ = wr_ptr[3] &(* src = "./src/fifo.v:115|<techmap.v>:260|<techmap.v>:222" *)  wr_ptr[2];
  assign _061_ = wr_ptr[5] &(* src = "./src/fifo.v:115|<techmap.v>:260|<techmap.v>:222" *)  wr_ptr[4];
  assign _047_[5] = _061_ &(* src = "./src/fifo.v:115|<techmap.v>:260|<techmap.v>:229" *)  _047_[3];
  assign _047_[2] = wr_ptr[2] &(* src = "./src/fifo.v:115|<techmap.v>:260|<techmap.v>:229" *)  _047_[1];
  assign _047_[4] = wr_ptr[4] &(* src = "./src/fifo.v:115|<techmap.v>:260|<techmap.v>:229" *)  _047_[3];
  assign _047_[6] = wr_ptr[6] &(* src = "./src/fifo.v:115|<techmap.v>:260|<techmap.v>:229" *)  _047_[5];
  assign _048_[3] = _062_ &(* src = "./src/fifo.v:122|<techmap.v>:260|<techmap.v>:221" *)  _024_[0];
  assign _048_[7] = _065_ &(* src = "./src/fifo.v:122|<techmap.v>:260|<techmap.v>:221" *)  _048_[3];
  assign _062_ = data_count[3] &(* src = "./src/fifo.v:122|<techmap.v>:260|<techmap.v>:222" *)  data_count[2];
  assign _063_ = data_count[5] &(* src = "./src/fifo.v:122|<techmap.v>:260|<techmap.v>:222" *)  data_count[4];
  assign _064_ = data_count[7] &(* src = "./src/fifo.v:122|<techmap.v>:260|<techmap.v>:222" *)  data_count[6];
  assign _065_ = _064_ &(* src = "./src/fifo.v:122|<techmap.v>:260|<techmap.v>:222" *)  _063_;
  assign _048_[5] = _063_ &(* src = "./src/fifo.v:122|<techmap.v>:260|<techmap.v>:229" *)  _048_[3];
  assign _048_[2] = data_count[2] &(* src = "./src/fifo.v:122|<techmap.v>:260|<techmap.v>:229" *)  _024_[0];
  assign _048_[4] = data_count[4] &(* src = "./src/fifo.v:122|<techmap.v>:260|<techmap.v>:229" *)  _048_[3];
  assign _048_[6] = data_count[6] &(* src = "./src/fifo.v:122|<techmap.v>:260|<techmap.v>:229" *)  _048_[5];
  assign _048_[8] = data_count[8] &(* src = "./src/fifo.v:122|<techmap.v>:260|<techmap.v>:229" *)  _048_[7];
  assign _049_[1] = rd_ptr[1] &(* src = "./src/fifo.v:125|./src/fifo.v:115|<techmap.v>:260|<techmap.v>:221" *)  rd_ptr[0];
  assign _049_[3] = _066_ &(* src = "./src/fifo.v:125|./src/fifo.v:115|<techmap.v>:260|<techmap.v>:221" *)  _049_[1];
  assign _066_ = rd_ptr[3] &(* src = "./src/fifo.v:125|./src/fifo.v:115|<techmap.v>:260|<techmap.v>:222" *)  rd_ptr[2];
  assign _067_ = rd_ptr[5] &(* src = "./src/fifo.v:125|./src/fifo.v:115|<techmap.v>:260|<techmap.v>:222" *)  rd_ptr[4];
  assign _049_[5] = _067_ &(* src = "./src/fifo.v:125|./src/fifo.v:115|<techmap.v>:260|<techmap.v>:229" *)  _049_[3];
  assign _049_[2] = rd_ptr[2] &(* src = "./src/fifo.v:125|./src/fifo.v:115|<techmap.v>:260|<techmap.v>:229" *)  _049_[1];
  assign _049_[4] = rd_ptr[4] &(* src = "./src/fifo.v:125|./src/fifo.v:115|<techmap.v>:260|<techmap.v>:229" *)  _049_[3];
  assign _049_[6] = rd_ptr[6] &(* src = "./src/fifo.v:125|./src/fifo.v:115|<techmap.v>:260|<techmap.v>:229" *)  _049_[5];
  assign _082_ = _059_[1] &(* src = "./src/fifo.v:127|<techmap.v>:260|<techmap.v>:221" *)  data_count[0];
  assign _068_ = _051_[5] &(* src = "./src/fifo.v:127|<techmap.v>:260|<techmap.v>:221" *)  data_count[4];
  assign _083_ = _024_[1] &(* src = "./src/fifo.v:127|<techmap.v>:260|<techmap.v>:221" *)  _058_[1];
  assign _084_ = _021_[1] &(* src = "./src/fifo.v:127|<techmap.v>:260|<techmap.v>:221" *)  _058_[3];
  assign _020_[3] = _051_[7] &(* src = "./src/fifo.v:127|<techmap.v>:260|<techmap.v>:222" *)  _051_[6];
  assign _021_[1] = _020_[3] &(* src = "./src/fifo.v:127|<techmap.v>:260|<techmap.v>:222" *)  _020_[2];
  assign _085_ = _020_[2] &(* src = "./src/fifo.v:127|<techmap.v>:260|<techmap.v>:229" *)  _058_[3];
  assign _086_ = _056_[2] &(* src = "./src/fifo.v:127|<techmap.v>:260|<techmap.v>:229" *)  _058_[1];
  assign _087_ = _051_[4] &(* src = "./src/fifo.v:127|<techmap.v>:260|<techmap.v>:229" *)  _058_[3];
  assign _088_ = _051_[6] &(* src = "./src/fifo.v:127|<techmap.v>:260|<techmap.v>:229" *)  _058_[5];
  assign _089_ = _051_[8] &(* src = "./src/fifo.v:127|<techmap.v>:260|<techmap.v>:229" *)  _058_[7];
  assign _058_[1] = data_count[1] |(* src = "./src/fifo.v:127|<techmap.v>:260|<techmap.v>:221" *)  _082_;
  assign _058_[3] = _081_ |(* src = "./src/fifo.v:127|<techmap.v>:260|<techmap.v>:221" *)  _083_;
  assign _058_[7] = _078_ |(* src = "./src/fifo.v:127|<techmap.v>:260|<techmap.v>:221" *)  _084_;
  assign _058_[5] = _076_ |(* src = "./src/fifo.v:127|<techmap.v>:260|<techmap.v>:229" *)  _085_;
  assign _058_[2] = data_count[2] |(* src = "./src/fifo.v:127|<techmap.v>:260|<techmap.v>:229" *)  _086_;
  assign _058_[4] = data_count[4] |(* src = "./src/fifo.v:127|<techmap.v>:260|<techmap.v>:229" *)  _087_;
  assign _058_[6] = data_count[6] |(* src = "./src/fifo.v:127|<techmap.v>:260|<techmap.v>:229" *)  _088_;
  assign _058_[8] = data_count[8] |(* src = "./src/fifo.v:127|<techmap.v>:260|<techmap.v>:229" *)  _089_;
  (* src = "./src/fifo.v:40" *)
  \$paramod\memory_syn\DATA_SIZE=10\MAIN_SIZE=8  mem (
    .clk(clk),
    .data_in(data_in_push),
    .data_out(data_out),
    .rd_ptr(rd_ptr),
    .read(read),
    .reset(reset),
    .wr_ptr(wr_ptr),
    .write(write)
  );
  assign _011_[31:9] = 23'h000000;
  assign _012_[31:9] = 23'h000000;
  assign _013_[31:11] = 21'h000000;
  assign { _017_[4:2], _017_[0] } = { _014_[4:2], _014_[0] };
  assign _018_[1] = _015_[1];
  assign _020_[15:5] = 11'h7ff;
  assign _021_[7:2] = { 5'h1f, _020_[4] };
  assign _022_[3:1] = { 2'h3, _020_[4] };
  assign _023_[1] = 1'h1;
  assign _024_[15:2] = { 11'h7ff, _020_[4:2] };
  assign _025_[7:1] = { 5'h1f, _020_[4], _021_[1] };
  assign _026_[3:1] = { 2'h3, _020_[4] };
  assign _027_[1] = 1'h1;
  assign { _029_[9:4], _029_[2:0] } = { data_count[9:4], data_count[2:0] };
  assign { _046_[30:10], _046_[0] } = { _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _046_[31], _013_[0] };
  assign { _047_[31:7], _047_[0] } = { 24'h000000, _011_[8], wr_ptr[0] };
  assign { _048_[31:9], _048_[1:0] } = { 22'h000000, _013_[10], _024_[0], data_count[0] };
  assign { _049_[31:7], _049_[0] } = { 24'h000000, _012_[8], rd_ptr[0] };
  assign _050_[30:9] = { _050_[31], _050_[31], _050_[31], _050_[31], _050_[31], _050_[31], _050_[31], _050_[31], _050_[31], _050_[31], _050_[31], _050_[31], _050_[31], _050_[31], _050_[31], _050_[31], _050_[31], _050_[31], _050_[31], _050_[31], _050_[31], _050_[31] };
  assign { _051_[31:10], _051_[3:0] } = { 22'h3fffff, _029_[3], data_count[2:1], _013_[0] };
  assign { _055_[30:9], _055_[1:0] } = { _055_[31], _055_[31], _055_[31], _055_[31], _055_[31], _055_[31], _055_[31], _055_[31], _055_[31], _055_[31], _055_[31], _055_[31], _055_[31], _055_[31], _055_[31], _055_[31], _055_[31], _055_[31], _055_[31], _055_[31], _055_[31], _055_[31], _024_[0], data_count[0] };
  assign { _056_[31:3], _056_[1:0] } = { 22'h3fffff, _051_[9:4], _029_[3], data_count[1:0] };
  assign { _058_[30:9], _058_[0] } = { _058_[31], _058_[31], _058_[31], _058_[31], _058_[31], _058_[31], _058_[31], _058_[31], _058_[31], _058_[31], _058_[31], _058_[31], _058_[31], _058_[31], _058_[31], _058_[31], _058_[31], _058_[31], _058_[31], _058_[31], _058_[31], _058_[31], data_count[0] };
  assign { _059_[31:2], _059_[0] } = { 22'h3fffff, _051_[9:4], _029_[3], _056_[2], data_count[0] };
  assign datamod = 1'h0;
endmodule
